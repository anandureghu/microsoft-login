{"version":3,"file":"static/js/main.11ef2775.js","mappings":"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","sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/msal/node_modules/tslib/tslib.es6.js","../node_modules/msal/src/utils/CryptoUtils.ts","../node_modules/msal/src/utils/Constants.ts","../node_modules/msal/src/authority/Authority.ts","../node_modules/msal/src/error/AuthError.ts","../node_modules/msal/src/utils/StringUtils.ts","../node_modules/msal/src/error/ClientAuthError.ts","../node_modules/msal/src/error/ClientConfigurationError.ts","../node_modules/msal/src/ScopeSet.ts","../node_modules/msal/src/utils/UrlUtils.ts","../node_modules/msal/src/cache/AccessTokenKey.ts","../node_modules/msal/src/cache/AccessTokenValue.ts","../node_modules/msal/src/packageMetadata.ts","../node_modules/msal/src/ServerRequestParameters.ts","../node_modules/msal/src/XHRClient.ts","../node_modules/msal/src/authority/TrustedAuthority.ts","../node_modules/msal/src/Logger.ts","../node_modules/msal/src/ClientInfo.ts","../node_modules/msal/src/utils/TimeUtils.ts","../node_modules/msal/src/utils/TokenUtils.ts","../node_modules/msal/src/IdToken.ts","../node_modules/msal/src/cache/AccessTokenCacheItem.ts","../node_modules/msal/src/cache/BrowserStorage.ts","../node_modules/msal/src/utils/RequestUtils.ts","../node_modules/msal/src/cache/AuthCache.ts","../node_modules/msal/src/Account.ts","../node_modules/msal/src/utils/WindowUtils.ts","../node_modules/msal/src/utils/ResponseUtils.ts","../node_modules/msal/src/authority/AuthorityFactory.ts","../node_modules/msal/src/Configuration.ts","../node_modules/msal/src/error/ServerError.ts","../node_modules/msal/src/error/InteractionRequiredAuthError.ts","../node_modules/msal/src/AuthResponse.ts","../node_modules/msal/src/telemetry/TelemetryConstants.ts","../node_modules/msal/src/telemetry/ApiEvent.ts","../node_modules/msal/src/telemetry/TelemetryUtils.ts","../node_modules/msal/src/telemetry/TelemetryEvent.ts","../node_modules/msal/src/telemetry/DefaultEvent.ts","../node_modules/msal/src/telemetry/HttpEvent.ts","../node_modules/msal/src/telemetry/TelemetryManager.ts","../node_modules/msal/src/utils/AuthCacheUtils.ts","../node_modules/msal/src/UserAgentApplication.ts","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../../src/MicrosoftLogin.tsx","../../src/MicrosoftLoginButton.tsx","../../src/helpers.ts","../../src/index.ts","../node_modules/react-redux/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-redux/node_modules/react-is/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/use-sync-external-store/shim/with-selector.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/react-redux/es/utils/batch.js","../node_modules/react-redux/es/components/Context.js","../node_modules/react-redux/es/hooks/useReduxContext.js","../node_modules/react-redux/es/utils/useSyncExternalStore.js","../node_modules/react-redux/es/hooks/useSelector.js","../node_modules/react-redux/es/utils/Subscription.js","../node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js","../node_modules/react-redux/es/components/Provider.js","../node_modules/react-redux/es/hooks/useStore.js","../node_modules/react-redux/es/hooks/useDispatch.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/react-redux/es/index.js","../node_modules/react-redux/es/components/connect.js","../../packages/react-router/lib/context.ts","../../packages/react-router/lib/router.ts","../../packages/react-router/lib/hooks.tsx","../../packages/react-router/lib/components.tsx","../../packages/react-router-dom/index.tsx","../node_modules/immer/src/utils/errors.ts","../node_modules/immer/src/utils/common.ts","../node_modules/immer/src/utils/plugins.ts","../node_modules/immer/src/core/scope.ts","../node_modules/immer/src/core/finalize.ts","../node_modules/immer/src/core/proxy.ts","../node_modules/immer/src/core/immerClass.ts","../node_modules/immer/src/core/current.ts","../node_modules/immer/src/plugins/es5.ts","../node_modules/immer/src/immer.ts","../node_modules/immer/src/utils/env.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/redux/es/redux.js","../node_modules/redux-thunk/es/index.js","../node_modules/@reduxjs/toolkit/src/devtoolsExtension.ts","../node_modules/@reduxjs/toolkit/src/isPlainObject.ts","../node_modules/@reduxjs/toolkit/src/utils.ts","../node_modules/@reduxjs/toolkit/src/getDefaultMiddleware.ts","../node_modules/@reduxjs/toolkit/src/createAction.ts","../node_modules/@reduxjs/toolkit/src/mapBuilders.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/index.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/utils.ts","../node_modules/@reduxjs/toolkit/src/index.ts","utils/constants.js","redux/slice/user.js","../node_modules/@reduxjs/toolkit/src/createSlice.ts","../node_modules/@reduxjs/toolkit/src/createReducer.ts","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx","components/MicrosoftLogin/Microsoft.jsx","pages/Login.jsx","pages/NotFound.jsx","App.js","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceEvent.ts","../node_modules/@azure/msal-common/src/utils/Constants.ts","../node_modules/@azure/msal-browser/src/utils/BrowserConstants.ts","../node_modules/@azure/msal-browser/src/crypto/CryptoOps.ts","../node_modules/@azure/msal-common/src/error/AuthError.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderError.ts","../node_modules/@azure/msal-common/src/crypto/JoseHeader.ts","../node_modules/@azure/msal-browser/src/utils/MathUtils.ts","../node_modules/@azure/msal-browser/src/crypto/GuidGenerator.ts","../node_modules/@azure/msal-browser/src/utils/BrowserStringUtils.ts","../node_modules/@azure/msal-browser/src/encode/Base64Encode.ts","../node_modules/@azure/msal-browser/src/encode/Base64Decode.ts","../node_modules/@azure/msal-common/src/error/ClientAuthError.ts","../node_modules/@azure/msal-common/src/utils/StringUtils.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts","../node_modules/@azure/msal-browser/src/crypto/PkceGenerator.ts","../node_modules/@azure/msal-browser/src/crypto/BrowserCrypto.ts","../node_modules/@azure/msal-browser/src/cache/DatabaseStorage.ts","../node_modules/@azure/msal-browser/src/cache/MemoryStorage.ts","../node_modules/@azure/msal-browser/src/cache/AsyncMemoryStorage.ts","../node_modules/@azure/msal-common/src/logger/Logger.ts","../node_modules/@azure/msal-common/src/authority/AuthorityType.ts","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceClient.ts","../node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts","../node_modules/@azure/msal-common/src/crypto/ICrypto.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts","../node_modules/@azure/msal-common/src/error/ServerError.ts","../node_modules/@azure/msal-common/src/account/ClientInfo.ts","../node_modules/@azure/msal-common/src/cache/entities/AccountEntity.ts","../node_modules/@azure/msal-common/src/account/CcsCredential.ts","../node_modules/@azure/msal-common/src/cache/entities/CredentialEntity.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationError.ts","../node_modules/@azure/msal-common/src/request/ScopeSet.ts","../node_modules/@azure/msal-common/src/account/AuthToken.ts","../node_modules/@azure/msal-common/src/cache/CacheManager.ts","../node_modules/@azure/msal-common/src/cache/entities/IdTokenEntity.ts","../node_modules/@azure/msal-common/src/utils/TimeUtils.ts","../node_modules/@azure/msal-common/src/cache/entities/AccessTokenEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/RefreshTokenEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/AppMetadataEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/ServerTelemetryEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/AuthorityMetadataEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/ThrottlingEntity.ts","../node_modules/@azure/msal-common/src/utils/ProtocolUtils.ts","../node_modules/@azure/msal-common/src/authority/ProtocolMode.ts","../node_modules/@azure/msal-common/src/authority/AuthorityOptions.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts","../node_modules/@azure/msal-browser/src/cache/BrowserStorage.ts","../node_modules/@azure/msal-common/src/url/UrlString.ts","../node_modules/@azure/msal-browser/src/utils/BrowserProtocolUtils.ts","../node_modules/@azure/msal-browser/src/cache/BrowserCacheManager.ts","../node_modules/@azure/msal-common/src/packageMetadata.ts","../node_modules/@azure/msal-common/src/config/ClientConfiguration.ts","../node_modules/@azure/msal-common/src/network/INetworkModule.ts","../node_modules/@azure/msal-browser/src/network/FetchClient.ts","../node_modules/@azure/msal-browser/src/network/XhrClient.ts","../node_modules/@azure/msal-browser/src/utils/BrowserUtils.ts","../node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts","../node_modules/@azure/msal-browser/src/config/Configuration.ts","../node_modules/@azure/msal-browser/src/event/EventType.ts","../node_modules/@azure/msal-browser/src/packageMetadata.ts","../node_modules/@azure/msal-common/src/crypto/PopTokenGenerator.ts","../node_modules/@azure/msal-browser/src/event/EventHandler.ts","../node_modules/@azure/msal-common/src/network/ThrottlingUtils.ts","../node_modules/@azure/msal-common/src/network/NetworkManager.ts","../node_modules/@azure/msal-common/src/client/BaseClient.ts","../node_modules/@azure/msal-common/src/request/RequestValidator.ts","../node_modules/@azure/msal-common/src/request/RequestParameterBuilder.ts","../node_modules/@azure/msal-common/src/cache/entities/CacheRecord.ts","../node_modules/@azure/msal-common/src/cache/persistence/TokenCacheContext.ts","../node_modules/@azure/msal-common/src/response/ResponseHandler.ts","../node_modules/@azure/msal-common/src/client/AuthorizationCodeClient.ts","../node_modules/@azure/msal-common/src/authority/OpenIdConfigResponse.ts","../node_modules/@azure/msal-common/src/authority/AuthorityMetadata.ts","../node_modules/@azure/msal-common/src/authority/RegionDiscovery.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthError.ts","../node_modules/@azure/msal-common/src/authority/Authority.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryResponse.ts","../node_modules/@azure/msal-common/src/authority/AuthorityFactory.ts","../node_modules/@azure/msal-common/src/telemetry/server/ServerTelemetryManager.ts","../node_modules/@azure/msal-browser/src/interaction_client/BaseInteractionClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/StandardInteractionClient.ts","../node_modules/@azure/msal-common/src/client/RefreshTokenClient.ts","../node_modules/@azure/msal-common/src/client/SilentFlowClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentCacheClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/NativeInteractionClient.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeMessageHandler.ts","../node_modules/@azure/msal-browser/src/interaction_handler/InteractionHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/PopupClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/RedirectHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/RedirectClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/SilentHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentIframeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentRefreshClient.ts","../node_modules/@azure/msal-browser/src/cache/TokenCache.ts","../node_modules/@azure/msal-browser/src/interaction_client/HybridSpaAuthorizationCodeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentAuthCodeClient.ts","../node_modules/@azure/msal-browser/src/telemetry/BrowserPerformanceMeasurement.ts","../node_modules/@azure/msal-browser/src/telemetry/BrowserPerformanceClient.ts","../node_modules/@azure/msal-browser/src/app/ClientApplication.ts","../node_modules/@azure/msal-browser/src/app/PublicClientApplication.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@azure/msal-browser/src/app/IPublicClientApplication.ts","../node_modules/@azure/msal-browser/src/event/EventMessage.ts","../node_modules/@azure/msal-react/src/MsalContext.ts","../node_modules/@azure/msal-react/src/utils/utilities.ts","../node_modules/@azure/msal-react/src/packageMetadata.ts","../node_modules/@azure/msal-react/src/MsalProvider.tsx","authConfig.js","redux/store.js","../node_modules/@reduxjs/toolkit/src/configureStore.ts","index.js"],"sourcesContent":["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class CryptoUtils {\n\n    /**\n     * Creates a new random GUID\n     * @returns string (GUID)\n     */\n    static createNewGuid(): string {\n        /*\n         * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\n         * pseudo-random numbers.\n         * The algorithm is as follows:\n         *     Set the two most significant bits (bits 6 and 7) of the\n         *        clock_seq_hi_and_reserved to zero and one, respectively.\n         *     Set the four most significant bits (bits 12 through 15) of the\n         *        time_hi_and_version field to the 4-bit version number from\n         *        Section 4.1.3. Version4\n         *     Set all the other bits to randomly (or pseudo-randomly) chosen\n         *     values.\n         * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\n         * time-low               = 4hexOctet\n         * time-mid               = 2hexOctet\n         * time-high-and-version  = 2hexOctet\n         * clock-seq-and-reserved = hexOctet:\n         * clock-seq-low          = hexOctet\n         * node                   = 6hexOctet\n         * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n         * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\n         * y values are 8, 9, A, B\n         */\n\n        const cryptoObj: Crypto = window.crypto; // for IE 11\n        if (cryptoObj && cryptoObj.getRandomValues) {\n            const buffer: Uint8Array = new Uint8Array(16);\n            cryptoObj.getRandomValues(buffer);\n\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\n\n            return CryptoUtils.decimalToHex(buffer[0]) + CryptoUtils.decimalToHex(buffer[1])\n                + CryptoUtils.decimalToHex(buffer[2]) + CryptoUtils.decimalToHex(buffer[3])\n                + \"-\" + CryptoUtils.decimalToHex(buffer[4]) + CryptoUtils.decimalToHex(buffer[5])\n                + \"-\" + CryptoUtils.decimalToHex(buffer[6]) + CryptoUtils.decimalToHex(buffer[7])\n                + \"-\" + CryptoUtils.decimalToHex(buffer[8]) + CryptoUtils.decimalToHex(buffer[9])\n                + \"-\" + CryptoUtils.decimalToHex(buffer[10]) + CryptoUtils.decimalToHex(buffer[11])\n                + CryptoUtils.decimalToHex(buffer[12]) + CryptoUtils.decimalToHex(buffer[13])\n                + CryptoUtils.decimalToHex(buffer[14]) + CryptoUtils.decimalToHex(buffer[15]);\n        }\n        else {\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n            const hex: string = \"0123456789abcdef\";\n            let r: number = 0;\n            let guidResponse: string = \"\";\n            for (let i: number = 0; i < 36; i++) {\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n                    // each x and y needs to be random\n                    r = Math.random() * 16 | 0;\n                }\n                if (guidHolder[i] === \"x\") {\n                    guidResponse += hex[r];\n                } else if (guidHolder[i] === \"y\") {\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n                    r |= 0x8; // set pos 3 to 1 as 1???\n                    guidResponse += hex[r];\n                } else {\n                    guidResponse += guidHolder[i];\n                }\n            }\n            return guidResponse;\n        }\n    }\n\n    /**\n     * verifies if a string is  GUID\n     * @param guid\n     */\n    static isGuid(guid: string): boolean {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n\n    /**\n     * Decimal to Hex\n     *\n     * @param num\n     */\n    static decimalToHex(num: number): string {\n        let hex: string = num.toString(16);\n        while (hex.length < 2) {\n            hex = \"0\" + hex;\n        }\n        return hex;\n    }\n\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_4_%E2%80%93_escaping_the_string_before_encoding_it\n\n    /**\n     * encoding string to base64 - platform specific check\n     *\n     * @param input\n     */\n    static base64Encode(input: string): string {\n        return btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g,\n            function toSolidBytes(match, p1) {\n                return String.fromCharCode(Number(\"0x\" + p1));\n            }));\n    }\n\n    /**\n     * Decodes a base64 encoded string.\n     *\n     * @param input\n     */\n    static base64Decode(input: string): string {\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (encodedString.length % 4) {\n            case 0:\n                break;\n            case 2:\n                encodedString += \"==\";\n                break;\n            case 3:\n                encodedString += \"=\";\n                break;\n            default:\n                throw new Error(\"Invalid base64 string\");\n        }\n\n        return decodeURIComponent(atob(encodedString).split(\"\").map(function (c) {\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(\"\"));\n    }\n\n    /**\n     * deserialize a string\n     *\n     * @param query\n     */\n    static deserialize(query: string): object {\n        let match: Array<string>; // Regex for replacing addition symbol with a space\n        const pl = /\\+/g;\n        const search = /([^&=]+)=([^&]*)/g;\n        const decode = (s: string) => decodeURIComponent(s.replace(pl, \" \"));\n        const obj: {} = {};\n        match = search.exec(query);\n        while (match) {\n            obj[decode(match[1])] = decode(match[2]);\n            match = search.exec(query);\n        }\n        return obj;\n    }\n\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n * Constants\n */\nexport class Constants {\n    static get libraryName(): string { return \"Msal.js\"; } // used in telemetry sdkName\n    static get claims(): string { return \"claims\"; }\n    static get clientId(): string { return \"clientId\"; }\n\n    static get adalIdToken(): string { return \"adal.idtoken\"; }\n    static get cachePrefix(): string { return \"msal\"; }\n    static get scopes(): string { return \"scopes\"; }\n\n    static get no_account(): string { return \"NO_ACCOUNT\"; }\n    static get upn(): string { return \"upn\"; }\n    static get domain_hint(): string { return \"domain_hint\"; }\n\n    static get prompt_select_account(): string { return \"&prompt=select_account\"; }\n    static get prompt_none(): string { return \"&prompt=none\"; }\n    static get prompt(): string { return \"prompt\"; }\n\n    static get response_mode_fragment(): string { return \"&response_mode=fragment\"; }\n    static get resourceDelimiter(): string { return \"|\"; }\n    static get cacheDelimiter(): string { return \".\"; }\n\n    private static _popUpWidth: number = 483;\n    static get popUpWidth(): number { return this._popUpWidth; }\n    static set popUpWidth(width: number) {\n        this._popUpWidth = width;\n    }\n    private static _popUpHeight: number = 600;\n    static get popUpHeight(): number { return this._popUpHeight; }\n    static set popUpHeight(height: number) {\n        this._popUpHeight = height;\n    }\n\n    static get login(): string { return \"LOGIN\"; }\n    static get renewToken(): string { return \"RENEW_TOKEN\"; }\n    static get unknown(): string { return \"UNKNOWN\"; }\n\n    static get ADFS(): string { return \"adfs\"; }\n\n    static get homeAccountIdentifier(): string { return \"homeAccountIdentifier\"; }\n\n    static get common(): string { return \"common\"; }\n    static get openidScope(): string { return \"openid\"; }\n    static get profileScope(): string { return \"profile\"; }\n    static get oidcScopes(): Array<string> { return [this.openidScope, this.profileScope] ;}\n\n    static get interactionTypeRedirect(): InteractionType { return \"redirectInteraction\"; }\n    static get interactionTypePopup(): InteractionType { return \"popupInteraction\"; }\n    static get interactionTypeSilent(): InteractionType { return \"silentInteraction\"; }\n    static get inProgress(): string { return \"inProgress\"; }\n}\n\nexport const SESSION_STORAGE = \"sessionStorage\";\n\n/**\n * Keys in the hashParams\n */\nexport enum ServerHashParamKeys {\n    SCOPE = \"scope\",\n    STATE = \"state\",\n    ERROR = \"error\",\n    ERROR_DESCRIPTION = \"error_description\",\n    ACCESS_TOKEN = \"access_token\",\n    ID_TOKEN = \"id_token\",\n    EXPIRES_IN = \"expires_in\",\n    SESSION_STATE = \"session_state\",\n    CLIENT_INFO = \"client_info\"\n}\n\n/**\n * @hidden\n * @ignore\n * response_type from OpenIDConnect\n * References: https://openid.net/specs/oauth-v2-multiple-response-types-1_0.html & https://tools.ietf.org/html/rfc6749#section-4.2.1\n *\n */\nexport const ResponseTypes = {\n    id_token: \"id_token\",\n    token: \"token\",\n    id_token_token: \"id_token token\"\n};\n\n/**\n * @hidden\n * CacheKeys for MSAL\n */\nexport enum TemporaryCacheKeys {\n    AUTHORITY = \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireTokenAccount\",\n    SESSION_STATE = \"session.state\",\n    STATE_LOGIN = \"state.login\",\n    STATE_ACQ_TOKEN = \"state.acquireToken\",\n    STATE_RENEW = \"state.renew\",\n    NONCE_IDTOKEN = \"nonce.idtoken\",\n    LOGIN_REQUEST = \"login.request\",\n    RENEW_STATUS = \"token.renew.status\",\n    URL_HASH = \"urlHash\",\n    INTERACTION_STATUS = \"interaction.status\",\n    REDIRECT_REQUEST = \"redirect_request\"\n}\n\nexport enum PersistentCacheKeys {\n    IDTOKEN = \"idtoken\",\n    CLIENT_INFO = \"client.info\"\n}\n\nexport enum ErrorCacheKeys {\n    LOGIN_ERROR = \"login.error\",\n    ERROR = \"error\",\n    ERROR_DESC = \"error.description\"\n}\n\nexport const DEFAULT_AUTHORITY: string = \"https://login.microsoftonline.com/common/\";\nexport const AAD_INSTANCE_DISCOVERY_ENDPOINT: string = `${DEFAULT_AUTHORITY}/discovery/instance?api-version=1.1&authorization_endpoint=`;\nexport const WELL_KNOWN_SUFFIX: string = \".well-known/openid-configuration\";\n\n/**\n * @hidden\n * SSO Types - generated to populate hints\n */\nexport enum SSOTypes {\n    ACCOUNT = \"account\",\n    SID = \"sid\",\n    LOGIN_HINT = \"login_hint\",\n    ORGANIZATIONS = \"organizations\",\n    CONSUMERS = \"consumers\",\n    ID_TOKEN =\"id_token\",\n    ACCOUNT_ID = \"accountIdentifier\",\n    HOMEACCOUNT_ID = \"homeAccountIdentifier\"\n}\n\n/**\n * @hidden\n */\nexport const BlacklistedEQParams = [\n    SSOTypes.SID,\n    SSOTypes.LOGIN_HINT\n];\n\nexport type InteractionType = \"redirectInteraction\" | \"popupInteraction\" | \"silentInteraction\";\n\nexport const NetworkRequestType = {\n    GET: \"GET\",\n    POST: \"POST\"\n};\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n * @hidden\n */\nexport const PromptState = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\"\n};\n\n/**\n * Frame name prefixes for the hidden iframe created in silent frames\n */\nexport const FramePrefix = {\n    ID_TOKEN_FRAME: \"msalIdTokenFrame\",\n    TOKEN_FRAME: \"msalRenewFrame\"\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IUri } from \"../IUri\";\nimport { ITenantDiscoveryResponse } from \"./ITenantDiscoveryResponse\";\nimport { ClientConfigurationErrorMessage, ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { XhrClient, XhrResponse } from \"../XHRClient\";\nimport { UrlUtils } from \"../utils/UrlUtils\";\nimport TelemetryManager from \"../telemetry/TelemetryManager\";\nimport HttpEvent from \"../telemetry/HttpEvent\";\nimport { TrustedAuthority } from \"./TrustedAuthority\";\nimport { NetworkRequestType, Constants, WELL_KNOWN_SUFFIX } from \"../utils/Constants\";\n\n/**\n * @hidden\n */\nexport enum AuthorityType {\n    Default,\n    Adfs\n}\n\n/**\n * @hidden\n */\nexport class Authority {\n    constructor(authority: string, validateAuthority: boolean, authorityMetadata?: ITenantDiscoveryResponse) {\n        this.IsValidationEnabled = validateAuthority;\n        this.CanonicalAuthority = authority;\n\n        this.validateAsUri();\n        this.tenantDiscoveryResponse = authorityMetadata;\n    }\n\n    public static isAdfs(authorityUrl: string): boolean {\n        const components = UrlUtils.GetUrlComponents(authorityUrl);\n        const pathSegments = components.PathSegments;\n\n        return (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS);\n    }\n\n    public get AuthorityType(): AuthorityType {\n        return Authority.isAdfs(this.canonicalAuthority)? AuthorityType.Adfs : AuthorityType.Default;\n    }\n\n    public IsValidationEnabled: boolean;\n\n    public get Tenant(): string {\n        return this.CanonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    private tenantDiscoveryResponse: ITenantDiscoveryResponse;\n\n    public get AuthorizationEndpoint(): string {\n        this.validateResolved();\n        return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\n    }\n\n    public get EndSessionEndpoint(): string {\n        this.validateResolved();\n        return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\n    }\n\n    public get SelfSignedJwtAudience(): string {\n        this.validateResolved();\n        return this.tenantDiscoveryResponse.Issuer.replace(/{tenant}|{tenantid}/g, this.Tenant);\n    }\n\n    private validateResolved() {\n        if (!this.hasCachedMetadata()) {\n            throw \"Please call ResolveEndpointsAsync first\";\n        }\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get CanonicalAuthority(): string {\n        return this.canonicalAuthority;\n    }\n\n    public set CanonicalAuthority(url: string) {\n        this.canonicalAuthority = UrlUtils.CanonicalizeUri(url);\n        this.canonicalAuthorityUrlComponents = null;\n    }\n\n    private canonicalAuthority: string;\n    private canonicalAuthorityUrlComponents: IUri;\n\n    public get CanonicalAuthorityUrlComponents(): IUri {\n        if (!this.canonicalAuthorityUrlComponents) {\n            this.canonicalAuthorityUrlComponents = UrlUtils.GetUrlComponents(this.CanonicalAuthority);\n        }\n\n        return this.canonicalAuthorityUrlComponents;\n    }\n\n    // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\n    protected get DefaultOpenIdConfigurationEndpoint(): string {\n        return (this.AuthorityType === AuthorityType.Adfs)? `${this.CanonicalAuthority}${WELL_KNOWN_SUFFIX}` : `${this.CanonicalAuthority}v2.0/${WELL_KNOWN_SUFFIX}`;\n    }\n\n    /**\n     * Given a string, validate that it is of the form https://domain/path\n     */\n    private validateAsUri() {\n        let components;\n        try {\n            components = this.CanonicalAuthorityUrlComponents;\n        } catch (e) {\n            throw ClientConfigurationErrorMessage.invalidAuthorityType;\n        }\n\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\n            throw ClientConfigurationErrorMessage.authorityUriInsecure;\n        }\n\n        if (!components.PathSegments || components.PathSegments.length < 1) {\n            throw ClientConfigurationErrorMessage.authorityUriInvalidPath;\n        }\n    }\n\n    /**\n     * Calls the OIDC endpoint and returns the response\n     */\n    private DiscoverEndpoints(openIdConfigurationEndpoint: string, telemetryManager: TelemetryManager, correlationId: string): Promise<ITenantDiscoveryResponse> {\n        const client = new XhrClient();\n\n        const httpMethod = NetworkRequestType.GET;\n        const httpEvent: HttpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, openIdConfigurationEndpoint, \"openIdConfigurationEndpoint\");\n\n        return client.sendRequestAsync(openIdConfigurationEndpoint, httpMethod, /* enableCaching: */ true)\n            .then((response: XhrResponse) => {\n                httpEvent.httpResponseStatus = response.statusCode;\n                telemetryManager.stopEvent(httpEvent);\n                return <ITenantDiscoveryResponse>{\n                    AuthorizationEndpoint: response.body[\"authorization_endpoint\"],\n                    EndSessionEndpoint: response.body[\"end_session_endpoint\"],\n                    Issuer: response.body[\"issuer\"]\n                };\n            })\n            .catch(err => {\n                httpEvent.serverErrorCode = err;\n                telemetryManager.stopEvent(httpEvent);\n                throw err;\n            });\n    }\n\n    /**\n     * Returns a promise.\n     * Checks to see if the authority is in the cache\n     * Discover endpoints via openid-configuration\n     * If successful, caches the endpoint for later use in OIDC\n     */\n    public async resolveEndpointsAsync(telemetryManager: TelemetryManager, correlationId: string): Promise<ITenantDiscoveryResponse> {\n        if (this.IsValidationEnabled) {\n            const host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\n            if (TrustedAuthority.getTrustedHostList().length === 0) {\n                await TrustedAuthority.setTrustedAuthoritiesFromNetwork(this.canonicalAuthority, telemetryManager, correlationId);\n            }\n\n            if (!TrustedAuthority.IsInTrustedHostList(host)) {\n                throw ClientConfigurationError.createUntrustedAuthorityError(host);\n            }\n        }\n        const openIdConfigurationEndpointResponse = this.GetOpenIdConfigurationEndpoint();\n        this.tenantDiscoveryResponse = await this.DiscoverEndpoints(openIdConfigurationEndpointResponse, telemetryManager, correlationId);\n\n        return this.tenantDiscoveryResponse;\n    }\n\n    /**\n     * Checks if there is a cached tenant discovery response with required fields.\n     */\n    public hasCachedMetadata(): boolean {\n        return !!(this.tenantDiscoveryResponse &&\n            this.tenantDiscoveryResponse.AuthorizationEndpoint &&\n            this.tenantDiscoveryResponse.EndSessionEndpoint &&\n            this.tenantDiscoveryResponse.Issuer);\n    }\n\n    /**\n     * Returns a promise which resolves to the OIDC endpoint\n     * Only responds with the endpoint\n     */\n    public GetOpenIdConfigurationEndpoint(): string {\n        return this.DefaultOpenIdConfigurationEndpoint;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: \"unexpected_error\",\n        desc: \"Unexpected error in authentication.\"\n    },\n    noWindowObjectError: {\n        code: \"no_window_object\",\n        desc: \"No window object available. Details:\"\n    }\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n\n    errorCode: string;\n    errorMessage: string;\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorMessage);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode;\n        this.errorMessage = errorMessage;\n        this.name = \"AuthError\";\n    }\n\n    static createUnexpectedError(errDesc: string): AuthError {\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n    }\n\n    static createNoWindowObjectError(errDesc: string): AuthError {\n        return new AuthError(AuthErrorMessage.noWindowObjectError.code, `${AuthErrorMessage.noWindowObjectError.desc} ${errDesc}`);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccessTokenKey } from \"../cache/AccessTokenKey\";\n\n/**\n * @hidden\n */\nexport class StringUtils {\n    /**\n     * Check if a string is empty\n     *\n     * @param str\n     */\n    static isEmpty(str: string): boolean {\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\n    }\n\n    /**\n     * Check if a string's value is a valid JSON object\n     *\n     * @param str\n     */\n    static validateAndParseJsonCacheKey(str: string): AccessTokenKey {\n        try {\n            const parsedKey = JSON.parse(str);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object \n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return (parsedKey && typeof parsedKey === \"object\") ? parsedKey : null;\n        } catch (error) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport { IdToken } from \"../IdToken\";\nimport { StringUtils } from \"../utils/StringUtils\";\n\nexport const ClientAuthErrorMessage = {\n    endpointResolutionError: {\n        code: \"endpoints_resolution_error\",\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\n    },\n    popUpWindowError: {\n        code: \"popup_window_error\",\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n    },\n    tokenRenewalError: {\n        code: \"token_renewal_error\",\n        desc: \"Token renewal operation failed due to timeout.\"\n    },\n    invalidIdToken: {\n        code: \"invalid_id_token\",\n        desc: \"Invalid ID token format.\"\n    },\n    invalidStateError: {\n        code: \"invalid_state_error\",\n        desc: \"Invalid state.\"\n    },\n    nonceMismatchError: {\n        code: \"nonce_mismatch_error\",\n        desc: \"Nonce is not matching, Nonce received: \"\n    },\n    loginProgressError: {\n        code: \"login_progress_error\",\n        desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\n    },\n    acquireTokenProgressError: {\n        code: \"acquiretoken_progress_error\",\n        desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\n    },\n    userCancelledError: {\n        code: \"user_cancelled\",\n        desc: \"User cancelled the flow.\"\n    },\n    callbackError: {\n        code: \"callback_error\",\n        desc: \"Error occurred in token received callback function.\"\n    },\n    userLoginRequiredError: {\n        code: \"user_login_error\",\n        desc: \"User login is required. For silent calls, request must contain either sid or login_hint\"\n    },\n    userDoesNotExistError: {\n        code: \"user_non_existent\",\n        desc: \"User object does not exist. Please call a login API.\"\n    },\n    clientInfoDecodingError: {\n        code: \"client_info_decoding_error\",\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\n    },\n    clientInfoNotPopulatedError: {\n        code: \"client_info_not_populated_error\",\n        desc: \"The service did not populate client_info in the response, Please verify with the service team\"\n    },\n    nullOrEmptyIdToken: {\n        code: \"null_or_empty_id_token\",\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\n    },\n    idTokenNotParsed: {\n        code: \"id_token_parsing_error\",\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\n    },\n    tokenEncodingError: {\n        code: \"token_encoding_error\",\n        desc: \"The token to be decoded is not encoded correctly.\"\n    },\n    invalidInteractionType: {\n        code: \"invalid_interaction_type\",\n        desc: \"The interaction type passed to the handler was incorrect or unknown\"\n    },\n    cacheParseError: {\n        code: \"cannot_parse_cache\",\n        desc: \"The cached token key is not a valid JSON and cannot be parsed\"\n    },\n    blockTokenRequestsInHiddenIframe: {\n        code: \"block_token_requests\",\n        desc: \"Token calls are blocked in hidden iframes\"\n    }\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n\n    static createEndpointResolutionError(errDetail?: string): ClientAuthError {\n        let errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\n            errorMessage += ` Details: ${errDetail}`;\n        }\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\n    }\n\n    static createPopupWindowError(errDetail?: string): ClientAuthError {\n        let errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\n            errorMessage += ` Details: ${errDetail}`;\n        }\n        return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\n    }\n\n    static createTokenRenewalTimeoutError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);\n    }\n\n    static createInvalidIdTokenError(idToken: IdToken) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code,\n            `${ClientAuthErrorMessage.invalidIdToken.desc} Given token: ${idToken}`);\n    }\n\n    // TODO: Is this not a security flaw to send the user the state expected??\n    static createInvalidStateError(invalidState: string, actualState: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code,\n            `${ClientAuthErrorMessage.invalidStateError.desc} ${invalidState}, state expected : ${actualState}.`);\n    }\n\n    // TODO: Is this not a security flaw to send the user the Nonce expected??\n    static createNonceMismatchError(invalidNonce: string, actualNonce: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code,\n            `${ClientAuthErrorMessage.nonceMismatchError.desc} ${invalidNonce}, nonce expected : ${actualNonce}.`);\n    }\n\n    static createLoginInProgressError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code,\n            ClientAuthErrorMessage.loginProgressError.desc);\n    }\n\n    static createAcquireTokenInProgressError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code,\n            ClientAuthErrorMessage.acquireTokenProgressError.desc);\n    }\n\n    static createUserCancelledError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code,\n            ClientAuthErrorMessage.userCancelledError.desc);\n    }\n\n    static createErrorInCallbackFunction(errorDesc: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.callbackError.code,\n            `${ClientAuthErrorMessage.callbackError.desc} ${errorDesc}.`);\n    }\n\n    static createUserLoginRequiredError() : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code,\n            ClientAuthErrorMessage.userLoginRequiredError.desc);\n    }\n\n    static createUserDoesNotExistError() : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code,\n            ClientAuthErrorMessage.userDoesNotExistError.desc);\n    }\n\n    static createClientInfoDecodingError(caughtError: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code,\n            `${ClientAuthErrorMessage.clientInfoDecodingError.desc} Failed with error: ${caughtError}`);\n    }\n\n    static createClientInfoNotPopulatedError(caughtError: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code,\n            `${ClientAuthErrorMessage.clientInfoNotPopulatedError.desc} Failed with error: ${caughtError}`);\n    }\n\n    static createIdTokenNullOrEmptyError(invalidRawTokenString: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code,\n            `${ClientAuthErrorMessage.nullOrEmptyIdToken.desc} Raw ID Token Value: ${invalidRawTokenString}`);\n    }\n\n    static createIdTokenParsingError(caughtParsingError: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code,\n            `${ClientAuthErrorMessage.idTokenNotParsed.desc} Failed with error: ${caughtParsingError}`);\n    }\n\n    static createTokenEncodingError(incorrectlyEncodedToken: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code,\n            `${ClientAuthErrorMessage.tokenEncodingError.desc} Attempted to decode: ${incorrectlyEncodedToken}`);\n    }\n\n    static createInvalidInteractionTypeError() : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code,\n            ClientAuthErrorMessage.invalidInteractionType.desc);\n    }\n\n    static createCacheParseError(key: string) : ClientAuthError {\n        const errorMessage = `invalid key: ${key}, ${ClientAuthErrorMessage.cacheParseError.desc}`;\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code,\n            errorMessage);\n    }\n\n    static createBlockTokenRequestsInHiddenIframeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code,\n            ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"./ClientAuthError\";\nimport { TelemetryOptions } from \"../Configuration\";\n\ninterface IClientConfigurationErrorMessage {\n    code: string,\n    desc: string\n}\n\nexport const ClientConfigurationErrorMessage: Record<string, IClientConfigurationErrorMessage> = {\n    configurationNotSet: {\n        code: \"no_config_set\",\n        desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\n    },\n    storageNotSupported: {\n        code: \"storage_not_supported\",\n        desc: \"The value for the cacheLocation is not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    scopesRequired: {\n        code: \"scopes_required\",\n        desc: \"Scopes are required to obtain an access token.\"\n    },\n    emptyScopes: {\n        code: \"empty_input_scopes_error\",\n        desc: \"Scopes cannot be passed as empty array.\"\n    },\n    nonArrayScopes: {\n        code: \"nonarray_input_scopes_error\",\n        desc: \"Scopes cannot be passed as non-array.\"\n    },\n    invalidPrompt: {\n        code: \"invalid_prompt_value\",\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\",\n    },\n    invalidAuthorityType: {\n        code: \"invalid_authority_type\",\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\n    },\n    authorityUriInsecure: {\n        code: \"authority_uri_insecure\",\n        desc: \"Authority URIs must use https.\"\n    },\n    authorityUriInvalidPath: {\n        code: \"authority_uri_invalid_path\",\n        desc: \"Given authority URI is invalid.\"\n    },\n    unsupportedAuthorityValidation: {\n        code: \"unsupported_authority_validation\",\n        desc: \"The authority validation is not supported for this authority type.\"\n    },\n    untrustedAuthority: {\n        code: \"untrusted_authority\",\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter or set validateAuthority=false.\"\n    },\n    b2cAuthorityUriInvalidPath: {\n        code: \"b2c_authority_uri_invalid_path\",\n        desc: \"The given URI for the B2C authority is invalid.\"\n    },\n    b2cKnownAuthoritiesNotSet: {\n        code: \"b2c_known_authorities_not_set\",\n        desc: \"Must set known authorities when validateAuthority is set to True and using B2C\"\n    },\n    claimsRequestParsingError: {\n        code: \"claims_request_parsing_error\",\n        desc: \"Could not parse the given claims request object.\"\n    },\n    emptyRequestError: {\n        code: \"empty_request_error\",\n        desc: \"Request object is required.\"\n    },\n    invalidCorrelationIdError: {\n        code: \"invalid_guid_sent_as_correlationId\",\n        desc: \"Please set the correlationId as a valid guid\"\n    },\n    telemetryConfigError: {\n        code: \"telemetry_config_error\",\n        desc: \"Telemetry config is not configured with required values\"\n    },\n    ssoSilentError: {\n        code: \"sso_silent_error\",\n        desc: \"request must contain either sid or login_hint\"\n    },\n    invalidAuthorityMetadataError: {\n        code: \"authority_metadata_error\",\n        desc: \"Invalid authorityMetadata. Must be a JSON object containing authorization_endpoint, end_session_endpoint, and issuer fields.\"\n    }\n};\n\n/**\n * Error thrown when there is an error in configuration of the .js library.\n */\nexport class ClientConfigurationError extends ClientAuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n\n    static createNoSetConfigurationError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code,\n            `${ClientConfigurationErrorMessage.configurationNotSet.desc}`);\n    }\n\n    static createStorageNotSupportedError(givenCacheLocation: string) : ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code,\n            `${ClientConfigurationErrorMessage.storageNotSupported.desc} Given location: ${givenCacheLocation}`);\n    }\n\n    static createRedirectCallbacksNotSetError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\n    }\n\n    static createInvalidCallbackObjectError(callbackObject: object): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code,\n            `${ClientConfigurationErrorMessage.invalidCallbackObject.desc} Given value for callback function: ${callbackObject}`);\n    }\n\n    static createEmptyScopesArrayError(scopesValue: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code,\n            `${ClientConfigurationErrorMessage.emptyScopes.desc} Given value: ${scopesValue}.`);\n    }\n\n    static createScopesNonArrayError(scopesValue: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code,\n            `${ClientConfigurationErrorMessage.nonArrayScopes.desc} Given value: ${scopesValue}.`);\n    }\n\n    static createScopesRequiredError(scopesValue: string[]): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code,\n            `${ClientConfigurationErrorMessage.scopesRequired.desc} Given value: ${scopesValue}`);\n    }\n\n    static createInvalidPromptError(promptValue: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code,\n            `${ClientConfigurationErrorMessage.invalidPrompt.desc} Given value: ${promptValue}`);\n    }\n\n    static createClaimsRequestParsingError(claimsRequestParseError: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code,\n            `${ClientConfigurationErrorMessage.claimsRequestParsingError.desc} Given value: ${claimsRequestParseError}`);\n    }\n\n    static createEmptyRequestError(): ClientConfigurationError {\n        const { code, desc } = ClientConfigurationErrorMessage.emptyRequestError;\n        return new ClientConfigurationError(code, desc);\n    }\n\n    static createInvalidCorrelationIdError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code,\n            ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);\n    }\n\n    static createKnownAuthoritiesNotSetError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.code,\n            ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.desc);\n    }\n\n    static createInvalidAuthorityTypeError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityType.code,\n            ClientConfigurationErrorMessage.invalidAuthorityType.desc);\n    }\n\n    static createUntrustedAuthorityError(host: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code,\n            `${ClientConfigurationErrorMessage.untrustedAuthority.desc} Provided Authority: ${host}`);\n    }\n\n    static createTelemetryConfigError(config: TelemetryOptions): ClientConfigurationError {\n        const { code, desc } = ClientConfigurationErrorMessage.telemetryConfigError;\n        const requiredKeys = {\n            applicationName: \"string\",\n            applicationVersion: \"string\",\n            telemetryEmitter: \"function\"\n        };\n\n        const missingKeys = Object.keys(requiredKeys)\n            .reduce((keys, key) => {\n                return config[key] ? keys : keys.concat([ `${key} (${requiredKeys[key]})` ]);\n            }, []);\n\n        return new ClientConfigurationError(code, `${desc} mising values: ${missingKeys.join(\",\")}`);\n    }\n\n    static createSsoSilentError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.ssoSilentError.code,\n            ClientConfigurationErrorMessage.ssoSilentError.desc);\n    }\n\n    static createInvalidAuthorityMetadataError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadataError.code, ClientConfigurationErrorMessage.invalidAuthorityMetadataError.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\nimport { Constants } from \"./utils/Constants\";\n\nexport class ScopeSet {\n\n    /**\n     * Check if there are dup scopes in a given request\n     *\n     * @param cachedScopes\n     * @param scopes\n     */\n    // TODO: Rename this, intersecting scopes isn't a great name for duplicate checker\n    static isIntersectingScopes(cachedScopes: Array<string>, scopes: Array<string>): boolean {\n        const convertedCachedScopes = this.trimAndConvertArrayToLowerCase([...cachedScopes]);\n        const requestScopes = this.trimAndConvertArrayToLowerCase([...scopes]);\n        for (let i = 0; i < requestScopes.length; i++) {\n            if (convertedCachedScopes.indexOf(requestScopes[i].toLowerCase()) > -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Check if a given scope is present in the request\n     *\n     * @param cachedScopes\n     * @param scopes\n     */\n    static containsScope(cachedScopes: Array<string>, scopes: Array<string>): boolean {\n        const convertedCachedScopes = this.trimAndConvertArrayToLowerCase([...cachedScopes]);\n        const requestScopes = this.trimAndConvertArrayToLowerCase([...scopes]);\n        return requestScopes.every((value: string): boolean => convertedCachedScopes.indexOf(value.toString().toLowerCase()) >= 0);\n    }\n\n    /**\n     *  Trims and converts string to lower case\n     *\n     * @param scopes\n     */\n    // TODO: Rename this, too generic name for a function that only deals with scopes\n    static trimAndConvertToLowerCase(scope: string): string {\n        return scope.trim().toLowerCase();\n    }\n\n    /**\n     * Performs trimAndConvertToLowerCase on string array\n     * @param scopes \n     */\n    static trimAndConvertArrayToLowerCase(scopes: Array<string>): Array<string> {\n        return scopes.map(scope => this.trimAndConvertToLowerCase(scope));\n    }\n\n    /**\n     * Trims each scope in scopes array\n     * @param scopes \n     */\n    static trimScopes(scopes: Array<string>): Array<string> {\n        return scopes.map(scope => scope.trim());\n    }\n\n    /**\n     * Remove one element from a scope array\n     *\n     * @param scopes\n     * @param scope\n     */\n    // TODO: Rename this, too generic name for a function that only deals with scopes\n    static removeElement(scopes: Array<string>, scope: string): Array<string> {\n        const scopeVal = this.trimAndConvertToLowerCase(scope);\n        return scopes.filter(value => value !== scopeVal);\n    }\n\n    /**\n     * Parse the scopes into a formatted scopeList\n     * @param scopes\n     */\n    static parseScope(scopes: Array<string>): string {\n        let scopeList: string = \"\";\n        if (scopes) {\n            for (let i: number = 0; i < scopes.length; ++i) {\n                scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\n            }\n        }\n\n        return scopeList;\n    }\n\n    /**\n     * @hidden\n     *\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     * @ignore\n     */\n    static validateInputScope(scopes: Array<string>, scopesRequired: boolean): void {\n        if (!scopes) {\n            if (scopesRequired) {\n                throw ClientConfigurationError.createScopesRequiredError(scopes);\n            } else {\n                return;\n            }\n        }\n\n        // Check that scopes is an array object (also throws error if scopes == null)\n        if (!Array.isArray(scopes)) {\n            throw ClientConfigurationError.createScopesNonArrayError(scopes);\n        }\n\n        // Check that scopes is not an empty array\n        if (scopes.length < 1 && scopesRequired) {\n            throw ClientConfigurationError.createEmptyScopesArrayError(scopes.toString());\n        }\n    }\n\n    /**\n     * @hidden\n     *\n     * Extracts scope value from the state sent with the authentication request.\n     * @param {string} state\n     * @returns {string} scope.\n     * @ignore\n     */\n    static getScopeFromState(state: string): string {\n        if (state) {\n            const splitIndex = state.indexOf(Constants.resourceDelimiter);\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\n                return state.substring(splitIndex + 1);\n            }\n        }\n        return \"\";\n    }\n\n    /**\n     * @ignore\n     * Appends extraScopesToConsent if passed\n     * @param {@link AuthenticationParameters}\n     */\n    static appendScopes(reqScopes: Array<string>, reqExtraScopesToConsent: Array<string>): Array<string> {\n        if (reqScopes) {\n            const convertedExtraScopes = reqExtraScopesToConsent ? this.trimAndConvertArrayToLowerCase([...reqExtraScopesToConsent]) : null;\n            const convertedReqScopes = this.trimAndConvertArrayToLowerCase([...reqScopes]);\n            return convertedExtraScopes ? [...convertedReqScopes, ...convertedExtraScopes] : convertedReqScopes;\n        }\n        return null;\n    }\n\n    // #endregion\n\n    /**\n     * @ignore\n     * Returns true if the scopes array only contains openid and/or profile\n     */\n    static onlyContainsOidcScopes(scopes: Array<string>): boolean {\n        const scopesCount = scopes.length;\n        let oidcScopesFound = 0;\n\n        if (scopes.indexOf(Constants.openidScope) > -1) {\n            oidcScopesFound += 1;\n        }\n\n        if (scopes.indexOf(Constants.profileScope) > -1) {\n            oidcScopesFound += 1;\n        }\n\n        return (scopesCount > 0 && scopesCount === oidcScopesFound);\n    }\n\n    /**\n     * @ignore\n     * Returns true if the scopes array only contains openid and/or profile\n     */\n    static containsAnyOidcScopes(scopes: Array<string>): boolean {\n        const containsOpenIdScope = scopes.indexOf(Constants.openidScope) > -1;\n        const containsProfileScope = scopes.indexOf(Constants.profileScope) > -1;\n\n        return (containsOpenIdScope || containsProfileScope);\n    }\n\n    /**\n     * @ignore\n     * Returns true if the clientId is the only scope in the array\n     */\n    static onlyContainsClientId(scopes: Array<String>, clientId: string): boolean {\n        // Double negation to force false value returned in case scopes is null\n        return !!scopes && (scopes.indexOf(clientId) > -1 && scopes.length === 1);\n    }\n\n    /**\n     * @ignore\n     * Adds missing OIDC scopes to scopes array without duplication. Since STS requires OIDC scopes for\n     * all implicit flow requests, 'openid' and 'profile' should always be included in the final request\n     */\n    static appendDefaultScopes(scopes: Array<string>): Array<string> {\n        const extendedScopes = scopes;\n        if (extendedScopes.indexOf(Constants.openidScope) === -1) {\n            extendedScopes.push(Constants.openidScope);\n        }\n\n        if(extendedScopes.indexOf(Constants.profileScope) === -1) {\n            extendedScopes.push(Constants.profileScope);\n        }\n\n        return extendedScopes;\n    }\n\n    /**\n     * @ignore\n     * Removes present OIDC scopes from scopes array.\n     */\n    static removeDefaultScopes(scopes: Array<string>): Array<string> {\n        return scopes.filter(scope => {\n            return (scope !== Constants.openidScope && scope !== Constants.profileScope);\n        });\n    }\n\n    /**\n     * @ignore\n     * Removes clientId from scopes array if included as only scope. If it's not the only scope, it is treated as a resource scope.\n     * @param scopes Array<string>: Pre-normalized scopes array\n     * @param clientId string: The application's clientId that is searched for in the scopes array\n     */\n    static translateClientIdIfSingleScope(scopes: Array<string>, clientId: string): Array<string> {\n        return this.onlyContainsClientId(scopes, clientId) ? Constants.oidcScopes : scopes;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IUri } from \"../IUri\";\nimport { Constants, SSOTypes, ServerHashParamKeys } from \"./Constants\";\nimport { ServerRequestParameters } from \"../ServerRequestParameters\";\nimport { ScopeSet } from \"../ScopeSet\";\nimport { StringUtils } from \"./StringUtils\";\nimport { CryptoUtils } from \"./CryptoUtils\";\n\n/**\n * @hidden\n */\nexport class UrlUtils {\n\n    /**\n     * generates the URL with QueryString Parameters\n     * @param scopes\n     */\n    static createNavigateUrl(serverRequestParams: ServerRequestParameters): string {\n        const str = this.createNavigationUrlString(serverRequestParams);\n        let authEndpoint: string = serverRequestParams.authorityInstance.AuthorizationEndpoint;\n        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\n        if (authEndpoint.indexOf(\"?\") < 0) {\n            authEndpoint += \"?\";\n        } else {\n            authEndpoint += \"&\";\n        }\n\n        const requestUrl: string = `${authEndpoint}${str.join(\"&\")}`;\n        return requestUrl;\n    }\n\n    /**\n     * Generate the array of all QueryStringParams to be sent to the server\n     * @param scopes\n     */\n    static createNavigationUrlString(serverRequestParams: ServerRequestParameters): Array<string> {\n        const scopes = ScopeSet.appendDefaultScopes(serverRequestParams.scopes);\n\n        const str: Array<string> = [];\n        str.push(\"response_type=\" + serverRequestParams.responseType);\n        str.push(\"scope=\" + encodeURIComponent(ScopeSet.parseScope(scopes)));\n        str.push(\"client_id=\" + encodeURIComponent(serverRequestParams.clientId));\n        str.push(\"redirect_uri=\" + encodeURIComponent(serverRequestParams.redirectUri));\n\n        str.push(\"state=\" + encodeURIComponent(serverRequestParams.state));\n        str.push(\"nonce=\" + encodeURIComponent(serverRequestParams.nonce));\n\n        str.push(\"client_info=1\");\n        str.push(`x-client-SKU=${serverRequestParams.xClientSku}`);\n        str.push(`x-client-Ver=${serverRequestParams.xClientVer}`);\n        if (serverRequestParams.promptValue) {\n            str.push(\"prompt=\" + encodeURIComponent(serverRequestParams.promptValue));\n        }\n\n        if (serverRequestParams.claimsValue) {\n            str.push(\"claims=\" + encodeURIComponent(serverRequestParams.claimsValue));\n        }\n\n        if (serverRequestParams.queryParameters) {\n            str.push(serverRequestParams.queryParameters);\n        }\n\n        if (serverRequestParams.extraQueryParameters) {\n            str.push(serverRequestParams.extraQueryParameters);\n        }\n\n        str.push(\"client-request-id=\" + encodeURIComponent(serverRequestParams.correlationId));\n        return str;\n    }\n\n    /**\n     * Returns current window URL as redirect uri\n     */\n    static getCurrentUrl(): string {\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\n    }\n\n    /**\n     * Returns given URL with query string removed\n     */\n    static removeHashFromUrl(url: string): string {\n        return url.split(\"#\")[0];\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    static replaceTenantPath(url: string, tenantId: string): string {\n        const lowerCaseUrl = url.toLowerCase();\n        const urlObject = this.GetUrlComponents(lowerCaseUrl);\n        const pathArray = urlObject.PathSegments;\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === Constants.common || pathArray[0] === SSOTypes.ORGANIZATIONS || pathArray[0] === SSOTypes.CONSUMERS))) {\n            pathArray[0] = tenantId;\n        }\n        return this.constructAuthorityUriFromObject(urlObject, pathArray);\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri, pathArray: string[]): string {\n        return this.CanonicalizeUri(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\"));\n    }\n    \n    /**\n     * Checks if an authority is common (ex. https://a:b/common/)\n     * @param url The url\n     * @returns true if authority is common and false otherwise \n     */\n    static isCommonAuthority(url: string): boolean {\n        const authority =  this.CanonicalizeUri(url);\n        const pathArray = this.GetUrlComponents(authority).PathSegments;\n        return (pathArray.length !== 0 && pathArray[0] === Constants.common);\n    }\n\n    /**\n     * Checks if an authority is for organizations (ex. https://a:b/organizations/)\n     * @param url The url\n     * @returns true if authority is for  and false otherwise \n     */\n    static isOrganizationsAuthority(url: string): boolean {\n        const authority =  this.CanonicalizeUri(url);\n        const pathArray = this.GetUrlComponents(authority).PathSegments;\n        return (pathArray.length !== 0 && pathArray[0] === SSOTypes.ORGANIZATIONS);\n    }\n\n    /**\n     * Checks if an authority is for consumers (ex. https://a:b/consumers/)\n     * @param url The url\n     * @returns true if authority is for  and false otherwise \n     */\n    static isConsumersAuthority(url: string): boolean {\n        const authority =  this.CanonicalizeUri(url);\n        const pathArray = this.GetUrlComponents(authority).PathSegments;\n        return (pathArray.length !== 0 && pathArray[0] === SSOTypes.CONSUMERS);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    static GetUrlComponents(url: string): IUri {\n        if (!url) {\n            throw \"Url required\";\n        }\n\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n\n        const match = url.match(regEx);\n\n        if (!match || match.length < 6) {\n            throw \"Valid url required\";\n        }\n\n        const urlComponents = <IUri>{\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5]\n        };\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (match[6]){\n            urlComponents.Search = match[6];\n        }\n        if (match[8]){\n            urlComponents.Hash = match[8];\n        }\n        \n        return urlComponents;\n    }\n\n    /**\n     * Given a url or path, append a trailing slash if one doesnt exist\n     *\n     * @param url\n     */\n    static CanonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (!UrlUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Checks to see if the url ends with the suffix\n     * Required because we are compiling for es5 instead of es6\n     * @param url\n     * @param str\n     */\n    // TODO: Rename this, not clear what it is supposed to do\n    static endsWith(url: string, suffix: string): boolean {\n        if (!url || !suffix) {\n            return false;\n        }\n\n        return url.indexOf(suffix, url.length - suffix.length) !== -1;\n    }\n\n    /**\n     * Utils function to remove the login_hint and domain_hint from the i/p extraQueryParameters\n     * @param url\n     * @param name\n     */\n    static urlRemoveQueryStringParameter(url: string, name: string): string {\n        if (StringUtils.isEmpty(url)) {\n            return url;\n        }\n\n        let updatedUrl = url;\n        let regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\n        updatedUrl = url.replace(regex, \"\");\n        // name=value&\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\n        updatedUrl = url.replace(regex, \"\");\n        // name=value\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\n        updatedUrl = url.replace(regex, \"\");\n        return updatedUrl;\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * Returns the anchor part(#) of the URL\n     */\n    static getHashFromUrl(urlStringOrFragment: string): string {\n        const hashIndex1 = urlStringOrFragment.indexOf(\"#\");\n        const hashIndex2 = urlStringOrFragment.indexOf(\"#/\");\n        if (hashIndex2 > -1) {\n            return urlStringOrFragment.substring(hashIndex2 + 2);\n        } else if (hashIndex1 > -1) {\n            return urlStringOrFragment.substring(hashIndex1 + 1);\n        }\n        return urlStringOrFragment;\n    }\n\n    /**\n     * @hidden\n     * Check if the url contains a hash with known properties\n     * @ignore\n     */\n    static urlContainsHash(urlString: string): boolean {\n        const parameters = UrlUtils.deserializeHash(urlString);\n        return (\n            parameters.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) ||\n            parameters.hasOwnProperty(ServerHashParamKeys.ERROR) ||\n            parameters.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN) ||\n            parameters.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)\n        );\n    }\n\n    /**\n     * @hidden\n     * Returns deserialized portion of URL hash\n     * @ignore\n     */\n    static deserializeHash(urlFragment: string): object {\n        const hash = UrlUtils.getHashFromUrl(urlFragment);\n        return CryptoUtils.deserialize(hash);\n    }\n\n    /**\n     * @ignore\n     * @param {string} URI\n     * @returns {string} host from the URI\n     *\n     * extract URI from the host\n     */\n    static getHostFromUri(uri: string): string {\n        // remove http:// or https:// from uri\n        let extractedUri = String(uri).replace(/^(https?:)\\/\\//, \"\");\n        extractedUri = extractedUri.split(\"/\")[0];\n        return extractedUri;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\nimport { UrlUtils } from \"../utils/UrlUtils\";\n\n/**\n * @hidden\n */\nexport class AccessTokenKey {\n\n    authority: string;\n    clientId: string;\n    scopes: string;\n    homeAccountIdentifier: string;\n\n    constructor(authority: string, clientId: string, scopes: string, uid: string, utid: string) {\n        this.authority = UrlUtils.CanonicalizeUri(authority);\n        this.clientId = clientId;\n        this.scopes = scopes;\n        this.homeAccountIdentifier = CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class AccessTokenValue {\n\n    accessToken: string;\n    idToken: string;\n    expiresIn: string;\n    homeAccountIdentifier: string;\n\n    constructor(accessToken: string, idToken: string, expiresIn: string, homeAccountIdentifier: string) {\n        this.accessToken = accessToken;\n        this.idToken = idToken;\n        this.expiresIn = expiresIn;\n        this.homeAccountIdentifier = homeAccountIdentifier;\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"msal\";\nexport const version = \"1.4.17\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority } from \"./authority/Authority\";\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\nimport { AuthenticationParameters } from \"./AuthenticationParameters\";\nimport { StringDict } from \"./MsalTypes\";\nimport { Account } from \"./Account\";\nimport { SSOTypes, Constants, PromptState, ResponseTypes } from \"./utils/Constants\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport { version as libraryVersion } from \"./packageMetadata\";\n\n/**\n * Nonce: OIDC Nonce definition: https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n * State: OAuth Spec: https://tools.ietf.org/html/rfc6749#section-10.12\n * @hidden\n */\nexport class ServerRequestParameters {\n\n    authorityInstance: Authority;\n    clientId: string;\n    scopes: Array<string>;\n\n    nonce: string;\n    state: string;\n\n    // telemetry information\n    xClientVer: string;\n    xClientSku: string;\n    correlationId: string;\n\n    responseType: string;\n    redirectUri: string;\n\n    promptValue: string;\n    claimsValue: string;\n\n    queryParameters: string;\n    extraQueryParameters: string;\n\n    public get authority(): string {\n        return this.authorityInstance ? this.authorityInstance.CanonicalAuthority : null;\n    }\n\n    /**\n     * Constructor\n     * @param authority\n     * @param clientId\n     * @param scope\n     * @param responseType\n     * @param redirectUri\n     * @param state\n     */\n    constructor (authority: Authority, clientId: string, responseType: string, redirectUri: string, scopes: Array<string>, state: string, correlationId: string) {\n        this.authorityInstance = authority;\n        this.clientId = clientId;\n        this.nonce = CryptoUtils.createNewGuid();\n\n        // set scope to clientId if null\n        this.scopes = scopes ? [ ...scopes] : Constants.oidcScopes;\n        this.scopes = ScopeSet.trimScopes(this.scopes);\n\n        // set state (already set at top level)\n        this.state = state;\n\n        // set correlationId\n        this.correlationId = correlationId;\n\n        // telemetry information\n        this.xClientSku = \"MSAL.JS\";\n        this.xClientVer = libraryVersion;\n\n        this.responseType = responseType;\n        this.redirectUri = redirectUri;\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\n     * @param request\n     * @param serverAuthenticationRequest\n     */\n    populateQueryParams(account: Account, request: AuthenticationParameters|null, adalIdTokenObject?: object, silentCall?: boolean): void {\n        let queryParameters: StringDict = {};\n\n        if (request) {\n            // add the prompt parameter to serverRequestParameters if passed\n            if (request.prompt) {\n                this.promptValue = request.prompt;\n            }\n\n            // Add claims challenge to serverRequestParameters if passed\n            if (request.claimsRequest) {\n                this.claimsValue = request.claimsRequest;\n            }\n\n            // if the developer provides one of these, give preference to developer choice\n            if (ServerRequestParameters.isSSOParam(request)) {\n                queryParameters = this.constructUnifiedCacheQueryParameter(request, null);\n            }\n        }\n\n        if (adalIdTokenObject) {\n            queryParameters = this.constructUnifiedCacheQueryParameter(null, adalIdTokenObject);\n        }\n\n        /*\n         * adds sid/login_hint if not populated\n         * this.logger.verbose(\"Calling addHint parameters\");\n         */\n        queryParameters = this.addHintParameters(account, queryParameters);\n\n        // sanity check for developer passed extraQueryParameters\n        const eQParams: StringDict|null = request ? request.extraQueryParameters : null;\n\n        // Populate the extraQueryParameters to be sent to the server\n        this.queryParameters = ServerRequestParameters.generateQueryParametersString(queryParameters);\n        this.extraQueryParameters = ServerRequestParameters.generateQueryParametersString(eQParams, silentCall);\n    }\n\n    // #region QueryParam helpers\n\n    /**\n     * Constructs extraQueryParameters to be sent to the server for the AuthenticationParameters set by the developer\n     * in any login() or acquireToken() calls\n     * @param idTokenObject\n     * @param extraQueryParameters\n     * @param sid\n     * @param loginHint\n     */\n    // TODO: check how this behaves when domain_hint only is sent in extraparameters and idToken has no upn.\n    private constructUnifiedCacheQueryParameter(request: AuthenticationParameters, idTokenObject: object): StringDict {\n\n        // preference order: account > sid > login_hint\n        let ssoType;\n        let ssoData;\n        let serverReqParam: StringDict = {};\n        // if account info is passed, account.login_hint claim > account.sid > account.username\n        if (request) {\n            if (request.account) {\n                const account: Account = request.account;\n                if (account.idTokenClaims?.login_hint) {\n                    ssoType = SSOTypes.LOGIN_HINT;\n                    ssoData = account.idTokenClaims.login_hint;\n                } else if (account.sid) {\n                    ssoType = SSOTypes.SID;\n                    ssoData = account.sid;\n                }\n                else if (account.userName) {\n                    ssoType = SSOTypes.LOGIN_HINT;\n                    ssoData = account.userName;\n                }\n            }\n            // sid from request\n            else if (request.sid) {\n                ssoType = SSOTypes.SID;\n                ssoData = request.sid;\n            }\n            // loginHint from request\n            else if (request.loginHint) {\n                ssoType = SSOTypes.LOGIN_HINT;\n                ssoData = request.loginHint;\n            }\n        }\n        // adalIdToken retrieved from cache\n        else if (idTokenObject) {\n            if (idTokenObject.hasOwnProperty(Constants.upn)) {\n                ssoType = SSOTypes.ID_TOKEN;\n                ssoData = idTokenObject[\"upn\"];\n            }\n        }\n\n        serverReqParam = this.addSSOParameter(ssoType, ssoData);\n        return serverReqParam;\n    }\n\n    /**\n     * @hidden\n     *\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\n     * domain_hint if added skips the email based discovery process of the user - only supported for interactive calls in implicit_flow\n     * domain_req utid received as part of the clientInfo\n     * login_req uid received as part of clientInfo\n     * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\n     *\n     * @param {@link Account} account - Account for which the token is requested\n     * @param queryparams\n     * @param {@link ServerRequestParameters}\n     * @ignore\n     */\n    private addHintParameters(account: Account, params: StringDict): StringDict {\n    /*\n     * This is a final check for all queryParams added so far; preference order: sid > login_hint\n     * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\n     */\n        let qParams = params;\n        if (account) {\n            if (!qParams[SSOTypes.SID] && !qParams[SSOTypes.LOGIN_HINT]) {\n                if (account.idTokenClaims?.login_hint) {\n                    // Use login_hint claim if available over sid or email/upn\n                    qParams = this.addSSOParameter(SSOTypes.LOGIN_HINT, account.idTokenClaims?.login_hint, qParams);\n                } else if (account.sid && this.promptValue === PromptState.NONE) {\n                    // sid - populate only if login_hint is not already populated and the account has sid\n                    qParams = this.addSSOParameter(SSOTypes.SID, account.sid, qParams);\n                } else if (account.userName) {\n                    // Add username/upn as loginHint if nothing else available\n                    qParams = this.addSSOParameter(SSOTypes.LOGIN_HINT, account.userName, qParams);\n                }\n            }\n        }\n\n        return qParams;\n    }\n\n    /**\n     * Add SID to extraQueryParameters\n     * @param sid\n     */\n    private addSSOParameter(ssoType: string, ssoData: string, params?: StringDict): StringDict {\n        const ssoParam = params || {};\n\n        if (!ssoData) {\n            return ssoParam;\n        }\n\n        switch (ssoType) {\n            case SSOTypes.SID: {\n                ssoParam[SSOTypes.SID] = ssoData;\n                break;\n            }\n            case SSOTypes.ID_TOKEN: {\n                ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\n                break;\n            }\n            case SSOTypes.LOGIN_HINT: {\n                ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\n                break;\n            }\n        }\n\n        return ssoParam;\n    }\n\n    /**\n     * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\n     * @param extraQueryParameters\n     */\n    static generateQueryParametersString(queryParameters?: StringDict, silentCall?: boolean): string|null {\n        let paramsString: string|null = null;\n\n        if (queryParameters) {\n            Object.keys(queryParameters).forEach((key: string) => {\n                // sid cannot be passed along with login_hint or domain_hint\n                if(key === Constants.domain_hint && (silentCall || queryParameters[SSOTypes.SID])) {\n                    return;\n                }\n\n                if (!paramsString) {\n                    paramsString = `${key}=${encodeURIComponent(queryParameters[key])}`;\n                }\n                else {\n                    paramsString += `&${key}=${encodeURIComponent(queryParameters[key])}`;\n                }\n            });\n        }\n\n        return paramsString;\n    }\n    // #endregion\n\n    /**\n     * Check to see if there are SSO params set in the Request\n     * @param request\n     */\n    static isSSOParam(request: AuthenticationParameters): boolean {\n        return !!(request && (request.account || request.sid || request.loginHint));\n    }\n\n    /**\n     * Returns the correct response_type string attribute for an acquireToken request configuration\n     * @param accountsMatch boolean: Determines whether the account in the request matches the cached account\n     * @param scopes Array<string>: AuthenticationRequest scopes configuration\n     * @param loginScopesOnly boolean: True if the scopes array ONLY contains the clientId or any combination of OIDC scopes, without resource scopes\n     */\n    static determineResponseType(accountsMatch: boolean, scopes: Array<string>): string {\n        // Supports getting an id_token by sending in clientId as only scope or OIDC scopes as only scopes\n        if (ScopeSet.onlyContainsOidcScopes(scopes)) {\n            return ResponseTypes.id_token;\n        }\n        // If accounts match, check if OIDC scopes are included, otherwise return id_token_token\n        return (accountsMatch) ? this.responseTypeForMatchingAccounts(scopes) : ResponseTypes.id_token_token;\n    }\n\n    /**\n     * Returns the correct response_type string attribute for an acquireToken request configuration that contains an\n     * account that matches the account in the MSAL cache.\n     * @param scopes Array<string>: AuthenticationRequest scopes configuration\n     */\n    private static responseTypeForMatchingAccounts(scopes: Array<string>): string {\n        // Opt-into also requesting an ID token by sending in 'openid', 'profile' or both along with resource scopes when login is not necessary.\n        return (ScopeSet.containsAnyOidcScopes(scopes)) ? ResponseTypes.id_token_token : ResponseTypes.token;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkRequestType } from \"./utils/Constants\";\n\n/**\n * XHR client for JSON endpoints\n * https://www.npmjs.com/package/async-promise\n * @hidden\n */\n\nexport class XhrClient {\n\n    public sendRequestAsync(url: string, method: string, enableCaching?: boolean): Promise<XhrResponse> {\n        return new Promise<XhrResponse>((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, /* async: */ true);\n            if (enableCaching) {\n                /*\n                 * TODO: (shivb) ensure that this can be cached\n                 * xhr.setRequestHeader(\"Cache-Control\", \"Public\");\n                 */\n            }\n\n            xhr.onload = () => {\n                if (xhr.status < 200 || xhr.status >= 300) {\n                    reject(this.handleError(xhr.responseText));\n                }\n                let jsonResponse;\n                try {\n                    jsonResponse = JSON.parse(xhr.responseText);\n                } catch (e) {\n                    reject(this.handleError(xhr.responseText));\n                }\n                const response: XhrResponse = {\n                    statusCode: xhr.status,\n                    body: jsonResponse\n                };\n                resolve(response);\n            };\n\n            xhr.onerror = () => {\n                reject(xhr.status);\n            };\n\n            if (method === NetworkRequestType.GET) {\n                xhr.send();\n            }\n            else {\n                throw \"not implemented\";\n            }\n        });\n    }\n\n    protected handleError(responseText: string): string {\n        let jsonResponse: object;\n        try {\n            jsonResponse = JSON.parse(responseText);\n            if (jsonResponse[\"error\"]) {\n                return jsonResponse[\"error\"];\n            } else {\n                throw responseText;\n            }\n        } catch (e) {\n            return responseText;\n        }\n    }\n}\n\nexport type XhrResponse = {\n    body: object,\n    statusCode: number\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport TelemetryManager from \"../telemetry/TelemetryManager\";\nimport { XhrClient, XhrResponse } from \"../XHRClient\";\nimport HttpEvent from \"../telemetry/HttpEvent\";\nimport { AAD_INSTANCE_DISCOVERY_ENDPOINT, NetworkRequestType } from \"../utils/Constants\";\nimport { UrlUtils } from \"../utils/UrlUtils\";\n\nexport class TrustedAuthority {\n    private static TrustedHostList: Array<string> = [];\n\n    /**\n     * \n     * @param validateAuthority \n     * @param knownAuthorities \n     */\n    public static setTrustedAuthoritiesFromConfig(validateAuthority: boolean, knownAuthorities: Array<string>): void{\n        if (validateAuthority && !this.getTrustedHostList().length){\n            knownAuthorities.forEach(function(authority) {\n                TrustedAuthority.TrustedHostList.push(authority.toLowerCase());\n            });\n        }\n    }\n\n    /**\n     * \n     * @param telemetryManager \n     * @param correlationId \n     */\n    private static async getAliases(authorityToVerify: string, telemetryManager: TelemetryManager, correlationId?: string): Promise<Array<object>> {\n        const client: XhrClient = new XhrClient();\n\n        const httpMethod = NetworkRequestType.GET;\n        const instanceDiscoveryEndpoint = `${AAD_INSTANCE_DISCOVERY_ENDPOINT}${authorityToVerify}oauth2/v2.0/authorize`;\n        const httpEvent: HttpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, instanceDiscoveryEndpoint, \"getAliases\");\n        return client.sendRequestAsync(instanceDiscoveryEndpoint, httpMethod, true)\n            .then((response: XhrResponse) => {\n                httpEvent.httpResponseStatus = response.statusCode;\n                telemetryManager.stopEvent(httpEvent);\n                return response.body[\"metadata\"];\n            })\n            .catch(err => {\n                httpEvent.serverErrorCode = err;\n                telemetryManager.stopEvent(httpEvent);\n                throw err;\n            });\n    }\n\n    /**\n     * \n     * @param telemetryManager \n     * @param correlationId \n     */\n    public static async setTrustedAuthoritiesFromNetwork(authorityToVerify: string, telemetryManager: TelemetryManager, correlationId?: string): Promise<void> {\n        const metadata = await this.getAliases(authorityToVerify, telemetryManager, correlationId);\n        metadata.forEach(function(entry: object){\n            const authorities: Array<string> = entry[\"aliases\"];\n            authorities.forEach(function(authority: string) {\n                TrustedAuthority.TrustedHostList.push(authority.toLowerCase());\n            });\n        });\n\n        const host = UrlUtils.GetUrlComponents(authorityToVerify).HostNameAndPort;\n        if (TrustedAuthority.getTrustedHostList().length && !TrustedAuthority.IsInTrustedHostList(host)){\n            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n            TrustedAuthority.TrustedHostList.push(host.toLowerCase());\n        }\n    } \n\n    public static getTrustedHostList(): Array<string> {\n        return this.TrustedHostList;\n    }\n\n    /**\n     * Checks to see if the host is in a list of trusted hosts\n     * @param host \n     */\n    public static IsInTrustedHostList(host: string): boolean {\n        return this.TrustedHostList.indexOf(host.toLowerCase()) > -1;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"./utils/StringUtils\";\nimport { version as libraryVersion } from \"./packageMetadata\";\n\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose\n}\n\nexport class Logger {// Singleton Class\n\n    /**\n     * @hidden\n     */\n    // TODO: This does not seem to be a singleton!! Change or Delete.\n    private static instance: Logger;\n\n    /**\n     * @hidden\n     */\n    private correlationId: string;\n\n    /**\n     * @hidden\n     */\n    private level: LogLevel = LogLevel.Info;\n\n    /**\n     * @hidden\n     */\n    private piiLoggingEnabled: boolean;\n\n    /**\n     * @hidden\n     */\n    private localCallback: ILoggerCallback;\n\n    constructor(localCallback: ILoggerCallback,\n        options:\n        {\n            correlationId?: string,\n            level?: LogLevel,\n            piiLoggingEnabled?: boolean,\n        } = {}) {\n        const {\n            correlationId = \"\",\n            level = LogLevel.Info,\n            piiLoggingEnabled = false\n        } = options;\n\n        this.localCallback = localCallback;\n        this.correlationId = correlationId;\n        this.level = level;\n        this.piiLoggingEnabled = piiLoggingEnabled;\n    }\n\n    /**\n     * @hidden\n     */\n    private logMessage(logLevel: LogLevel, logMessage: string, containsPii: boolean): void {\n        if ((logLevel > this.level) || (!this.piiLoggingEnabled && containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n        let log: string;\n        if (!StringUtils.isEmpty(this.correlationId)) {\n            log = timestamp + \":\" + this.correlationId + \"-\" + libraryVersion + \"-\" + LogLevel[logLevel] + (containsPii ? \"-pii\" : \"\") + \" \" + logMessage;\n        }\n        else {\n            log = timestamp + \":\" + libraryVersion + \"-\" + LogLevel[logLevel] + (containsPii ? \"-pii\" : \"\") + \" \" + logMessage;\n        }\n        this.executeCallback(logLevel, log, containsPii);\n    }\n\n    /**\n     * @hidden\n     */\n    executeCallback(level: LogLevel, message: string, containsPii: boolean): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    error(message: string): void {\n        this.logMessage(LogLevel.Error, message, false);\n    }\n\n    /**\n     * @hidden\n     */\n    errorPii(message: string): void {\n        this.logMessage(LogLevel.Error, message, true);\n    }\n\n    /**\n     * @hidden\n     */\n    warning(message: string): void {\n        this.logMessage(LogLevel.Warning, message, false);\n    }\n\n    /**\n     * @hidden\n     */\n    warningPii(message: string): void {\n        this.logMessage(LogLevel.Warning, message, true);\n    }\n\n    /**\n     * @hidden\n     */\n    info(message: string): void {\n        this.logMessage(LogLevel.Info, message, false);\n    }\n\n    /**\n     * @hidden\n     */\n    infoPii(message: string): void {\n        this.logMessage(LogLevel.Info, message, true);\n    }\n\n    /**\n     * @hidden\n     */\n    verbose(message: string): void {\n        this.logMessage(LogLevel.Verbose, message, false);\n    }\n\n    /**\n     * @hidden\n     */\n    verbosePii(message: string): void {\n        this.logMessage(LogLevel.Verbose, message, true);\n    }\n\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled;\n    }\n}\n","﻿/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\nimport { ClientAuthError } from \"./error/ClientAuthError\";\nimport { StringUtils } from \"./utils/StringUtils\";\nimport { IdToken } from \"./IdToken\";\n\n/**\n * @hidden\n */\nexport class ClientInfo {\n\n    private _uid: string;\n    get uid(): string {\n        return this._uid ? this._uid : \"\";\n    }\n\n    set uid(uid: string) {\n        this._uid = uid;\n    }\n\n    private _utid: string;\n    get utid(): string {\n        return this._utid ? this._utid : \"\";\n    }\n\n    set utid(utid: string) {\n        this._utid = utid;\n    }\n\n    static createClientInfoFromIdToken(idToken:IdToken, authority: string): ClientInfo {\n        const clientInfo = {\n            uid: idToken.subject, \n            utid: \"\"\n        };\n\n        return new ClientInfo(CryptoUtils.base64Encode(JSON.stringify(clientInfo)), authority);\n    }\n\n    constructor(rawClientInfo: string, authority: string) {\n        if (!rawClientInfo || StringUtils.isEmpty(rawClientInfo)) {\n            this.uid = \"\";\n            this.utid = \"\";\n            return;\n        }\n\n        try {\n            const decodedClientInfo: string = CryptoUtils.base64Decode(rawClientInfo);\n            const clientInfo: ClientInfo = <ClientInfo>JSON.parse(decodedClientInfo);\n            if (clientInfo) {\n                if (clientInfo.hasOwnProperty(\"uid\")) {\n                    this.uid = authority ? ClientInfo.stripPolicyFromUid(clientInfo.uid, authority): clientInfo.uid;\n                }\n\n                if (clientInfo.hasOwnProperty(\"utid\")) {\n                    this.utid = clientInfo.utid;\n                }\n            }\n        } catch (e) {\n            throw ClientAuthError.createClientInfoDecodingError(e);\n        }\n    }\n\n    static stripPolicyFromUid(uid: string, authority: string): string {\n        const uidSegments = uid.split(\"-\");\n        // Reverse the url segments so the last one is more easily accessible\n        const urlSegments = authority.split(\"/\").reverse();\n        let policy = \"\";\n\n        if (!StringUtils.isEmpty(urlSegments[0])) {\n            policy = urlSegments[0];\n        } else if (urlSegments.length > 1) {\n            // If the original url had a trailing slash, urlSegments[0] would be \"\" so take the next element\n            policy = urlSegments[1];\n        }\n\n        if (uidSegments[uidSegments.length - 1] ===  policy) {\n            // If the last segment of uid matches the last segment of authority url, remove the last segment of uid\n            return uidSegments.slice(0, uidSegments.length - 1).join(\"-\");\n        }\n\n        return uid;\n    }\n\n    public encodeClientInfo(): string {\n        const clientInfo = JSON.stringify({uid: this.uid, utid: this.utid});\n\n        return CryptoUtils.base64Encode(clientInfo);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class TimeUtils {\n    /**\n     * Returns time in seconds for expiration based on string value passed in.\n     *\n     * @param expiresIn\n     */\n    static parseExpiresIn(expiresIn: string): number {\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\n        const expires = expiresIn || \"3599\";\n        return parseInt(expires, 10);\n    }\n\n    /**\n     * Return the current time in Unix time (seconds). Date.getTime() returns in milliseconds.\n     */\n    static now(): number {\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n\n    /**\n     * Returns the amount of time in milliseconds since the page loaded.\n     */\n    static relativeNowMs(): number {\n        return window.performance.now();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoUtils } from \"./CryptoUtils\";\nimport { StringUtils } from \"./StringUtils\";\nimport { TimeUtils } from \"./TimeUtils\";\n\n/**\n * @hidden\n */\nexport class TokenUtils {\n\n    /**\n     * decode a JWT\n     *\n     * @param jwtToken\n     */\n    static decodeJwt(jwtToken: string): object {\n        if (StringUtils.isEmpty(jwtToken)) {\n            return null;\n        }\n        const idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n        const matches = idTokenPartsRegex.exec(jwtToken);\n        if (!matches || matches.length < 4) {\n            // this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\n            return null;\n        }\n        const crackedToken = {\n            header: matches[1],\n            JWSPayload: matches[2],\n            JWSSig: matches[3]\n        };\n        return crackedToken;\n    }\n\n    /**\n     * Evaluates whether token cache item expiration is within expiration offset range\n     * @param tokenCacheItem \n     */\n    static validateExpirationIsWithinOffset(expiration: number, tokenRenewalOffsetSeconds: number): Boolean {\n        const offset = tokenRenewalOffsetSeconds || 300;\n        return expiration && (expiration > TimeUtils.now() + offset);\n    }\n\n    /**\n     * Extract IdToken by decoding the RAWIdToken\n     *\n     * @param encodedIdToken\n     */\n    static extractIdToken(encodedIdToken: string): object {\n    // id token will be decoded to get the username\n        const decodedToken = this.decodeJwt(encodedIdToken);\n        if (!decodedToken) {\n            return null;\n        }\n        try {\n            const base64IdToken = decodedToken[\"JWSPayload\"];\n            const base64Decoded = CryptoUtils.base64Decode(base64IdToken);\n            if (!base64Decoded) {\n                // this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\n                return null;\n            }\n            // ECMA script has JSON built-in support\n            return JSON.parse(base64Decoded);\n        } catch (err) {\n            // this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\n        }\n\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"./error/ClientAuthError\";\nimport { TokenUtils } from \"./utils/TokenUtils\";\nimport { StringDict } from \"./MsalTypes\";\nimport { StringUtils } from \"./utils/StringUtils\";\n\n/**\n * @hidden\n */\nexport class IdToken {\n\n    issuer: string;\n    objectId: string;\n    subject: string;\n    tenantId: string;\n    version: string;\n    preferredName: string;\n    name: string;\n    homeObjectId: string;\n    nonce: string;\n    expiration: string;\n    rawIdToken: string;\n    claims: StringDict;\n    sid: string;\n    cloudInstance: string;\n    /* tslint:disable:no-string-literal */\n    constructor(rawIdToken: string) {\n        if (StringUtils.isEmpty(rawIdToken)) {\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\n        }\n        try {\n            this.rawIdToken = rawIdToken;\n            this.claims = TokenUtils.extractIdToken(rawIdToken) as StringDict;\n            if (this.claims) {\n                if (this.claims.hasOwnProperty(\"iss\")) {\n                    this.issuer = this.claims[\"iss\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"oid\")) {\n                    this.objectId = this.claims[\"oid\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"sub\")) {\n                    this.subject = this.claims[\"sub\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"tid\")) {\n                    this.tenantId = this.claims[\"tid\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"ver\")) {\n                    this.version = this.claims[\"ver\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"preferred_username\")) {\n                    this.preferredName = this.claims[\"preferred_username\"];\n                } else if (this.claims.hasOwnProperty(\"upn\")) {\n                    this.preferredName = this.claims[\"upn\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"name\")) {\n                    this.name = this.claims[\"name\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"nonce\")) {\n                    this.nonce = this.claims[\"nonce\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"exp\")) {\n                    this.expiration = this.claims[\"exp\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"home_oid\")) {\n                    this.homeObjectId = this.claims[\"home_oid\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"sid\")) {\n                    this.sid = this.claims[\"sid\"];\n                }\n\n                if (this.claims.hasOwnProperty(\"cloud_instance_host_name\")) {\n                    this.cloudInstance = this.claims[\"cloud_instance_host_name\"];\n                }\n                /* tslint:enable:no-string-literal */\n            }\n        } catch (e) {\n            /*\n             * TODO: This error here won't really every be thrown, since extractIdToken() returns null if the decodeJwt() fails.\n             * Need to add better error handling here to account for being unable to decode jwts.\n             */\n            throw ClientAuthError.createIdTokenParsingError(e);\n        }\n    }\n\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccessTokenKey } from \"./AccessTokenKey\";\nimport { AccessTokenValue } from \"./AccessTokenValue\";\n\n/**\n * @hidden\n */\nexport class AccessTokenCacheItem {\n\n    key: AccessTokenKey;\n    value: AccessTokenValue;\n\n    constructor(key: AccessTokenKey, value: AccessTokenValue) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CacheLocation } from \"../Configuration\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { AuthError } from \"../error/AuthError\";\n\n/**\n * @hidden\n */\nexport class BrowserStorage {// Singleton\n\n    protected cacheLocation: CacheLocation;\n\n    constructor(cacheLocation: CacheLocation) {\n        if (!window) {\n            throw AuthError.createNoWindowObjectError(\"Browser storage class could not find window object\");\n        }\n\n        const storageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] !== null;\n        if (!storageSupported) {\n            throw ClientConfigurationError.createStorageNotSupportedError(cacheLocation);\n        }\n        this.cacheLocation = cacheLocation;\n    }\n\n    /**\n     * add value to storage\n     * @param key\n     * @param value\n     * @param enableCookieStorage\n     */\n    setItem(key: string, value: string, enableCookieStorage?: boolean): void {\n        window[this.cacheLocation].setItem(key, value);\n        if (enableCookieStorage) {\n            this.setItemCookie(key, value);\n        }\n    }\n\n    /**\n     * get one item by key from storage\n     * @param key\n     * @param enableCookieStorage\n     */\n    getItem(key: string, enableCookieStorage?: boolean): string {\n        if (enableCookieStorage && this.getItemCookie(key)) {\n            return this.getItemCookie(key);\n        }\n        return window[this.cacheLocation].getItem(key);\n    }\n\n    /**\n     * remove value from storage\n     * @param key\n     */\n    removeItem(key: string): void {\n        return window[this.cacheLocation].removeItem(key);\n    }\n\n    /**\n     * clear storage (remove all items from it)\n     */\n    clear(): void {\n        return window[this.cacheLocation].clear();\n    }\n\n    /**\n     * add value to cookies\n     * @param cName\n     * @param cValue\n     * @param expires\n     */\n    setItemCookie(cName: string, cValue: string, expires?: number): void {\n        let cookieStr = encodeURIComponent(cName) + \"=\" + encodeURIComponent(cValue) + \";path=/;\";\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += \"expires=\" + expireTime + \";\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    /**\n     * get one item by key from cookies\n     * @param cName\n     */\n    getItemCookie(cName: string): string {\n        const name = encodeURIComponent(cName) + \"=\";\n        const ca = document.cookie.split(\";\");\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === \" \") {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return decodeURIComponent(c.substring(name.length, c.length));\n            }\n        }\n        return \"\";\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cName\n     */\n    clearItemCookie(cName: string): void {\n        this.setItemCookie(cName, \"\", -1);\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);\n        return expr.toUTCString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationParameters } from \"../AuthenticationParameters\";\nimport { Constants, PromptState, BlacklistedEQParams, InteractionType } from \"./Constants\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ScopeSet } from \"../ScopeSet\";\nimport { StringDict } from \"../MsalTypes\";\nimport { StringUtils } from \"./StringUtils\";\nimport { CryptoUtils } from \"./CryptoUtils\";\nimport { TimeUtils } from \"./TimeUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\nexport type LibraryStateObject = {\n    id: string,\n    ts: number\n    method: string\n};\n\n/**\n * @hidden\n */\nexport class RequestUtils {\n\n    /**\n     * @ignore\n     *\n     * @param request\n     * @param isLoginCall\n     * @param cacheStorage\n     * @param clientId\n     *\n     * validates all request parameters and generates a consumable request object\n     */\n    static validateRequest(request: AuthenticationParameters, isLoginCall: boolean, clientId: string, interactionType: InteractionType): AuthenticationParameters {\n\n        // Throw error if request is empty for acquire * calls\n        if(!isLoginCall && !request) {\n            throw ClientConfigurationError.createEmptyRequestError();\n        }\n\n        let scopes: Array<string>;\n        let extraQueryParameters: StringDict;\n\n        if(request) {\n            // if extraScopesToConsent is passed in loginCall, append them to the login request; Validate and filter scopes (the validate function will throw if validation fails)\n            scopes = isLoginCall ? ScopeSet.appendScopes(request.scopes, request.extraScopesToConsent) : request.scopes;\n            ScopeSet.validateInputScope(scopes, !isLoginCall);\n            scopes = ScopeSet.translateClientIdIfSingleScope(scopes, clientId);\n\n            // validate prompt parameter\n            this.validatePromptParameter(request.prompt);\n\n            // validate extraQueryParameters\n            extraQueryParameters = this.validateEQParameters(request.extraQueryParameters, request.claimsRequest);\n\n            // validate claimsRequest\n            this.validateClaimsRequest(request.claimsRequest);\n        }\n\n        // validate and generate state and correlationId\n        const state = this.validateAndGenerateState(request && request.state, interactionType);\n        const correlationId = this.validateAndGenerateCorrelationId(request && request.correlationId);\n\n        const validatedRequest: AuthenticationParameters = {\n            ...request,\n            extraQueryParameters,\n            scopes,\n            state,\n            correlationId\n        };\n        \n        return validatedRequest;\n    }\n\n    /**\n     * @ignore\n     *\n     * Utility to test if valid prompt value is passed in the request\n     * @param request\n     */\n    static validatePromptParameter (prompt: string): void {\n        if(prompt) {\n            if ([PromptState.LOGIN, PromptState.SELECT_ACCOUNT, PromptState.CONSENT, PromptState.NONE].indexOf(prompt) < 0) {\n                throw ClientConfigurationError.createInvalidPromptError(prompt);\n            }\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\n     * @param request\n     */\n    static validateEQParameters(extraQueryParameters: StringDict, claimsRequest: string) : StringDict {\n        const eQParams : StringDict = { ...extraQueryParameters};\n        if (!eQParams) {\n            return null;\n        }\n        if (claimsRequest) {\n            // this.logger.warning(\"Removed duplicate claims from extraQueryParameters. Please use either the claimsRequest field OR pass as extraQueryParameter - not both.\");\n            delete eQParams[Constants.claims];\n        }\n        BlacklistedEQParams.forEach(param => {\n            if (eQParams[param]) {\n                // this.logger.warning(\"Removed duplicate \" + param + \" from extraQueryParameters. Please use the \" + param + \" field in request object.\");\n                delete eQParams[param];\n            }\n        });\n\n        return eQParams;\n    }\n\n    /**\n     * @ignore\n     *\n     * Validates the claims passed in request is a JSON\n     * TODO: More validation will be added when the server team tells us how they have actually implemented claims\n     * @param claimsRequest\n     */\n    static validateClaimsRequest(claimsRequest: string): void {\n        if (!claimsRequest) {\n            return;\n        }\n        try {\n            JSON.parse(claimsRequest);\n        } catch (e) {\n            throw ClientConfigurationError.createClaimsRequestParsingError(e);\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     * generate unique state per request\n     * @param userState User-provided state value\n     * @returns State string include library state and user state\n     */\n    static validateAndGenerateState(userState: string, interactionType: InteractionType): string {\n        return !StringUtils.isEmpty(userState) ? `${RequestUtils.generateLibraryState(interactionType)}${Constants.resourceDelimiter}${userState}` : RequestUtils.generateLibraryState(interactionType);\n    }\n\n    /**\n     * Generates the state value used by the library.\n     *\n     * @returns Base64 encoded string representing the state\n     */\n    static generateLibraryState(interactionType: InteractionType): string {\n        const stateObject: LibraryStateObject = {\n            id: CryptoUtils.createNewGuid(),\n            ts: TimeUtils.now(),\n            method: interactionType\n        };\n\n        const stateString = JSON.stringify(stateObject);\n\n        return CryptoUtils.base64Encode(stateString);\n    }\n\n    /**\n     * Decodes the state value into a StateObject\n     *\n     * @param state State value returned in the request\n     * @returns Parsed values from the encoded state value\n     */\n    static parseLibraryState(state: string): LibraryStateObject {\n        const libraryState = decodeURIComponent(state).split(Constants.resourceDelimiter)[0];\n\n        if (CryptoUtils.isGuid(libraryState)) {\n            // If state is guid, assume timestamp is now and is redirect, as redirect should be only method where this can happen.\n            return {\n                id: libraryState,\n                ts: TimeUtils.now(),\n                method: Constants.interactionTypeRedirect\n            };\n        }\n\n        try {\n            const stateString = CryptoUtils.base64Decode(libraryState);\n\n            const stateObject = JSON.parse(stateString);\n\n            return stateObject;\n        } catch (e) {\n            throw ClientAuthError.createInvalidStateError(state, null);\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     * validate correlationId and generate if not valid or not set by the user\n     * @param correlationId\n     */\n    static validateAndGenerateCorrelationId(correlationId: string): string {\n        // validate user set correlationId or set one for the user if null\n        if(correlationId && !CryptoUtils.isGuid(correlationId)) {\n            throw ClientConfigurationError.createInvalidCorrelationIdError();\n        }\n        return CryptoUtils.isGuid(correlationId)? correlationId : CryptoUtils.createNewGuid();\n    }\n\n    /**\n     * Create a request signature\n     * @param request\n     */\n    static createRequestSignature(request: AuthenticationParameters): string {\n        return `${request.scopes.join(\" \").toLowerCase()}${Constants.resourceDelimiter}${request.authority}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, PersistentCacheKeys, TemporaryCacheKeys, ErrorCacheKeys, ServerHashParamKeys, SESSION_STORAGE} from \"../utils/Constants\";\nimport { AccessTokenCacheItem } from \"./AccessTokenCacheItem\";\nimport { CacheLocation } from \"../Configuration\";\nimport { BrowserStorage } from \"./BrowserStorage\";\nimport { RequestUtils } from \"../utils/RequestUtils\";\nimport { AccessTokenKey } from \"./AccessTokenKey\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { IdToken } from \"../IdToken\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * @hidden\n */\nexport class AuthCache extends BrowserStorage {// Singleton\n\n    private clientId: string;\n    private rollbackEnabled: boolean;\n    private temporaryCache: BrowserStorage;\n\n    constructor(clientId: string, cacheLocation: CacheLocation, storeAuthStateInCookie: boolean) {\n        super(cacheLocation);\n        this.temporaryCache = new BrowserStorage(SESSION_STORAGE);\n        this.clientId = clientId;\n        // This is hardcoded to true for now. We may make this configurable in the future\n        this.rollbackEnabled = true;\n        this.migrateCacheEntries(storeAuthStateInCookie);\n    }\n\n    /**\n     * Support roll back to old cache schema until the next major release: true by default now\n     * @param storeAuthStateInCookie\n     */\n    private migrateCacheEntries(storeAuthStateInCookie: boolean) {\n\n        const idTokenKey = `${Constants.cachePrefix}.${PersistentCacheKeys.IDTOKEN}`;\n        const clientInfoKey = `${Constants.cachePrefix}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.cachePrefix}.${ErrorCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.cachePrefix}.${ErrorCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = super.getItem(idTokenKey);\n\n        let idToken;\n\n        if (idTokenValue) {\n            try {\n                idToken = new IdToken(idTokenValue);\n            } catch (e) {\n                return;\n            }\n        }\n\n        if (idToken && idToken.claims && idToken.claims.aud === this.clientId) {\n            const clientInfoValue = super.getItem(clientInfoKey);\n            const errorValue = super.getItem(errorKey);\n            const errorDescValue = super.getItem(errorDescKey);\n\n            const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\n            const keysToMigrate = [PersistentCacheKeys.IDTOKEN, PersistentCacheKeys.CLIENT_INFO,ErrorCacheKeys.ERROR, ErrorCacheKeys.ERROR_DESC];\n\n            keysToMigrate.forEach((cacheKey, index) => this.duplicateCacheEntry(cacheKey, values[index], storeAuthStateInCookie));\n        }\n    }\n\n    /**\n     * Utility function to help with roll back keys\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    private duplicateCacheEntry(newKey: string, value: string, storeAuthStateInCookie?: boolean) {\n        if (value) {\n            this.setItem(newKey, value, storeAuthStateInCookie);\n        }\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    private generateCacheKey(key: string, addInstanceId: boolean): string {\n        try {\n            // Defined schemas do not need the key appended\n            JSON.parse(key);\n            return key;\n        } catch (e) {\n            if (key.indexOf(`${Constants.cachePrefix}`) === 0 || key.indexOf(Constants.adalIdToken) === 0){\n                return key;\n            }\n            return addInstanceId ? `${Constants.cachePrefix}.${this.clientId}.${key}` : `${Constants.cachePrefix}.${key}`;\n        }\n    }\n\n    /**\n     * Validates that the input cache key contains the account search terms (clientId and homeAccountIdentifier) and\n     * then whether or not it contains the \"scopes\", depending on the token type being searched for. With matching account\n     * search terms, Access Token search tries to match the \"scopes\" keyword, while Id Token search expects \"scopes\" to not be included.\n     * @param key \n     * @param clientId \n     * @param homeAccountIdentifier \n     * @param tokenType \n     */\n    private matchKeyForType(key:string, clientId: string, homeAccountIdentifier: string, tokenType: string): AccessTokenKey {\n        // All valid token cache item keys are valid JSON objects, ignore keys that aren't\n        const parsedKey = StringUtils.validateAndParseJsonCacheKey(key);\n\n        if (!parsedKey) {\n            return null;\n        }\n\n        // Does the cache item match the request account\n        const accountMatches = key.match(clientId) && key.match(homeAccountIdentifier);\n        // Does the cache item match the requested token type\n        let tokenTypeMatches = false;\n\n        switch (tokenType) {\n            case ServerHashParamKeys.ACCESS_TOKEN:\n                // Cache item is an access token if scopes are included in the cache item key\n                tokenTypeMatches = !!key.match(Constants.scopes);\n                break;\n            case ServerHashParamKeys.ID_TOKEN:\n                // Cache may be an ID token if scopes are NOT included in the cache item key\n                tokenTypeMatches = !key.match(Constants.scopes);\n                break;\n        }\n\n        return (accountMatches && tokenTypeMatches) ? parsedKey : null;\n    }\n\n    /**\n     * add value to storage\n     * @param key\n     * @param value\n     * @param enableCookieStorage\n     */\n    setItem(key: string, value: string, enableCookieStorage?: boolean): void {\n        super.setItem(this.generateCacheKey(key, true), value, enableCookieStorage);\n\n        // Values stored in cookies will have rollback disabled to minimize cookie length\n        if (this.rollbackEnabled && !enableCookieStorage) {\n            super.setItem(this.generateCacheKey(key, false), value, enableCookieStorage);\n        }\n    }\n\n    /**\n     * get one item by key from storage\n     * @param key\n     * @param enableCookieStorage\n     */\n    getItem(key: string, enableCookieStorage?: boolean): string {\n        return super.getItem(this.generateCacheKey(key, true), enableCookieStorage);\n    }\n\n    /**\n     * remove value from storage\n     * @param key\n     */\n    removeItem(key: string): void {\n        this.temporaryCache.removeItem(this.generateCacheKey(key, true));\n        super.removeItem(this.generateCacheKey(key, true));\n        if (this.rollbackEnabled) {\n            super.removeItem(this.generateCacheKey(key, false));\n        }\n    }\n\n    /**\n     * Sets temporary cache value\n     * @param key \n     * @param value \n     * @param enableCookieStorage \n     */\n    setTemporaryItem(key: string, value: string, enableCookieStorage?: boolean): void {\n        this.temporaryCache.setItem(this.generateCacheKey(key, true), value, enableCookieStorage);\n    }\n\n    /**\n     * Gets temporary cache value\n     * @param key \n     * @param enableCookieStorage \n     */\n    getTemporaryItem(key: string, enableCookieStorage?: boolean): string {\n        return this.temporaryCache.getItem(this.generateCacheKey(key, true), enableCookieStorage);\n    }\n\n    /**\n     * Reset the cache items\n     */\n    resetCacheItems(): void {\n        const storage = window[this.cacheLocation];\n        let key: string;\n        for (key in storage) {\n            // Check if key contains msal prefix; For now, we are clearing all cache items created by MSAL.js\n            if (storage.hasOwnProperty(key) && (key.indexOf(Constants.cachePrefix) !== -1)) {\n                super.removeItem(key);\n                // TODO: Clear cache based on client id (clarify use cases where this is needed)\n            }\n        }\n    }\n\n    /**\n     * Reset all temporary cache items\n     */\n    resetTempCacheItems(state?: string): void {\n        const stateId = state && RequestUtils.parseLibraryState(state).id;\n        const isTokenRenewalInProgress = this.tokenRenewalInProgress(state);\n\n        const storage = window[this.cacheLocation];\n        // check state and remove associated cache\n        if (stateId && !isTokenRenewalInProgress) {\n            Object.keys(storage).forEach(key => {\n                if (key.indexOf(stateId) !== -1) {\n                    this.removeItem(key);\n                    super.clearItemCookie(key);\n                }\n            });\n        }\n        // delete the interaction status cache\n        this.setInteractionInProgress(false);\n        this.removeItem(TemporaryCacheKeys.REDIRECT_REQUEST);\n    }\n\n    /**\n     * Set cookies for IE\n     * @param cName\n     * @param cValue\n     * @param expires\n     */\n    setItemCookie(cName: string, cValue: string, expires?: number): void {\n        super.setItemCookie(this.generateCacheKey(cName, true), cValue, expires);\n        if (this.rollbackEnabled) {\n            super.setItemCookie(this.generateCacheKey(cName, false), cValue, expires);\n        }\n    }\n\n    clearItemCookie(cName: string): void {\n        super.clearItemCookie(this.generateCacheKey(cName, true));\n        if (this.rollbackEnabled) {\n            super.clearItemCookie(this.generateCacheKey(cName, false));\n        }\n    }\n\n    /**\n     * get one item by key from cookies\n     * @param cName\n     */\n    getItemCookie(cName: string): string {\n        return super.getItemCookie(this.generateCacheKey(cName, true));\n    }\n\n    /**\n     * Get all tokens of a certain type from the cache\n     * @param clientId \n     * @param homeAccountIdentifier \n     * @param tokenType\n     */\n    getAllTokensByType(clientId: string, homeAccountIdentifier: string, tokenType: string): Array<AccessTokenCacheItem> {\n        const results = Object.keys(window[this.cacheLocation]).reduce((tokens, key) => {\n            const matchedTokenKey: AccessTokenKey = this.matchKeyForType(key, clientId, homeAccountIdentifier, tokenType);\n            if (matchedTokenKey) {\n                const value = this.getItem(key);\n                if (value) {\n                    try {\n                        const newAccessTokenCacheItem = new AccessTokenCacheItem(matchedTokenKey, JSON.parse(value));\n                        return tokens.concat([ newAccessTokenCacheItem ]);\n                    } catch (err) {\n                        // Skip cache items with non-valid JSON values\n                        return tokens;\n                    }\n                }\n            }\n\n            return tokens;\n        }, []);\n        return results;\n    }\n\n    /**\n     * Get all access tokens in the cache\n     * @param clientId\n     * @param homeAccountIdentifier\n     */\n    getAllAccessTokens(clientId: string, homeAccountIdentifier: string): Array<AccessTokenCacheItem> {\n        return this.getAllTokensByType(clientId, homeAccountIdentifier, ServerHashParamKeys.ACCESS_TOKEN);\n    }\n\n    /**\n     * Get all id tokens in the cache in the form of AccessTokenCacheItem objects so they are \n     * in a normalized format and can make use of the existing cached access token validation logic\n     */\n    getAllIdTokens(clientId: string, homeAccountIdentifier: string): Array<AccessTokenCacheItem> {\n        return this.getAllTokensByType(clientId, homeAccountIdentifier, ServerHashParamKeys.ID_TOKEN);\n    }\n\n    /**\n     * Get all access and ID tokens in the cache\n     * @param clientId \n     * @param homeAccountIdentifier \n     */\n    getAllTokens(clientId: string, homeAccountIdentifier: string): Array<AccessTokenCacheItem> {\n        const accessTokens = this.getAllAccessTokens(clientId, homeAccountIdentifier);\n        const idTokens =  this.getAllIdTokens(clientId, homeAccountIdentifier);\n        return [...accessTokens, ...idTokens];\n    }\n\n    /**\n     * Returns whether or not interaction is currently in progress. Optionally scope it to just this clientId\n     * @param forThisClient \n     */\n    isInteractionInProgress(matchClientId: boolean): boolean {\n        const clientId = this.getInteractionInProgress();\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    /**\n     * Returns the clientId of the interaction currently in progress\n     */\n    getInteractionInProgress(): string {\n        return this.getTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.INTERACTION_STATUS, false));\n    }\n\n    /**\n     * Sets interaction in progress state\n     * @param isInProgress \n     */\n    setInteractionInProgress(newInProgressValue: boolean): void {\n        if (newInProgressValue) {\n            if (this.isInteractionInProgress(false)) {\n                throw ClientAuthError.createAcquireTokenInProgressError();\n            } else {\n                // Ensure we don't overwrite interaction in progress for a different clientId\n                this.setTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.INTERACTION_STATUS, false), this.clientId);\n            }\n        } else if (!newInProgressValue && this.isInteractionInProgress(true)) {\n            // Only remove if the current in progress interaction is for this clientId\n            this.removeItem(this.generateCacheKey(TemporaryCacheKeys.INTERACTION_STATUS, false));\n        }\n    }\n\n    /**\n     * Return if the token renewal is still in progress\n     * \n     * @param stateValue\n     */\n    private tokenRenewalInProgress(stateValue: string): boolean {\n        const renewStatus = this.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, stateValue));\n        return !!(renewStatus && renewStatus === Constants.inProgress);\n    }\n\n    /**\n     * Clear all cookies\n     */\n    public clearMsalCookie(state?: string): void {\n        /*\n         * If state is truthy, remove values associated with that request.\n         * Otherwise, remove all MSAL cookies.\n         */\n        if (state) {\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, state));\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, state));\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, state));\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, state));\n        } else {\n            const cookies = document.cookie.split(\";\");\n            cookies.forEach(cookieString => {\n                const [\n                    cookieName\n                ] = cookieString.trim().split(\"=\");\n\n                if (cookieName.indexOf(Constants.cachePrefix) > -1) {\n                    super.clearItemCookie(cookieName);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create acquireTokenAccountKey to cache account object\n     * @param accountId\n     * @param state\n     */\n    public static generateAcquireTokenAccountKey(accountId: string, state: string): string {\n        const stateId = RequestUtils.parseLibraryState(state).id;\n        return `${TemporaryCacheKeys.ACQUIRE_TOKEN_ACCOUNT}${Constants.resourceDelimiter}${accountId}${Constants.resourceDelimiter}${stateId}`;\n    }\n\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    public static generateAuthorityKey(state: string): string {\n        return AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.AUTHORITY, state);\n    }\n\n    /**\n     * Generates the cache key for temporary cache items, using request state\n     * @param tempCacheKey Cache key prefix\n     * @param state Request state value\n     */\n    public static generateTemporaryCacheKey(tempCacheKey: TemporaryCacheKeys, state: string): string {\n        // Use the state id (a guid), in the interest of shorter key names, which is important for cookies.\n        const stateId = RequestUtils.parseLibraryState(state).id;\n        return `${tempCacheKey}${Constants.resourceDelimiter}${stateId}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientInfo } from \"./ClientInfo\";\nimport { IdToken } from \"./IdToken\";\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\nimport { StringUtils } from \"./utils/StringUtils\";\nimport { StringDict } from \"./MsalTypes\";\n\n/**\n * accountIdentifier       combination of idToken.uid and idToken.utid\n * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid\n * userName                idToken.preferred_username\n * name                    idToken.name\n * idToken                 idToken\n * sid                     idToken.sid - session identifier\n * environment             idtoken.issuer (the authority that issues the token)\n */\nexport class Account {\n\n    accountIdentifier: string;\n    homeAccountIdentifier: string;\n    userName: string;\n    name: string;\n    idToken: StringDict; // will be deprecated soon\n    idTokenClaims: StringDict;\n    sid: string;\n    environment: string;\n\n    /**\n     * Creates an Account Object\n     * @praram accountIdentifier\n     * @param homeAccountIdentifier\n     * @param userName\n     * @param name\n     * @param idToken\n     * @param sid\n     * @param environment\n     */\n    constructor(accountIdentifier: string, homeAccountIdentifier: string, userName: string, name: string, idTokenClaims: StringDict, sid: string,  environment: string) {\n        this.accountIdentifier = accountIdentifier;\n        this.homeAccountIdentifier = homeAccountIdentifier;\n        this.userName = userName;\n        this.name = name;\n        // will be deprecated soon\n        this.idToken = idTokenClaims;\n        this.idTokenClaims = idTokenClaims;\n        this.sid = sid;\n        this.environment = environment;\n    }\n\n    /**\n     * @hidden\n     * @param idToken\n     * @param clientInfo\n     */\n    static createAccount(idToken: IdToken, clientInfo: ClientInfo): Account {\n\n        // create accountIdentifier\n        const accountIdentifier: string = idToken.objectId ||  idToken.subject;\n\n        // create homeAccountIdentifier\n        const uid: string = clientInfo ? clientInfo.uid : \"\";\n        const utid: string = clientInfo ? clientInfo.utid : \"\";\n\n        let homeAccountIdentifier: string;\n        if (!StringUtils.isEmpty(uid)) {\n            homeAccountIdentifier = StringUtils.isEmpty(utid)? CryptoUtils.base64Encode(uid): CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\n        }\n        return new Account(accountIdentifier, homeAccountIdentifier, idToken.preferredName, idToken.name, idToken.claims, idToken.sid, idToken.issuer);\n    }\n\n    /**\n     * Utils function to compare two Account objects - used to check if the same user account is logged in\n     *\n     * @param a1: Account object\n     * @param a2: Account object\n     */\n    static compareAccounts(a1: Account, a2: Account): boolean {\n        if (!a1 || !a2) {\n            return false;\n        }\n        if (a1.homeAccountIdentifier && a2.homeAccountIdentifier) {\n            if (a1.homeAccountIdentifier === a2.homeAccountIdentifier) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { UrlUtils } from \"./UrlUtils\";\nimport { Logger } from \"../Logger\";\nimport { AuthCache } from \"../cache/AuthCache\";\nimport { TemporaryCacheKeys, Constants } from \"./Constants\";\nimport { TimeUtils } from \"./TimeUtils\";\n\nexport class WindowUtils {\n    /**\n     * @hidden\n     * Interval in milliseconds that we poll a window\n     * @ignore\n     */\n    private static POLLING_INTERVAL_MS = 50;\n\n    /**\n     * @hidden\n     * Checks if the current page is running in an iframe.\n     * @ignore\n     */\n    static isInIframe(): boolean {\n        return window.parent !== window;\n    }\n\n    /**\n     * @hidden\n     * Check if the current page is running in a popup.\n     * @ignore\n     */\n    static isInPopup(): boolean {\n        return !!(window.opener && window.opener !== window);\n    }\n\n    /**\n     * @hidden\n     * @param prefix\n     * @param scopes\n     * @param authority\n     */\n    static generateFrameName(prefix: string, requestSignature: string): string {\n        return `${prefix}${Constants.resourceDelimiter}${requestSignature}`;\n    }\n\n    /**\n     * @hidden\n     * Polls an iframe until it loads a url with a hash\n     * @ignore\n     */\n    static monitorIframeForHash(contentWindow: Window, timeout: number, urlNavigate: string, logger: Logger): Promise<string> {\n        return new Promise((resolve, reject) => {\n            /*\n             * Polling for iframes can be purely timing based,\n             * since we don't need to account for interaction.\n             */\n            const nowMark = TimeUtils.relativeNowMs();\n            const timeoutMark = nowMark + timeout;\n\n            logger.verbose(\"monitorWindowForIframe polling started\");\n\n            const intervalId = setInterval(() => {\n                if (TimeUtils.relativeNowMs() > timeoutMark) {\n                    logger.error(\"monitorIframeForHash unable to find hash in url, timing out\");\n                    logger.errorPii(`monitorIframeForHash polling timed out for url: ${urlNavigate}`);\n                    clearInterval(intervalId);\n                    reject(ClientAuthError.createTokenRenewalTimeoutError());\n                    return;\n                }\n\n                let href;\n\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow.location.href;\n                } catch (e) {}\n\n                if (href && UrlUtils.urlContainsHash(href)) {\n                    logger.verbose(\"monitorIframeForHash found url in hash\");\n                    clearInterval(intervalId);\n                    resolve(contentWindow.location.hash);\n                } \n            }, WindowUtils.POLLING_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     * Polls a popup until it loads a url with a hash\n     * @ignore\n     */\n    static monitorPopupForHash(contentWindow: Window, timeout: number, urlNavigate: string, logger: Logger): Promise<string> {\n        return new Promise((resolve, reject) => {\n            /*\n             * Polling for popups needs to be tick-based,\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\n             */\n            const maxTicks = timeout / WindowUtils.POLLING_INTERVAL_MS;\n            let ticks = 0;\n\n            logger.verbose(\"monitorWindowForHash polling started\");\n\n            const intervalId = setInterval(() => {\n                if (contentWindow.closed) {\n                    logger.error(\"monitorWindowForHash window closed\");\n                    clearInterval(intervalId);\n                    reject(ClientAuthError.createUserCancelledError());\n                    return;\n                }\n\n                let href;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n\n                /*\n                 * Only run clock when we are on same domain for popups\n                 * as popup operations can take a long time.\n                 */\n                ticks++;\n\n                if (href && UrlUtils.urlContainsHash(href)) {\n                    logger.verbose(\"monitorPopupForHash found url in hash\");\n                    clearInterval(intervalId);\n                    const hash = contentWindow.location.hash;\n                    WindowUtils.clearUrlFragment(contentWindow);\n                    resolve(hash);\n                } else if (ticks > maxTicks) {\n                    logger.error(\"monitorPopupForHash unable to find hash in url, timing out\");\n                    logger.errorPii(`monitorPopupForHash polling timed out for url: ${urlNavigate}`);\n                    clearInterval(intervalId);\n                    reject(ClientAuthError.createTokenRenewalTimeoutError());\n                }\n            }, WindowUtils.POLLING_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads iframe with authorization endpoint URL\n     * @ignore\n     */\n    static loadFrame(urlNavigate: string, frameName: string, timeoutMs: number, logger: Logger): Promise<HTMLIFrameElement> {\n        /*\n         * This trick overcomes iframe navigation in IE\n         * IE does not load the page consistently in iframe\n         */\n        logger.infoPii(\"LoadFrame: \" + frameName);\n\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                const frameHandle = this.loadFrameSync(urlNavigate, frameName, logger);\n\n                if (!frameHandle) {\n                    reject(`Unable to load iframe with name: ${frameName}`);\n                    return;\n                }\n\n                resolve(frameHandle);\n            }, timeoutMs);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n     * @param urlNavigate\n     * @param frameName\n     * @param logger\n     */\n    static loadFrameSync(urlNavigate: string, frameName: string, logger: Logger): HTMLIFrameElement{\n        const frameHandle = WindowUtils.addHiddenIFrame(frameName, logger);\n\n        // returning to handle null in loadFrame, also to avoid null object access errors\n        if (!frameHandle) {\n            return null;\n        }\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\n            frameHandle.src = urlNavigate;\n            logger.infoPii(\"Frame Name : \" + frameName + \" Navigated to: \" + urlNavigate);\n        }\n\n        return frameHandle;\n    }\n\n    /**\n     * @hidden\n     * Adds the hidden iframe for silent token renewal.\n     * @ignore\n     */\n    static addHiddenIFrame(iframeId: string, logger: Logger): HTMLIFrameElement {\n        if (typeof iframeId === \"undefined\") {\n            return null;\n        }\n        \n        logger.info(\"Add msal iframe to document\");\n        logger.infoPii(\"Add msal frame to document:\" + iframeId);\n        let adalFrame = document.getElementById(iframeId) as HTMLIFrameElement;\n        if (!adalFrame) {\n            logger.verbose(\"Add msal iframe does not exist\");\n            const ifr = document.createElement(\"iframe\");\n            ifr.setAttribute(\"id\", iframeId);\n            ifr.setAttribute(\"aria-hidden\", \"true\");\n            ifr.style.visibility = \"hidden\";\n            ifr.style.position = \"absolute\";\n            ifr.style.width = ifr.style.height = \"0\";\n            ifr.style.border = \"0\";\n            ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n            adalFrame = (document.getElementsByTagName(\"body\")[0].appendChild(ifr) as HTMLIFrameElement);\n        } else {\n            logger.verbose(\"Add msal iframe already exists\");\n        }\n\n        return adalFrame;\n    }\n\n    /**\n     * @hidden\n     * Removes a hidden iframe from the page.\n     * @ignore\n     */\n    static removeHiddenIframe(iframe: HTMLIFrameElement): void {\n        if (document.body === iframe.parentNode) {\n            document.body.removeChild(iframe);\n        }\n    }\n\n    /**\n     * @hidden\n     * Find and return the iframe element with the given hash\n     * @ignore\n     */\n    static getIframeWithHash(hash: string): HTMLIFrameElement {\n        const iframes = document.getElementsByTagName(\"iframe\");\n        const iframeArray: Array<HTMLIFrameElement> = Array.apply(null, Array(iframes.length)).map((iframe: HTMLIFrameElement, index: number) => iframes.item(index)); // eslint-disable-line prefer-spread\n\n        return iframeArray.filter((iframe: HTMLIFrameElement) => {\n            try {\n                return iframe.contentWindow.location.hash === hash;\n            } catch (e) {\n                return false;\n            }\n        })[0];\n    }\n\n    /**\n     * @hidden\n     * Returns an array of all the popups opened by MSAL\n     * @ignore\n     */\n    static getPopups(): Array<Window> {\n        if (!window.openedWindows) {\n            window.openedWindows = [];\n        }\n\n        return window.openedWindows;\n    }\n\n    /**\n     * @hidden\n     * Find and return the popup with the given hash\n     * @ignore\n     */\n    static getPopUpWithHash(hash: string): Window {\n        return WindowUtils.getPopups().filter(popup => {\n            try {\n                return popup.location.hash === hash;\n            } catch (e) {\n                return false;\n            }\n        })[0];\n    }\n\n    /**\n     * @hidden\n     * Add the popup to the known list of popups\n     * @ignore\n     */\n    static trackPopup(popup: Window): void {\n        WindowUtils.getPopups().push(popup);\n    }\n\n    /**\n     * @hidden\n     * Close all popups\n     * @ignore\n     */\n    static closePopups(): void {\n        WindowUtils.getPopups().forEach(popup => popup.close());\n    }\n\n    /**\n     * @ignore\n     *\n     * blocks any login/acquireToken calls to reload from within a hidden iframe (generated for silent calls)\n     */\n    static blockReloadInHiddenIframes(): void {\n        // return an error if called from the hidden iframe created by the msal js silent calls\n        if (UrlUtils.urlContainsHash(window.location.hash) && WindowUtils.isInIframe()) {\n            throw ClientAuthError.createBlockTokenRequestsInHiddenIframeError();\n        }\n    }\n\n    /**\n     *\n     * @param cacheStorage\n     */\n    static checkIfBackButtonIsPressed(cacheStorage: AuthCache): void {\n        const redirectCache = cacheStorage.getItem(TemporaryCacheKeys.REDIRECT_REQUEST);\n\n        // if redirect request is set and there is no hash\n        if(redirectCache && !UrlUtils.urlContainsHash(window.location.hash)) {\n            const splitCache = redirectCache.split(Constants.resourceDelimiter);\n            splitCache.shift();\n            const state = splitCache.length > 0 ? splitCache.join(Constants.resourceDelimiter): null;\n            cacheStorage.resetTempCacheItems(state);\n        }\n    }\n\n    /**\n     * Removes url fragment from browser url\n     */\n    static clearUrlFragment(contentWindow: Window): void {\n        contentWindow.location.hash = \"\";\n        // Office.js sets history.replaceState to null\n        if (typeof contentWindow.history.replaceState === \"function\") {\n            // Full removes \"#\" from url\n            contentWindow.history.replaceState(null, null, `${contentWindow.location.pathname}${contentWindow.location.search}`);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthResponse } from \"../AuthResponse\";\nimport { Account } from \"../Account\";\nimport { IdToken } from \"../IdToken\";\nimport { ResponseTypes, ServerHashParamKeys } from \"./Constants\";\nimport { ServerRequestParameters } from \"../ServerRequestParameters\";\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class ResponseUtils {\n\n    static setResponseIdToken(originalResponse: AuthResponse, idTokenObj: IdToken) : AuthResponse {\n        if (!originalResponse) {\n            return null;\n        } else if (!idTokenObj) {\n            return originalResponse;\n        }\n\n        const exp = Number(idTokenObj.expiration);\n        if (exp && !originalResponse.expiresOn) {\n            originalResponse.expiresOn = new Date(exp * 1000);\n        }\n    \n        return {\n            ...originalResponse,\n            idToken: idTokenObj,\n            idTokenClaims: idTokenObj.claims,\n            uniqueId: idTokenObj.objectId || idTokenObj.subject,\n            tenantId: idTokenObj.tenantId,\n        };\n    }\n\n    static buildAuthResponse(idToken: IdToken, authResponse: AuthResponse, serverAuthenticationRequest: ServerRequestParameters, account: Account, scopes: Array<string>, accountState: string): AuthResponse {\n        switch(serverAuthenticationRequest.responseType) {\n            case ResponseTypes.id_token:\n                let idTokenResponse: AuthResponse = {\n                    ...authResponse,\n                    tokenType: ServerHashParamKeys.ID_TOKEN,\n                    account: account,\n                    scopes: scopes,\n                    accountState: accountState\n                };\n                \n                idTokenResponse = ResponseUtils.setResponseIdToken(idTokenResponse, idToken);\n                return (idTokenResponse.idToken) ? idTokenResponse : null;\n            case ResponseTypes.id_token_token:\n                const idTokeTokenResponse = ResponseUtils.setResponseIdToken(authResponse, idToken);\n                return (idTokeTokenResponse && idTokeTokenResponse.accessToken && idTokeTokenResponse.idToken) ? idTokeTokenResponse : null;\n            case ResponseTypes.token:\n                const tokenResponse = ResponseUtils.setResponseIdToken(authResponse, idToken);\n                return tokenResponse;\n            default: \n                return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nimport { Authority } from \"./Authority\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ITenantDiscoveryResponse, OpenIdConfiguration } from \"./ITenantDiscoveryResponse\";\nimport TelemetryManager from \"../telemetry/TelemetryManager\";\n\nexport class AuthorityFactory {\n    private static metadataMap = new Map<string, ITenantDiscoveryResponse>();\n\n    public static async saveMetadataFromNetwork(authorityInstance: Authority, telemetryManager: TelemetryManager, correlationId: string): Promise<ITenantDiscoveryResponse> {\n        const metadata = await authorityInstance.resolveEndpointsAsync(telemetryManager, correlationId);\n        this.metadataMap.set(authorityInstance.CanonicalAuthority, metadata);\n        return metadata;\n    }\n\n    public static getMetadata(authorityUrl: string): ITenantDiscoveryResponse {\n        return this.metadataMap.get(authorityUrl);\n    }\n\n    public static saveMetadataFromConfig(authorityUrl: string, authorityMetadataJson: string): void {\n        try {\n            if (authorityMetadataJson) {\n                const parsedMetadata = JSON.parse(authorityMetadataJson) as OpenIdConfiguration;\n\n                if (!parsedMetadata.authorization_endpoint || !parsedMetadata.end_session_endpoint || !parsedMetadata.issuer) {\n                    throw ClientConfigurationError.createInvalidAuthorityMetadataError();\n                }\n\n                this.metadataMap.set(authorityUrl, {\n                    AuthorizationEndpoint: parsedMetadata.authorization_endpoint,\n                    EndSessionEndpoint: parsedMetadata.end_session_endpoint,\n                    Issuer: parsedMetadata.issuer\n                });\n            }\n        } catch (e) {\n            throw ClientConfigurationError.createInvalidAuthorityMetadataError();\n        }\n    }\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\n     */\n    public static CreateInstance(authorityUrl: string, validateAuthority: boolean, authorityMetadata?: string): Authority {\n        if (StringUtils.isEmpty(authorityUrl)) {\n            return null;\n        }\n\n        if (authorityMetadata) {\n            // todo: log statements\n            this.saveMetadataFromConfig(authorityUrl, authorityMetadata);\n        }\n        return new Authority(authorityUrl, validateAuthority, this.metadataMap.get(authorityUrl));\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"./Logger\";\nimport { UrlUtils } from \"./utils/UrlUtils\";\nimport { TelemetryEmitter } from \"./telemetry/TelemetryTypes\";\n\n/**\n * Cache location options supported by MSAL are:\n * - local storage: MSAL uses browsers local storage to store its cache\n * - session storage: MSAL uses the browsers session storage to store its cache\n */\nexport type CacheLocation = \"localStorage\" | \"sessionStorage\";\n\n/**\n * Defaults for the Configuration Options\n */\nconst FRAME_TIMEOUT = 6000;\nconst OFFSET = 300;\nconst NAVIGATE_FRAME_WAIT = 500;\n\n/**\n * @type AuthOptions: Use this to configure the auth options in the Configuration object\n *\n *  - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n *  - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n *  - validateAuthority           - Used to turn authority validation on/off. When set to true (default), MSAL will compare the application's authority against well-known URLs templates representing well-formed authorities. It is useful when the authority is obtained at run time to prevent MSAL from displaying authentication prompts from malicious pages.\n *  - authorityMetadata           - OpenID configuration metadata for the configured authority. Must be passed as a JSON string.\n *  - knownAuthorities            - If validateAuthority is set to True, this will be used to set the Trusted Host list. Defaults to empty array\n *  - redirectUri                 - The redirect URI of the application, this should be same as the value in the application registration portal.Defaults to `window.location.href`.\n *  - postLogoutRedirectUri       - Used to redirect the user to this location after logout. Defaults to `window.location.href`.\n *  - navigateToLoginRequestUrl   - Used to turn off default navigation to start page after login. Default is true. This is used only for redirect flows.\n *\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority?: string;\n    validateAuthority?: boolean;\n    authorityMetadata?: string;\n    knownAuthorities?: Array<string>;\n    redirectUri?: string | (() => string);\n    postLogoutRedirectUri?: string | (() => string);\n    navigateToLoginRequestUrl?: boolean;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n *\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\n * - storeAuthStateInCookie   - If set, MSAL store's the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n */\nexport type CacheOptions = {\n    cacheLocation?: CacheLocation;\n    storeAuthStateInCookie?: boolean;\n};\n\n/**\n * Telemetry Config Options\n * - applicationName              - Name of the consuming apps application\n * - applicationVersion           - Verison of the consuming application\n * - telemetryEmitter             - Function where telemetry events are flushed to\n */\nexport type TelemetryOptions = {\n    applicationName: string;\n    applicationVersion: string;\n    telemetryEmitter: TelemetryEmitter\n    // TODO, add onlyAddFailureTelemetry option\n};\n\n/**\n * Library Specific Options\n *\n * - logger                       - Used to initialize the Logger object; TODO: Expand on logger details or link to the documentation on logger\n * - loadFrameTimeout             - maximum time the library should wait for a frame to load\n * - tokenRenewalOffsetSeconds    - sets the window of offset needed to renew the token before expiry\n * - navigateFrameWait            - sets the wait time for hidden iFrame navigation\n */\nexport type SystemOptions = {\n    logger?: Logger;\n    loadFrameTimeout?: number;\n    tokenRenewalOffsetSeconds?: number;\n    navigateFrameWait?: number;\n    telemetry?: TelemetryOptions\n};\n\n/**\n * App/Framework specific environment support\n *\n * - isAngular                - flag set to determine if it is Angular Framework. MSAL uses this to broadcast tokens. More to come here: detangle this dependency from core.\n * - unprotectedResources     - Array of URI's which are unprotected resources. MSAL will not attach a token to outgoing requests that have these URI. Defaults to 'null'.\n * - protectedResourceMap     - This is mapping of resources to scopes used by MSAL for automatically attaching access tokens in web API calls.A single access token is obtained for the resource. So you can map a specific resource path as follows: {\"https://graph.microsoft.com/v1.0/me\", [\"user.read\"]}, or the app URL of the resource as: {\"https://graph.microsoft.com/\", [\"user.read\", \"mail.send\"]}. This is required for CORS calls.\n *\n */\nexport type FrameworkOptions = {\n    isAngular?: boolean;\n    unprotectedResources?: Array<string>;\n    protectedResourceMap?: Map<string, Array<string>>;\n};\n\n/**\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - auth: this is where you configure auth elements like clientID,  authority used for authenticating against the Microsoft Identity Platform\n * - cache: this is where you configure cache location and whether to store cache in cookies\n * - system: this is where you can configure the logger, frame timeout etc.\n * - framework: this is where you can configure the running mode of angular. More to come here soon.\n */\nexport type Configuration = {\n    auth: AuthOptions,\n    cache?: CacheOptions,\n    system?: SystemOptions,\n    framework?: FrameworkOptions\n};\n\nconst DEFAULT_AUTH_OPTIONS: AuthOptions = {\n    clientId: \"\",\n    authority: null,\n    validateAuthority: true,\n    authorityMetadata: \"\",\n    knownAuthorities: [],\n    redirectUri: () => UrlUtils.getCurrentUrl(),\n    postLogoutRedirectUri: () => UrlUtils.getCurrentUrl(),\n    navigateToLoginRequestUrl: true\n};\n\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\n    cacheLocation: \"sessionStorage\",\n    storeAuthStateInCookie: false\n};\n\nconst DEFAULT_SYSTEM_OPTIONS: SystemOptions = {\n    logger: new Logger(null),\n    loadFrameTimeout: FRAME_TIMEOUT,\n    tokenRenewalOffsetSeconds: OFFSET,\n    navigateFrameWait: NAVIGATE_FRAME_WAIT\n};\n\nconst DEFAULT_FRAMEWORK_OPTIONS: FrameworkOptions = {\n    isAngular: false,\n    unprotectedResources: new Array<string>(),\n    protectedResourceMap: new Map<string, Array<string>>()\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param TAuthOptions\n * @param TCacheOptions\n * @param TSystemOptions\n * @param TFrameworkOptions\n * @param TAuthorityDataOptions\n *\n * @returns TConfiguration object\n */\n\nexport function buildConfiguration({ auth, cache = {}, system = {}, framework = {}}: Configuration): Configuration {\n    const overlayedConfig: Configuration = {\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...auth },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...cache },\n        system: { ...DEFAULT_SYSTEM_OPTIONS, ...system },\n        framework: { ...DEFAULT_FRAMEWORK_OPTIONS, ...framework }\n    };\n    return overlayedConfig;\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\nexport const ServerErrorMessage = {\n    serverUnavailable: {\n        code: \"server_unavailable\",\n        desc: \"Server is temporarily unavailable.\"\n    },\n    unknownServerError: {\n        code: \"unknown_server_error\"\n    },\n};\n\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nexport class ServerError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ServerError\";\n\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n\n    static createServerUnavailableError(): ServerError {\n        return new ServerError(ServerErrorMessage.serverUnavailable.code,\n            ServerErrorMessage.serverUnavailable.desc);\n    }\n\n    static createUnknownServerError(errorDesc: string): ServerError {\n        return new ServerError(ServerErrorMessage.unknownServerError.code,\n            errorDesc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerError } from \"./ServerError\";\n\nexport const InteractionRequiredAuthErrorMessage = {\n    interactionRequired: {\n        code: \"interaction_required\"\n    },\n    consentRequired: {\n        code: \"consent_required\"\n    },\n    loginRequired: {\n        code: \"login_required\"\n    },\n};\n\n/**\n * Error thrown when the user is required to perform an interactive token request.\n */\nexport class InteractionRequiredAuthError extends ServerError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"InteractionRequiredAuthError\";\n\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n    }\n\n    static isInteractionRequiredError(errorString: string) : boolean {\n        const interactionRequiredCodes = [\n            InteractionRequiredAuthErrorMessage.interactionRequired.code,\n            InteractionRequiredAuthErrorMessage.consentRequired.code,\n            InteractionRequiredAuthErrorMessage.loginRequired.code\n        ];\n\n        return errorString && interactionRequiredCodes.indexOf(errorString) > -1;\n    }\n\n    static createLoginRequiredAuthError(errorDesc: string): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.loginRequired.code, errorDesc);\n    }\n\n    static createInteractionRequiredAuthError(errorDesc: string): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.interactionRequired.code, errorDesc);\n    }\n\n    static createConsentRequiredAuthError(errorDesc: string): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.consentRequired.code, errorDesc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Account } from \"./Account\";\nimport { IdToken } from \"./IdToken\";\nimport { StringDict } from \"./MsalTypes\";\n\nexport type AuthResponse = {\n    uniqueId: string;\n    tenantId: string;\n    tokenType: string;\n    idToken: IdToken;\n    idTokenClaims: StringDict;\n    accessToken: string;\n    scopes: Array<string>;\n    expiresOn: Date;\n    account: Account;\n    accountState: string;\n    fromCache: boolean\n};\n\nexport function buildResponseStateOnly(state: string) : AuthResponse {\n    return {\n        uniqueId: \"\",\n        tenantId: \"\",\n        tokenType: \"\",\n        idToken: null,\n        idTokenClaims: null,\n        accessToken: \"\",\n        scopes: null,\n        expiresOn: null,\n        account: null,\n        accountState: state,\n        fromCache: false\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const EVENT_NAME_PREFIX = \"msal.\";\nexport const EVENT_NAME_KEY = \"event_name\";\nexport const START_TIME_KEY = \"start_time\";\nexport const ELAPSED_TIME_KEY  = \"elapsed_time\";\n\nexport const TELEMETRY_BLOB_EVENT_NAMES =  {\n    MsalCorrelationIdConstStrKey: \"Microsoft.MSAL.correlation_id\",\n    ApiTelemIdConstStrKey: \"msal.api_telem_id\",\n    ApiIdConstStrKey: \"msal.api_id\",\n    BrokerAppConstStrKey: \"Microsoft_MSAL_broker_app\",\n    CacheEventCountConstStrKey: \"Microsoft_MSAL_cache_event_count\",\n    HttpEventCountTelemetryBatchKey: \"Microsoft_MSAL_http_event_count\",\n    IdpConstStrKey: \"Microsoft_MSAL_idp\",\n    IsSilentTelemetryBatchKey: \"\",\n    IsSuccessfulConstStrKey: \"Microsoft_MSAL_is_successful\",\n    ResponseTimeConstStrKey: \"Microsoft_MSAL_response_time\",\n    TenantIdConstStrKey: \"Microsoft_MSAL_tenant_id\",\n    UiEventCountTelemetryBatchKey: \"Microsoft_MSAL_ui_event_count\"\n};\n\n// This is used to replace the real tenant in telemetry info\nexport const TENANT_PLACEHOLDER = \"<tenant>\";\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport TelemetryEvent from \"./TelemetryEvent\";\nimport { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\nimport { scrubTenantFromUri, hashPersonalIdentifier, prependEventNamePrefix } from \"./TelemetryUtils\";\n\nexport const EVENT_KEYS = {\n    AUTHORITY: prependEventNamePrefix(\"authority\"),\n    AUTHORITY_TYPE: prependEventNamePrefix(\"authority_type\"),\n    PROMPT: prependEventNamePrefix(\"ui_behavior\"),\n    TENANT_ID: prependEventNamePrefix(\"tenant_id\"),\n    USER_ID: prependEventNamePrefix(\"user_id\"),\n    WAS_SUCESSFUL: prependEventNamePrefix(\"was_successful\"),\n    API_ERROR_CODE: prependEventNamePrefix(\"api_error_code\"),\n    LOGIN_HINT: prependEventNamePrefix(\"login_hint\")\n};\n\nexport enum API_CODE {\n    AcquireTokenRedirect = 2001,\n    AcquireTokenSilent = 2002,\n    AcquireTokenPopup = 2003,\n    LoginRedirect = 2004,\n    LoginPopup = 2005,\n    Logout = 2006\n}\n\nexport enum API_EVENT_IDENTIFIER {\n    AcquireTokenRedirect = \"AcquireTokenRedirect\",\n    AcquireTokenSilent = \"AcquireTokenSilent\",\n    AcquireTokenPopup = \"AcquireTokenPopup\",\n    LoginRedirect = \"LoginRedirect\",\n    LoginPopup = \"LoginPopup\",\n    Logout = \"Logout\"\n}\n\nconst mapEventIdentiferToCode = {\n    [API_EVENT_IDENTIFIER.AcquireTokenSilent]: API_CODE.AcquireTokenSilent,\n    [API_EVENT_IDENTIFIER.AcquireTokenPopup]: API_CODE.AcquireTokenPopup,\n    [API_EVENT_IDENTIFIER.AcquireTokenRedirect]: API_CODE.AcquireTokenRedirect,\n    [API_EVENT_IDENTIFIER.LoginPopup]: API_CODE.LoginPopup,\n    [API_EVENT_IDENTIFIER.LoginRedirect]: API_CODE.LoginRedirect,\n    [API_EVENT_IDENTIFIER.Logout]: API_CODE.Logout\n};\n\nexport default class ApiEvent extends TelemetryEvent {\n\n    private piiEnabled: boolean;\n\n    constructor(correlationId: string, piiEnabled: boolean, apiEventIdentifier?: API_EVENT_IDENTIFIER) {\n        super(prependEventNamePrefix(\"api_event\"), correlationId, apiEventIdentifier);\n        if (apiEventIdentifier) {\n            this.apiCode = mapEventIdentiferToCode[apiEventIdentifier];\n            this.apiEventIdentifier = apiEventIdentifier;\n        }\n        this.piiEnabled = piiEnabled;\n    }\n\n    public set apiEventIdentifier(apiEventIdentifier: string) {\n        this.event[TELEMETRY_BLOB_EVENT_NAMES.ApiTelemIdConstStrKey] = apiEventIdentifier;\n    }\n\n    public set apiCode(apiCode: number) {\n        this.event[TELEMETRY_BLOB_EVENT_NAMES.ApiIdConstStrKey] = apiCode;\n    }\n\n    public set authority(uri: string) {\n        this.event[EVENT_KEYS.AUTHORITY] = scrubTenantFromUri(uri).toLowerCase();\n    }\n\n    public set apiErrorCode(errorCode: string) {\n        this.event[EVENT_KEYS.API_ERROR_CODE] = errorCode;\n    }\n\n    public set tenantId(tenantId: string) {\n        this.event[EVENT_KEYS.TENANT_ID] = this.piiEnabled && tenantId ?\n            hashPersonalIdentifier(tenantId)\n            : null;\n    }\n\n    public set accountId(accountId: string) {\n        this.event[EVENT_KEYS.USER_ID] = this.piiEnabled && accountId ?\n            hashPersonalIdentifier(accountId)\n            : null;\n    }\n\n    public set wasSuccessful(wasSuccessful: boolean) {\n        this.event[EVENT_KEYS.WAS_SUCESSFUL] = wasSuccessful;\n    }\n\n    public get wasSuccessful(): boolean {\n        return this.event[EVENT_KEYS.WAS_SUCESSFUL] === true;\n    }\n\n    public set loginHint(loginHint: string) {\n        this.event[EVENT_KEYS.LOGIN_HINT] = this.piiEnabled && loginHint ?\n            hashPersonalIdentifier(loginHint)\n            : null;\n    }\n\n    public set authorityType(authorityType: string) {\n        this.event[EVENT_KEYS.AUTHORITY_TYPE] = authorityType.toLowerCase();\n    }\n\n    public set promptType(promptType: string) {\n        this.event[EVENT_KEYS.PROMPT] = promptType.toLowerCase();\n    }\n\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TENANT_PLACEHOLDER, EVENT_NAME_PREFIX } from \"./TelemetryConstants\";\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\nimport { UrlUtils } from \"../utils/UrlUtils\";\nimport { Authority } from \"../authority/Authority\";\n\nexport const scrubTenantFromUri = (uri: string): String => {\n\n    const url = UrlUtils.GetUrlComponents(uri);\n\n    // validate trusted host\n    if (Authority.isAdfs(uri)) {\n        /**\n         * returning what was passed because the library needs to work with uris that are non\n         * AAD trusted but passed by users such as B2C or others.\n         * HTTP Events for instance can take a url to the open id config endpoint\n         */\n        return uri;\n    }\n\n    const pathParams = url.PathSegments;\n\n    if (pathParams && pathParams.length >= 2) {\n        const tenantPosition = pathParams[1] ===  \"tfp\" ? 2 : 1;\n        if (tenantPosition < pathParams.length) {\n            pathParams[tenantPosition] = TENANT_PLACEHOLDER;\n        }\n    }\n\n    return  `${url.Protocol}//${url.HostNameAndPort}/${pathParams.join(\"/\")}`;\n};\n\nexport const hashPersonalIdentifier = (valueToHash: string): string => {\n    /*\n     * TODO sha256 this\n     * Current test runner is being funny with node libs that are webpacked anyway\n     * need a different solution\n     */\n    return CryptoUtils.base64Encode(valueToHash);\n};\n\nexport const prependEventNamePrefix = (suffix: string): string => `${EVENT_NAME_PREFIX}${suffix || \"\"}`;\n\nexport const supportsBrowserPerformance = (): boolean => !!(\n    typeof window !== \"undefined\" &&\n        \"performance\" in window &&\n        window.performance.mark && \n        window.performance.measure\n);\n\nexport const endBrowserPerformanceMeasurement = (measureName: string, startMark: string, endMark: string): void => {\n    if (supportsBrowserPerformance()) {\n        window.performance.mark(endMark);\n        window.performance.measure(measureName, startMark, endMark);\n\n        window.performance.clearMeasures(measureName);\n        window.performance.clearMarks(startMark);\n        window.performance.clearMarks(endMark);\n    }\n};\n\nexport const startBrowserPerformanceMeasurement = (startMark: string): void => {\n    if (supportsBrowserPerformance()) {\n        window.performance.mark(startMark);\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    TELEMETRY_BLOB_EVENT_NAMES,\n    EVENT_NAME_KEY,\n    START_TIME_KEY,\n    ELAPSED_TIME_KEY\n} from \"./TelemetryConstants\";\nimport { prependEventNamePrefix, startBrowserPerformanceMeasurement, endBrowserPerformanceMeasurement } from \"./TelemetryUtils\";\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\n\nexport default class TelemetryEvent {\n\n    private startTimestamp: number;\n    // eslint-disable-next-line\n    protected event: any; // TODO TYPE THIS\n    public eventId: string;\n    private label: string;\n\n    constructor(eventName: string, correlationId: string, eventLabel: string) {\n        this.eventId = CryptoUtils.createNewGuid();\n        this.label = eventLabel;\n        this.event = {\n            [prependEventNamePrefix(EVENT_NAME_KEY)]: eventName,\n            [prependEventNamePrefix(ELAPSED_TIME_KEY)]: -1,\n            [`${TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey}`]: correlationId\n        };\n    }\n\n    private setElapsedTime(time: Number): void {\n        this.event[prependEventNamePrefix(ELAPSED_TIME_KEY)] = time;\n    }\n\n    public stop(): void {\n        // Set duration of event\n        this.setElapsedTime(+Date.now() - +this.startTimestamp);\n\n        endBrowserPerformanceMeasurement(this.displayName, this.perfStartMark, this.perfEndMark);\n    }\n\n    public start(): void {\n        this.startTimestamp = Date.now();\n        this.event[prependEventNamePrefix(START_TIME_KEY)] = this.startTimestamp;\n\n        startBrowserPerformanceMeasurement(this.perfStartMark);\n    }\n\n    public get telemetryCorrelationId(): string {\n        return this.event[`${TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey}`];\n    }\n\n    public set telemetryCorrelationId(value: string) {\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey}`] = value;\n    }\n\n    public get eventName(): string {\n        return this.event[prependEventNamePrefix(EVENT_NAME_KEY)];\n    }\n\n    public get(): object {\n        return {\n            ...this.event,\n            eventId: this.eventId\n        };\n    }\n\n    public get key(): string {\n        return `${this.telemetryCorrelationId}_${this.eventId}-${this.eventName}`;\n    }\n\n    public get displayName(): string {\n        return `Msal-${this.label}-${this.telemetryCorrelationId}`;\n    }\n\n    private get perfStartMark() {\n        return `start-${this.key}`;\n    }\n\n    private get perfEndMark() {\n        return `end-${this.key}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\nimport TelemetryEvent from \"./TelemetryEvent\";\nimport { EventCount, TelemetryPlatform } from \"./TelemetryTypes\";\nimport { prependEventNamePrefix } from \"./TelemetryUtils\";\n\nexport default class DefaultEvent extends TelemetryEvent {\n    // TODO Platform Type\n    constructor(platform: TelemetryPlatform, correlationId: string, clientId: string, eventCount: EventCount) {\n        super(prependEventNamePrefix(\"default_event\"), correlationId, \"DefaultEvent\");\n        this.event[prependEventNamePrefix(\"client_id\")] = clientId;\n        this.event[prependEventNamePrefix(\"sdk_plaform\")] = platform.sdk;\n        this.event[prependEventNamePrefix(\"sdk_version\")] = platform.sdkVersion;\n        this.event[prependEventNamePrefix(\"application_name\")] = platform.applicationName;\n        this.event[prependEventNamePrefix(\"application_version\")] = platform.applicationVersion;\n        this.event[prependEventNamePrefix(\"effective_connection_speed\")] = platform.networkInformation && platform.networkInformation.connectionSpeed;\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.UiEventCountTelemetryBatchKey}`] = this.getEventCount(prependEventNamePrefix(\"ui_event\"), eventCount);\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.HttpEventCountTelemetryBatchKey}`] = this.getEventCount(prependEventNamePrefix(\"http_event\"), eventCount);\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.CacheEventCountConstStrKey}`] = this.getEventCount(prependEventNamePrefix(\"cache_event\"), eventCount);\n        // / Device id?\n    }\n\n    private getEventCount(eventName: string, eventCount: EventCount): number {\n        if (!eventCount[eventName]) {\n            return 0;\n        }\n        return eventCount[eventName];\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport TelemetryEvent from \"./TelemetryEvent\";\nimport { scrubTenantFromUri, prependEventNamePrefix } from \"./TelemetryUtils\";\nimport { ServerRequestParameters } from \"../ServerRequestParameters\";\nimport { StringDict } from \"../MsalTypes\";\n\nexport const EVENT_KEYS = {\n    HTTP_PATH: prependEventNamePrefix(\"http_path\"),\n    USER_AGENT: prependEventNamePrefix(\"user_agent\"),\n    QUERY_PARAMETERS: prependEventNamePrefix(\"query_parameters\"),\n    API_VERSION: prependEventNamePrefix(\"api_version\"),\n    RESPONSE_CODE: prependEventNamePrefix(\"response_code\"),\n    O_AUTH_ERROR_CODE: prependEventNamePrefix(\"oauth_error_code\"),\n    HTTP_METHOD: prependEventNamePrefix(\"http_method\"),\n    REQUEST_ID_HEADER: prependEventNamePrefix(\"request_id_header\"),\n    SPE_INFO: prependEventNamePrefix(\"spe_info\"),\n    SERVER_ERROR_CODE: prependEventNamePrefix(\"server_error_code\"),\n    SERVER_SUB_ERROR_CODE: prependEventNamePrefix(\"server_sub_error_code\"),\n    URL: prependEventNamePrefix(\"url\")\n};\n\nexport default class HttpEvent extends TelemetryEvent {\n\n    constructor(correlationId: string, eventLabel: string) {\n        super(prependEventNamePrefix(\"http_event\"), correlationId, eventLabel);\n    }\n\n    public set url(url: string) {\n        const scrubbedUri = scrubTenantFromUri(url);\n        this.event[EVENT_KEYS.URL] = scrubbedUri && scrubbedUri.toLowerCase();\n    }\n\n    public set httpPath(httpPath: string) {\n        this.event[EVENT_KEYS.HTTP_PATH] = scrubTenantFromUri(httpPath).toLowerCase();\n    }\n\n    public set userAgent(userAgent: string) {\n        this.event[EVENT_KEYS.USER_AGENT] = userAgent;\n    }\n\n    public set queryParams(queryParams: StringDict) {\n        this.event[EVENT_KEYS.QUERY_PARAMETERS] = ServerRequestParameters.generateQueryParametersString(queryParams);\n    }\n\n    public set apiVersion(apiVersion: string) {\n        this.event[EVENT_KEYS.API_VERSION] = apiVersion.toLowerCase();\n    }\n\n    public set httpResponseStatus(statusCode: number) {\n        this.event[EVENT_KEYS.RESPONSE_CODE] = statusCode;\n    }\n\n    public set oAuthErrorCode(errorCode: string) {\n        this.event[EVENT_KEYS.O_AUTH_ERROR_CODE] = errorCode;\n    }\n\n    public set httpMethod(httpMethod: string) {\n        this.event[EVENT_KEYS.HTTP_METHOD] = httpMethod;\n    }\n\n    public set requestIdHeader(requestIdHeader: string) {\n        this.event[EVENT_KEYS.REQUEST_ID_HEADER] = requestIdHeader;\n    }\n\n    /**\n     * Indicates whether the request was executed on a ring serving SPE traffic.\n     * An empty string indicates this occurred on an outer ring, and the string \"I\"\n     * indicates the request occurred on the inner ring\n     */\n    public set speInfo(speInfo: string) {\n        this.event[EVENT_KEYS.SPE_INFO] = speInfo;\n    }\n\n    public set serverErrorCode(errorCode: string) {\n        this.event[EVENT_KEYS.SERVER_ERROR_CODE] = errorCode;\n    }\n\n    public set serverSubErrorCode(subErrorCode: string) {\n        this.event[EVENT_KEYS.SERVER_SUB_ERROR_CODE] = subErrorCode;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport TelemetryEvent from \"./TelemetryEvent\";\nimport {\n    CompletedEvents,\n    EventCount,\n    EventCountByCorrelationId,\n    InProgressEvents,\n    TelemetryConfig,\n    TelemetryPlatform,\n    TelemetryEmitter\n} from \"./TelemetryTypes\";\nimport DefaultEvent from \"./DefaultEvent\";\nimport { Constants } from \"../utils/Constants\";\nimport ApiEvent, { API_EVENT_IDENTIFIER } from \"./ApiEvent\";\nimport { Logger } from \"../Logger\";\nimport HttpEvent from \"./HttpEvent\";\nimport { version as libraryVersion } from \"../packageMetadata\";\n\nexport default class TelemetryManager {\n\n    // correlation Id to list of events\n    private completedEvents: CompletedEvents = {};\n    // event key to event\n    private inProgressEvents: InProgressEvents = {};\n    // correlation id to map of eventname to count\n    private eventCountByCorrelationId: EventCountByCorrelationId = {};\n\n    // Implement after API EVENT\n    private onlySendFailureTelemetry: boolean = false;\n    private telemetryPlatform: TelemetryPlatform;\n    private clientId: string;\n    private telemetryEmitter: TelemetryEmitter;\n    private logger: Logger;\n\n    constructor(config: TelemetryConfig, telemetryEmitter: TelemetryEmitter, logger: Logger) {\n        // TODO THROW if bad options\n        this.telemetryPlatform = {\n            sdk: Constants.libraryName,\n            sdkVersion: libraryVersion,\n            networkInformation: {\n                // @ts-ignore\n                connectionSpeed: typeof navigator !== \"undefined\" && navigator.connection && navigator.connection.effectiveType\n            },\n            ...config.platform\n        };\n        this.clientId = config.clientId;\n        this.onlySendFailureTelemetry = config.onlySendFailureTelemetry;\n        /*\n         * TODO, when i get to wiring this through, think about what it means if\n         * a developer does not implement telem at all, we still instrument, but telemetryEmitter can be\n         * optional?\n         */\n        this.telemetryEmitter = telemetryEmitter;\n        this.logger = logger;\n    }\n\n    static getTelemetrymanagerStub(clientId: string, logger: Logger) : TelemetryManager {\n        const applicationName = \"UnSetStub\";\n        const applicationVersion = \"0.0\";\n        const telemetryEmitter = () => {};\n        const telemetryPlatform: TelemetryPlatform = {\n            applicationName,\n            applicationVersion\n        };\n        const telemetryManagerConfig: TelemetryConfig = {\n            platform: telemetryPlatform,\n            clientId: clientId\n        };\n\n        return new this(telemetryManagerConfig, telemetryEmitter, logger);\n    }\n\n    startEvent(event: TelemetryEvent): void {\n        this.logger.verbose(`Telemetry Event started: ${event.key}`);\n\n        if (!this.telemetryEmitter) {\n            return;\n        }\n\n        event.start();\n        this.inProgressEvents[event.key] = event;\n    }\n\n    stopEvent(event: TelemetryEvent): void {\n        this.logger.verbose(`Telemetry Event stopped: ${event.key}`);\n\n        if (!this.telemetryEmitter || !this.inProgressEvents[event.key]) {\n            return;\n        }\n        event.stop();\n        this.incrementEventCount(event);\n\n        const completedEvents = this.completedEvents[event.telemetryCorrelationId];\n\n        this.completedEvents[event.telemetryCorrelationId] = [...(completedEvents || []), event];\n\n        delete this.inProgressEvents[event.key];\n    }\n\n    flush(correlationId: string): void {\n        this.logger.verbose(`Flushing telemetry events: ${correlationId}`);\n\n        // If there is only unfinished events should this still return them?\n        if (!this.telemetryEmitter || !this.completedEvents[correlationId]) {\n            return;\n        }\n\n        const orphanedEvents = this.getOrphanedEvents(correlationId);\n        orphanedEvents.forEach(event => this.incrementEventCount(event));\n        const eventsToFlush: Array<TelemetryEvent> = [\n            ...this.completedEvents[correlationId],\n            ...orphanedEvents\n        ];\n\n        delete this.completedEvents[correlationId];\n        const eventCountsToFlush: EventCount = this.eventCountByCorrelationId[correlationId];\n\n        delete this.eventCountByCorrelationId[correlationId];\n        // TODO add funcitonality for onlyFlushFailures after implementing api event? ??\n\n        if (!eventsToFlush || !eventsToFlush.length) {\n            return;\n        }\n\n        const defaultEvent: DefaultEvent = new DefaultEvent(\n            this.telemetryPlatform,\n            correlationId,\n            this.clientId,\n            eventCountsToFlush\n        );\n\n        const eventsWithDefaultEvent = [ ...eventsToFlush, defaultEvent ];\n\n        this.telemetryEmitter(eventsWithDefaultEvent.map(e => e.get()));\n    }\n\n    createAndStartApiEvent(correlationId: string, apiEventIdentifier: API_EVENT_IDENTIFIER): ApiEvent {\n        const apiEvent = new ApiEvent(correlationId, this.logger.isPiiLoggingEnabled(), apiEventIdentifier);\n        this.startEvent(apiEvent);\n        return apiEvent;\n    }\n\n    stopAndFlushApiEvent(correlationId: string, apiEvent: ApiEvent, wasSuccessful: boolean, errorCode?: string): void {\n        apiEvent.wasSuccessful = wasSuccessful;\n        if (errorCode) {\n            apiEvent.apiErrorCode = errorCode;\n        }\n        this.stopEvent(apiEvent);\n        this.flush(correlationId);\n    }\n\n    createAndStartHttpEvent(correlation: string, httpMethod: string, url: string, eventLabel: string): HttpEvent {\n        const httpEvent = new HttpEvent(correlation, eventLabel);\n        httpEvent.url = url;\n        httpEvent.httpMethod = httpMethod;\n        this.startEvent(httpEvent);\n        return httpEvent;\n    }\n\n    private incrementEventCount(event: TelemetryEvent): void {\n        /*\n         * TODO, name cache event different?\n         * if type is cache event, change name\n         */\n        const eventName = event.eventName;\n        const eventCount = this.eventCountByCorrelationId[event.telemetryCorrelationId];\n        if (!eventCount) {\n            this.eventCountByCorrelationId[event.telemetryCorrelationId] = {\n                [eventName]: 1\n            };\n        } else {\n            eventCount[eventName] = eventCount[eventName] ? eventCount[eventName] + 1 : 1;\n        }\n    }\n\n    private getOrphanedEvents(correlationId: string): Array<TelemetryEvent> {\n        return Object.keys(this.inProgressEvents)\n            .reduce((memo, eventKey) => {\n                if (eventKey.indexOf(correlationId) !== -1) {\n                    const event = this.inProgressEvents[eventKey];\n                    delete this.inProgressEvents[eventKey];\n                    return [...memo, event];\n                }\n                return memo;\n            }, []);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccessTokenCacheItem } from \"../cache/AccessTokenCacheItem\";\nimport { ScopeSet } from \"../ScopeSet\";\nimport { UrlUtils } from \"./UrlUtils\"; \n\n/**\n * @hidden\n */\nexport class AuthCacheUtils {\n    static filterTokenCacheItemsByScope(tokenCacheItems: Array<AccessTokenCacheItem>, requestScopes: string []): Array<AccessTokenCacheItem> {\n        return tokenCacheItems.filter((cacheItem: AccessTokenCacheItem) => {\n            const cachedScopes = cacheItem.key.scopes.split(\" \");\n            const searchScopes = ScopeSet.removeDefaultScopes(requestScopes);\n\n            // If requestScopes contain only default scopes search for default scopes otherwise search for everything but default scopes\n            return searchScopes.length === 0 ? ScopeSet.containsScope(cachedScopes, requestScopes): ScopeSet.containsScope(cachedScopes, searchScopes);\n        });\n\n    }\n\n    static filterTokenCacheItemsByAuthority(tokenCacheItems: Array<AccessTokenCacheItem>, authority: string): Array<AccessTokenCacheItem> {\n        return tokenCacheItems.filter((cacheItem: AccessTokenCacheItem) => UrlUtils.CanonicalizeUri(cacheItem.key.authority) === authority);\n    }\n\n    static filterTokenCacheItemsByDomain(tokenCacheItems: Array<AccessTokenCacheItem>, requestDomain: string): Array<AccessTokenCacheItem> {\n        return tokenCacheItems.filter(cacheItem => {\n            const cacheItemDomain = UrlUtils.GetUrlComponents(cacheItem.key.authority).HostNameAndPort;\n            return cacheItemDomain === requestDomain;\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccessTokenCacheItem } from \"./cache/AccessTokenCacheItem\";\nimport { AccessTokenKey } from \"./cache/AccessTokenKey\";\nimport { AccessTokenValue } from \"./cache/AccessTokenValue\";\nimport { ServerRequestParameters } from \"./ServerRequestParameters\";\nimport { Authority, AuthorityType } from \"./authority/Authority\";\nimport { ClientInfo } from \"./ClientInfo\";\nimport { IdToken } from \"./IdToken\";\nimport { Logger } from \"./Logger\";\nimport { AuthCache } from \"./cache/AuthCache\";\nimport { Account } from \"./Account\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport { StringUtils } from \"./utils/StringUtils\";\nimport { WindowUtils } from \"./utils/WindowUtils\";\nimport { TokenUtils } from \"./utils/TokenUtils\";\nimport { TimeUtils } from \"./utils/TimeUtils\";\nimport { UrlUtils } from \"./utils/UrlUtils\";\nimport { RequestUtils } from \"./utils/RequestUtils\";\nimport { ResponseUtils } from \"./utils/ResponseUtils\";\nimport { AuthorityFactory } from \"./authority/AuthorityFactory\";\nimport { Configuration, buildConfiguration, TelemetryOptions } from \"./Configuration\";\nimport { AuthenticationParameters } from \"./AuthenticationParameters\";\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\nimport { AuthError } from \"./error/AuthError\";\nimport { ClientAuthError, ClientAuthErrorMessage } from \"./error/ClientAuthError\";\nimport { ServerError } from \"./error/ServerError\";\nimport { InteractionRequiredAuthError } from \"./error/InteractionRequiredAuthError\";\nimport { AuthResponse, buildResponseStateOnly } from \"./AuthResponse\";\nimport TelemetryManager from \"./telemetry/TelemetryManager\";\nimport { TelemetryPlatform, TelemetryConfig } from \"./telemetry/TelemetryTypes\";\nimport ApiEvent, { API_EVENT_IDENTIFIER } from \"./telemetry/ApiEvent\";\n\nimport { Constants,\n    ServerHashParamKeys,\n    InteractionType,\n    ResponseTypes,\n    TemporaryCacheKeys,\n    PersistentCacheKeys,\n    ErrorCacheKeys,\n    FramePrefix\n} from \"./utils/Constants\";\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\nimport { TrustedAuthority } from \"./authority/TrustedAuthority\";\nimport { AuthCacheUtils } from \"./utils/AuthCacheUtils\";\n\n// default authority\nconst DEFAULT_AUTHORITY = \"https://login.microsoftonline.com/common\";\n\n/**\n * Interface to handle iFrame generation, Popup Window creation and redirect handling\n */\ndeclare global {\n    // eslint-disable-next-line\n    interface Window {\n        msal: Object;\n        CustomEvent: CustomEvent;\n        Event: Event;\n        activeRenewals: {};\n        renewStates: Array<string>;\n        callbackMappedToRenewStates : {};\n        promiseMappedToRenewStates: {};\n        openedWindows: Array<Window>;\n        requestType: string;\n    }\n}\n\n/**\n * @hidden\n * @ignore\n */\nexport interface CacheResult {\n    errorDesc: string;\n    token: string;\n    error: string;\n}\n\n/**\n * @hidden\n * @ignore\n * Data type to hold information about state returned from the server\n */\nexport type ResponseStateInfo = {\n    state: string;\n    timestamp: number,\n    method: string;\n    stateMatch: boolean;\n    requestType: string;\n};\n\n/**\n * A type alias for an authResponseCallback function.\n * {@link (authResponseCallback:type)}\n * @param authErr error created for failure cases\n * @param response response containing token strings in success cases, or just state value in error cases\n */\nexport type authResponseCallback = (authErr: AuthError, response?: AuthResponse) => void;\n\n/**\n * A type alias for a tokenReceivedCallback function.\n * {@link (tokenReceivedCallback:type)}\n * @returns response of type {@link (AuthResponse:type)}\n * The function that will get the call back once this API is completed (either successfully or with a failure).\n */\nexport type tokenReceivedCallback = (response: AuthResponse) => void;\n\n/**\n * A type alias for a errorReceivedCallback function.\n * {@link (errorReceivedCallback:type)}\n * @returns response of type {@link (AuthError:class)}\n * @returns {string} account state\n */\nexport type errorReceivedCallback = (authErr: AuthError, accountState: string) => void;\n\n/**\n * UserAgentApplication class\n *\n * Object Instance that the developer can use to make loginXX OR acquireTokenXX functions\n */\nexport class UserAgentApplication {\n\n    // input Configuration by the developer/user\n    private config: Configuration;\n\n    // callbacks for token/error\n    private authResponseCallback: authResponseCallback = null;\n    private tokenReceivedCallback: tokenReceivedCallback = null;\n    private errorReceivedCallback: errorReceivedCallback = null;\n\n    // Added for readability as these params are very frequently used\n    private logger: Logger;\n    private clientId: string;\n    private inCookie: boolean;\n    private telemetryManager: TelemetryManager;\n\n    // Cache and Account info referred across token grant flow\n    protected cacheStorage: AuthCache;\n    private account: Account;\n\n    // state variables\n    private silentAuthenticationState: string;\n    private silentLogin: boolean;\n    private redirectResponse: AuthResponse;\n    private redirectError: AuthError;\n\n    // Authority Functionality\n    protected authorityInstance: Authority;\n\n    /**\n     * setter for the authority URL\n     * @param {string} authority\n     */\n    // If the developer passes an authority, create an instance\n    public set authority(val: string) {\n        this.authorityInstance = AuthorityFactory.CreateInstance(val, this.config.auth.validateAuthority);\n    }\n\n    /**\n     * Method to manage the authority URL.\n     *\n     * @returns {string} authority\n     */\n    public get authority(): string {\n        return this.authorityInstance.CanonicalAuthority;\n    }\n\n    /**\n     * Get the current authority instance from the MSAL configuration object\n     *\n     * @returns {@link Authority} authority instance\n     */\n    public getAuthorityInstance(): Authority {\n        return this.authorityInstance;\n    }\n\n    /**\n     * @constructor\n     * Constructor for the UserAgentApplication used to instantiate the UserAgentApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application.\n     * You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;.\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     *\n     * In Azure B2C, authority is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/&lt;policyName&gt;/\n     *\n     * @param {@link (Configuration:type)} configuration object for the MSAL UserAgentApplication instance\n     */\n    constructor(configuration: Configuration) {\n        \n        // Set the Configuration\n        this.config = buildConfiguration(configuration);\n\n        this.logger = this.config.system.logger;\n        this.clientId = this.config.auth.clientId;\n        this.inCookie = this.config.cache.storeAuthStateInCookie;\n\n        this.telemetryManager = this.getTelemetryManagerFromConfig(this.config.system.telemetry, this.clientId);\n\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.validateAuthority, this.config.auth.knownAuthorities);\n        AuthorityFactory.saveMetadataFromConfig(this.config.auth.authority, this.config.auth.authorityMetadata);\n\n        // if no authority is passed, set the default: \"https://login.microsoftonline.com/common\"\n        this.authority = this.config.auth.authority || DEFAULT_AUTHORITY;\n        // cache keys msal - typescript throws an error if any value other than \"localStorage\" or \"sessionStorage\" is passed\n        this.cacheStorage = new AuthCache(this.clientId, this.config.cache.cacheLocation, this.inCookie);\n\n        // Initialize window handling code\n        if (!window.activeRenewals) {\n            window.activeRenewals = {};\n        }\n        if (!window.renewStates) {\n            window.renewStates = [];\n        }\n        if (!window.callbackMappedToRenewStates) {\n            window.callbackMappedToRenewStates = {};\n        }\n        if (!window.promiseMappedToRenewStates) {\n            window.promiseMappedToRenewStates = {};\n        }\n        window.msal = this;\n\n        const urlHash = window.location.hash;\n        const urlContainsHash = UrlUtils.urlContainsHash(urlHash);\n\n        // check if back button is pressed\n        WindowUtils.checkIfBackButtonIsPressed(this.cacheStorage);\n\n        // On the server 302 - Redirect, handle this\n        if (urlContainsHash && this.cacheStorage.isInteractionInProgress(true)) {\n            const stateInfo = this.getResponseState(urlHash);\n            if (stateInfo.method === Constants.interactionTypeRedirect) {\n                this.handleRedirectAuthenticationResponse(urlHash);\n            }\n        }\n    }\n\n    // #region Redirect Callbacks\n    /**\n     * @hidden\n     * @ignore\n     * Set the callback functions for the redirect flow to send back the success or error object.\n     * @param {@link (tokenReceivedCallback:type)} successCallback - Callback which contains the AuthResponse object, containing data from the server.\n     * @param {@link (errorReceivedCallback:type)} errorCallback - Callback which contains a AuthError object, containing error data from either the server\n     * or the library, depending on the origin of the error.\n     */\n    handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback): void;\n    handleRedirectCallback(authCallback: authResponseCallback): void;\n    handleRedirectCallback(authOrTokenCallback: authResponseCallback | tokenReceivedCallback, errorReceivedCallback?: errorReceivedCallback): void {\n        if (!authOrTokenCallback) {\n            throw ClientConfigurationError.createInvalidCallbackObjectError(authOrTokenCallback);\n        }\n\n        // Set callbacks\n        if (errorReceivedCallback) {\n            this.tokenReceivedCallback = authOrTokenCallback as tokenReceivedCallback;\n            this.errorReceivedCallback = errorReceivedCallback;\n            this.logger.warning(\"This overload for callback is deprecated - please change the format of the callbacks to a single callback as shown: (err: AuthError, response: AuthResponse).\");\n        } else {\n            this.authResponseCallback = authOrTokenCallback as authResponseCallback;\n        }\n\n        if (this.redirectError) {\n            this.authErrorHandler(Constants.interactionTypeRedirect, this.redirectError, this.redirectResponse);\n        } else if (this.redirectResponse) {\n            this.authResponseHandler(Constants.interactionTypeRedirect, this.redirectResponse);\n        }\n    }\n\n    /**\n     * Public API to verify if the URL contains the hash with known properties\n     * @param hash\n     */\n    public urlContainsHash(hash: string): boolean {\n        this.logger.verbose(\"UrlContainsHash has been called\");\n        return UrlUtils.urlContainsHash(hash);\n    }\n\n    private authResponseHandler(interactionType: InteractionType, response: AuthResponse, resolve?: Function) : void {\n        this.logger.verbose(\"AuthResponseHandler has been called\");\n\n        this.cacheStorage.setInteractionInProgress(false);\n        if (interactionType === Constants.interactionTypeRedirect) {\n            this.logger.verbose(\"Interaction type is redirect\");\n            if (this.errorReceivedCallback) {\n                this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling success callback with response\");\n                this.tokenReceivedCallback(response);\n            } else if (this.authResponseCallback) {\n                this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with response\");\n                this.authResponseCallback(null, response);\n            }\n        } else if (interactionType === Constants.interactionTypePopup) {\n            this.logger.verbose(\"Interaction type is popup, resolving\");\n            resolve(response);\n        } else {\n            throw ClientAuthError.createInvalidInteractionTypeError();\n        }\n    }\n\n    private authErrorHandler(interactionType: InteractionType, authErr: AuthError, response: AuthResponse, reject?: Function) : void {\n        this.logger.verbose(\"AuthErrorHandler has been called\");\n\n        // set interaction_status to complete\n        this.cacheStorage.setInteractionInProgress(false);\n        if (interactionType === Constants.interactionTypeRedirect) {\n            this.logger.verbose(\"Interaction type is redirect\");\n            if (this.errorReceivedCallback) {\n                this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling error callback\");\n                this.errorReceivedCallback(authErr, response.accountState);\n            } else if (this.authResponseCallback) {\n                this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with error\");\n                this.authResponseCallback(authErr, response);\n            } else {\n                this.logger.verbose(\"handleRedirectCallback has not been called and no callbacks are registered, throwing error\");\n                throw authErr;\n            }\n        } else if (interactionType === Constants.interactionTypePopup) {\n            this.logger.verbose(\"Interaction type is popup, rejecting\");\n            reject(authErr);\n        } else {\n            throw ClientAuthError.createInvalidInteractionTypeError();\n        }\n    }\n\n    // #endregion\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint.\n     * @param {@link (AuthenticationParameters:type)}\n     */\n    loginRedirect(userRequest?: AuthenticationParameters): void {\n        this.logger.verbose(\"LoginRedirect has been called\");\n\n        // validate request\n        const request: AuthenticationParameters = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypeRedirect);\n        this.acquireTokenInteractive(Constants.interactionTypeRedirect, true, request,  null, null);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint.\n     * @param {@link (AuthenticationParameters:type)}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     */\n    acquireTokenRedirect(userRequest: AuthenticationParameters): void {\n        this.logger.verbose(\"AcquireTokenRedirect has been called\");\n\n        // validate request\n        const request: AuthenticationParameters = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeRedirect);\n        this.acquireTokenInteractive(Constants.interactionTypeRedirect, false, request, null, null);\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param {@link (AuthenticationParameters:type)}\n     *\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    loginPopup(userRequest?: AuthenticationParameters): Promise<AuthResponse> {\n        this.logger.verbose(\"LoginPopup has been called\");\n\n        // validate request\n        const request: AuthenticationParameters = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypePopup);\n        const apiEvent: ApiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.LoginPopup);\n\n        return new Promise<AuthResponse>((resolve, reject) => {\n            this.acquireTokenInteractive(Constants.interactionTypePopup, true, request, resolve, reject);\n        })\n            .then((resp) => {\n                this.logger.verbose(\"Successfully logged in\");\n                this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\n                return resp;\n            })\n            .catch((error: AuthError) => {\n                this.cacheStorage.resetTempCacheItems(request.state);\n                this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\n                throw error;\n            });\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     * @param {@link AuthenticationParameters}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    acquireTokenPopup(userRequest: AuthenticationParameters): Promise<AuthResponse> {\n        this.logger.verbose(\"AcquireTokenPopup has been called\");\n\n        // validate request\n        const request: AuthenticationParameters = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypePopup);\n        const apiEvent: ApiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenPopup);\n\n        return new Promise<AuthResponse>((resolve, reject) => {\n            this.acquireTokenInteractive(Constants.interactionTypePopup, false, request, resolve, reject);\n        })\n            .then((resp) => {\n                this.logger.verbose(\"Successfully acquired token\");\n                this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\n                return resp;\n            })\n            .catch((error: AuthError) => {\n                this.cacheStorage.resetTempCacheItems(request.state);\n                this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\n                throw error;\n            });\n    }\n\n    // #region Acquire Token\n\n    /**\n     * Use when initiating the login process or when you want to obtain an access_token for your API,\n     * either by redirecting the user's browser window to the authorization endpoint or via opening a popup window in the user's browser.\n     * @param {@link (AuthenticationParameters:type)}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     */\n    private acquireTokenInteractive(interactionType: InteractionType, isLoginCall: boolean, request: AuthenticationParameters, resolve?: Function, reject?: Function): void {\n        this.logger.verbose(\"AcquireTokenInteractive has been called\");\n\n        // block the request if made from the hidden iframe\n        WindowUtils.blockReloadInHiddenIframes();\n\n        try {\n            this.cacheStorage.setInteractionInProgress(true);\n        } catch (e) {\n            // If already in progress, do not proceed\n            const thrownError = isLoginCall ? ClientAuthError.createLoginInProgressError() : ClientAuthError.createAcquireTokenInProgressError();\n            const stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\n            this.cacheStorage.resetTempCacheItems(request.state);\n            this.authErrorHandler(interactionType,\n                thrownError,\n                stateOnlyResponse,\n                reject);\n            return;\n        }\n\n        if(interactionType === Constants.interactionTypeRedirect) {\n            this.cacheStorage.setItem(TemporaryCacheKeys.REDIRECT_REQUEST, `${Constants.inProgress}${Constants.resourceDelimiter}${request.state}`);\n        }\n\n        // Get the account object if a session exists\n        let account: Account;\n        if (request && request.account && !isLoginCall) {\n            account = request.account;\n            this.logger.verbose(\"Account set from request\");\n        } else {\n            account = this.getAccount();\n            this.logger.verbose(\"Account set from MSAL Cache\");\n        }\n\n        // If no session exists, prompt the user to login.\n        if (!account && !ServerRequestParameters.isSSOParam(request)) {\n            if (isLoginCall) {\n                // extract ADAL id_token if exists\n                const adalIdToken = this.extractADALIdToken();\n\n                // silent login if ADAL id_token is retrieved successfully - SSO\n                if (adalIdToken && !request.scopes) {\n                    this.logger.info(\"ADAL's idToken exists. Extracting login information from ADAL's idToken\");\n                    const tokenRequest: AuthenticationParameters = this.buildIDTokenRequest(request);\n\n                    this.silentLogin = true;\n                    this.acquireTokenSilent(tokenRequest).then(response => {\n                        this.silentLogin = false;\n                        this.logger.info(\"Unified cache call is successful\");\n\n                        this.authResponseHandler(interactionType, response, resolve);\n                        return;\n                    }, (error) => {\n                        this.silentLogin = false;\n                        this.logger.error(\"Error occurred during unified cache ATS: \" + error);\n\n                        // proceed to login since ATS failed\n                        this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\n                    });\n                }\n                // No ADAL token found, proceed to login\n                else {\n                    this.logger.verbose(\"Login call but no token found, proceed to login\");\n                    this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\n                }\n            }\n            // AcquireToken call, but no account or context given, so throw error\n            else {\n                this.logger.verbose(\"AcquireToken call, no context or account given\");\n                this.logger.info(\"User login is required\");\n                const stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\n                this.cacheStorage.resetTempCacheItems(request.state);\n                this.authErrorHandler(interactionType,\n                    ClientAuthError.createUserLoginRequiredError(),\n                    stateOnlyResponse,\n                    reject);\n                return;\n            }\n        }\n        // User session exists\n        else {\n            this.logger.verbose(\"User session exists, login not required\");\n            this.acquireTokenHelper(account, interactionType, isLoginCall, request, resolve, reject);\n        }\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     * Helper function to acquireToken\n     *\n     */\n    private async acquireTokenHelper(account: Account, interactionType: InteractionType, isLoginCall: boolean, request: AuthenticationParameters, resolve?: Function, reject?: Function): Promise<void> {\n        this.logger.verbose(\"AcquireTokenHelper has been called\");\n        this.logger.verbose(`Interaction type: ${interactionType}. isLoginCall: ${isLoginCall}`);\n\n        const requestSignature = request.scopes ? request.scopes.join(\" \").toLowerCase() : Constants.oidcScopes.join(\" \");\n        this.logger.verbosePii(`Request signature: ${requestSignature}`);\n\n        let serverAuthenticationRequest: ServerRequestParameters;\n        const acquireTokenAuthority = (request && request.authority) ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;\n        let popUpWindow: Window;\n\n        try {\n            if (!acquireTokenAuthority.hasCachedMetadata()) {\n                this.logger.verbose(\"No cached metadata for authority\");\n                await AuthorityFactory.saveMetadataFromNetwork(acquireTokenAuthority, this.telemetryManager, request.correlationId);\n            } else {\n                this.logger.verbose(\"Cached metadata found for authority\");\n            }\n\n            // On Fulfillment\n            const responseType: string = isLoginCall ? ResponseTypes.id_token : this.getTokenType(account, request.scopes);\n\n            const loginStartPage = request.redirectStartPage || window.location.href;\n\n            serverAuthenticationRequest = new ServerRequestParameters(\n                acquireTokenAuthority,\n                this.clientId,\n                responseType,\n                this.getRedirectUri(request && request.redirectUri),\n                request.scopes,\n                request.state,\n                request.correlationId\n            );\n            this.logger.verbose(\"Finished building server authentication request\");\n\n            this.updateCacheEntries(serverAuthenticationRequest, account, isLoginCall, loginStartPage);\n            this.logger.verbose(\"Updating cache entries\");\n\n            // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\n            serverAuthenticationRequest.populateQueryParams(account, request);\n            this.logger.verbose(\"Query parameters populated from account\");\n\n            // Construct urlNavigate\n            const urlNavigate = UrlUtils.createNavigateUrl(serverAuthenticationRequest) + Constants.response_mode_fragment;\n            // set state in cache\n            if (interactionType === Constants.interactionTypeRedirect) {\n                if (!isLoginCall) {\n                    this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, request.state), serverAuthenticationRequest.state, this.inCookie);\n                    this.logger.verbose(\"State cached for redirect\");\n                    this.logger.verbosePii(`State cached: ${serverAuthenticationRequest.state}`);\n                } else {\n                    this.logger.verbose(\"Interaction type redirect but login call is true. State not cached\");\n                }\n            } else if (interactionType === Constants.interactionTypePopup) {\n                window.renewStates.push(serverAuthenticationRequest.state);\n                window.requestType = isLoginCall ? Constants.login : Constants.renewToken;\n                this.logger.verbose(\"State saved to window\");\n                this.logger.verbosePii(`State saved: ${serverAuthenticationRequest.state}`);\n\n                // Register callback to capture results from server\n                this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\n            } else {\n                this.logger.verbose(\"Invalid interaction error. State not cached\");\n                throw ClientAuthError.createInvalidInteractionTypeError();\n            }\n\n            if (interactionType === Constants.interactionTypePopup) {\n                this.logger.verbose(\"Interaction type is popup. Generating popup window\");\n                // Generate a popup window\n                try {\n                    popUpWindow = this.openPopup(urlNavigate, \"msal\", Constants.popUpWidth, Constants.popUpHeight);\n    \n                    // Push popup window handle onto stack for tracking\n                    WindowUtils.trackPopup(popUpWindow);\n                } catch (e) {\n                    this.logger.info(ClientAuthErrorMessage.popUpWindowError.code + \":\" + ClientAuthErrorMessage.popUpWindowError.desc);\n                    this.cacheStorage.setItem(ErrorCacheKeys.ERROR, ClientAuthErrorMessage.popUpWindowError.code);\n                    this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, ClientAuthErrorMessage.popUpWindowError.desc);\n                    if (reject) {\n                        reject(ClientAuthError.createPopupWindowError());\n                        return;\n                    }\n                }\n    \n                // popUpWindow will be null for redirects, so we dont need to attempt to monitor the window\n                if (popUpWindow) {\n                    try {\n                        const hash = await WindowUtils.monitorPopupForHash(popUpWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger);\n\n                        this.handleAuthenticationResponse(hash);\n\n                        // Request completed successfully, set to completed\n                        this.cacheStorage.setInteractionInProgress(false);\n                        this.logger.info(\"Closing popup window\");\n\n                        // TODO: Check how this can be extracted for any framework specific code?\n                        if (this.config.framework.isAngular) {\n                            this.broadcast(\"msal:popUpHashChanged\", hash);\n                        }\n                        \n                        WindowUtils.closePopups();\n                    } catch (error) {\n                        if (reject) {\n                            reject(error);\n                        }\n\n                        if (this.config.framework.isAngular) {\n                            this.broadcast(\"msal:popUpClosed\", error.errorCode + Constants.resourceDelimiter + error.errorMessage);\n                        } else {\n                            // Request failed, set to canceled\n                            this.cacheStorage.setInteractionInProgress(false);\n                            popUpWindow.close();\n                        }\n                    }\n                }\n            } else {\n                // If onRedirectNavigate is implemented, invoke it and provide urlNavigate\n                if (request.onRedirectNavigate) {\n                    this.logger.verbose(\"Invoking onRedirectNavigate callback\");\n\n                    const navigate = request.onRedirectNavigate(urlNavigate);\n\n                    // Returning false from onRedirectNavigate will stop navigation\n                    if (navigate !== false) {\n                        this.logger.verbose(\"onRedirectNavigate did not return false, navigating\");\n                        this.navigateWindow(urlNavigate);\n                    } else {\n                        this.logger.verbose(\"onRedirectNavigate returned false, stopping navigation\");\n                    }\n                } else {\n                    // Otherwise, perform navigation\n                    this.logger.verbose(\"Navigating window to urlNavigate\");\n                    this.navigateWindow(urlNavigate);\n                }\n            }\n        } catch (err) {\n            this.logger.error(err);\n            this.cacheStorage.resetTempCacheItems(request.state);\n            this.authErrorHandler(interactionType, ClientAuthError.createEndpointResolutionError(err.toString), buildResponseStateOnly(request.state), reject);\n            if (popUpWindow) {\n                popUpWindow.close();\n            }\n        }\n    }\n\n    /**\n     * API interfacing idToken request when applications already have a session/hint acquired by authorization client applications\n     * @param request\n     */\n    ssoSilent(request: AuthenticationParameters): Promise<AuthResponse> {\n        this.logger.verbose(\"ssoSilent has been called\");\n        \n        // throw an error on an empty request\n        if (!request) {\n            throw ClientConfigurationError.createEmptyRequestError();\n        }\n\n        // throw an error on no hints passed\n        if (!request.sid && !request.loginHint) {\n            throw ClientConfigurationError.createSsoSilentError();\n        }\n\n        return this.acquireTokenSilent({\n            ...request,\n            scopes: Constants.oidcScopes\n        });\n    }\n\n    /**\n     * Use this function to obtain a token before every call to the API / resource provider\n     *\n     * MSAL return's a cached token when available\n     * Or it send's a request to the STS to obtain a new token using a hidden iframe.\n     *\n     * @param {@link AuthenticationParameters}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     *\n     */\n    acquireTokenSilent(userRequest: AuthenticationParameters): Promise<AuthResponse> {\n        this.logger.verbose(\"AcquireTokenSilent has been called\");\n\n        // validate the request\n        const request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeSilent);\n        const apiEvent: ApiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenSilent);\n        const requestSignature = RequestUtils.createRequestSignature(request);\n\n        return new Promise<AuthResponse>(async (resolve, reject) => {\n\n            // block the request if made from the hidden iframe\n            WindowUtils.blockReloadInHiddenIframes();\n\n            const scope = request.scopes.join(\" \").toLowerCase();\n            this.logger.verbosePii(`Serialized scopes: ${scope}`);\n\n            // if the developer passes an account, give that account the priority\n            let account: Account;\n            if (request.account) {\n                account = request.account;\n                this.logger.verbose(\"Account set from request\");\n            } else {\n                account = this.getAccount();\n                this.logger.verbose(\"Account set from MSAL Cache\");\n            }\n\n            // Extract adalIdToken if stashed in the cache to allow for seamless ADAL to MSAL migration\n            const adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\n\n            // In the event of no account being passed in the config, no session id, and no pre-existing adalIdToken, user will need to log in\n            if (!account && !(request.sid  || request.loginHint) && StringUtils.isEmpty(adalIdToken) ) {\n                this.logger.info(\"User login is required\");\n                // The promise rejects with a UserLoginRequiredError, which should be caught and user should be prompted to log in interactively\n                return reject(ClientAuthError.createUserLoginRequiredError());\n            }\n\n            // set the response type based on the current cache status / scopes set\n            const responseType = this.getTokenType(account, request.scopes);\n            this.logger.verbose(`Response type: ${responseType}`);\n\n            // create a serverAuthenticationRequest populating the `queryParameters` to be sent to the Server\n            const serverAuthenticationRequest = new ServerRequestParameters(\n                AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata),\n                this.clientId,\n                responseType,\n                this.getRedirectUri(request.redirectUri),\n                request.scopes,\n                request.state,\n                request.correlationId,\n            );\n\n            this.logger.verbose(\"Finished building server authentication request\");\n\n            // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\n            if (ServerRequestParameters.isSSOParam(request) || account) {\n                serverAuthenticationRequest.populateQueryParams(account, request, null, true);\n                this.logger.verbose(\"Query parameters populated from existing SSO or account\");\n            }\n            // if user didn't pass login_hint/sid and adal's idtoken is present, extract the login_hint from the adalIdToken\n            else if (!account && !StringUtils.isEmpty(adalIdToken)) {\n                // if adalIdToken exists, extract the SSO info from the same\n                const adalIdTokenObject = TokenUtils.extractIdToken(adalIdToken);\n                this.logger.verbose(\"ADAL's idToken exists. Extracting login information from ADAL's idToken to populate query parameters\");\n                serverAuthenticationRequest.populateQueryParams(account, null, adalIdTokenObject, true);\n            }\n            else {\n                this.logger.verbose(\"No additional query parameters added\");\n            }\n\n            const userContainedClaims = request.claimsRequest || serverAuthenticationRequest.claimsValue;\n\n            let authErr: AuthError;\n            let cacheResultResponse;\n\n            // If request.forceRefresh is set to true, force a request for a new token instead of getting it from the cache\n            if (!userContainedClaims && !request.forceRefresh) {\n                try {\n                    cacheResultResponse = this.getCachedToken(serverAuthenticationRequest, account);\n                } catch (e) {\n                    authErr = e;\n                }\n            }\n            \n            // resolve/reject based on cacheResult\n            if (cacheResultResponse) {\n                this.logger.verbose(\"Token found in cache lookup\");\n                this.logger.verbosePii(`Scopes found: ${JSON.stringify(cacheResultResponse.scopes)}`);\n                resolve(cacheResultResponse);\n                return null;\n            }\n            else if (authErr) {\n                this.logger.infoPii(authErr.errorCode + \":\" + authErr.errorMessage);\n                reject(authErr);\n                return null;\n            }\n            // else proceed with login\n            else {\n                \n                let logMessage;\n                if (userContainedClaims) {\n                    logMessage = \"Skipped cache lookup since claims were given\";\n                } else if (request.forceRefresh) {\n                    logMessage = \"Skipped cache lookup since request.forceRefresh option was set to true\";\n                } else {\n                    logMessage = \"No valid token found in cache lookup\";\n                }\n                this.logger.verbose(logMessage);\n                \n                // Cache result can return null if cache is empty. In that case, set authority to default value if no authority is passed to the API.\n                if (!serverAuthenticationRequest.authorityInstance) {\n                    serverAuthenticationRequest.authorityInstance = request.authority ? \n                        AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata)\n                        : this.authorityInstance;\n                }    \n                this.logger.verbosePii(`Authority instance: ${serverAuthenticationRequest.authority}`);\n                \n                try {\n                    if (!serverAuthenticationRequest.authorityInstance.hasCachedMetadata()) {\n                        this.logger.verbose(\"No cached metadata for authority\");\n                        await AuthorityFactory.saveMetadataFromNetwork(serverAuthenticationRequest.authorityInstance, this.telemetryManager, request.correlationId);\n                        this.logger.verbose(\"Authority has been updated with endpoint discovery response\");\n                    } else {\n                        this.logger.verbose(\"Cached metadata found for authority\");\n                    }\n\n                    /*\n                     * refresh attempt with iframe\n                     * Already renewing for this scope, callback when we get the token.\n                     */\n                    if (window.activeRenewals[requestSignature]) {\n                        this.logger.verbose(\"Renewing token in progress. Registering callback\");\n                        // Active renewals contains the state for each renewal.\n                        this.registerCallback(window.activeRenewals[requestSignature], requestSignature, resolve, reject);\n                    }\n                    else {\n                        if (request.scopes && ScopeSet.onlyContainsOidcScopes(request.scopes)) {\n                            /*\n                             * App uses idToken to send to api endpoints\n                             * Default scope is tracked as OIDC scopes to store this token\n                             */\n                            this.logger.verbose(\"OpenID Connect scopes only, renewing idToken\");\n                            this.silentLogin = true;\n                            this.renewIdToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\n                        } else {\n                            // renew access token\n                            this.logger.verbose(\"Renewing access token\");\n                            this.renewToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\n                        }\n                    }\n                } catch (err) {\n                    this.logger.error(err);\n                    reject(ClientAuthError.createEndpointResolutionError(err.toString()));\n                    return null;\n                }\n            }\n        })\n            .then(res => {\n                this.logger.verbose(\"Successfully acquired token\");\n                this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\n                return res;\n            })\n            .catch((error: AuthError) => {\n                this.cacheStorage.resetTempCacheItems(request.state);\n                this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\n                throw error;\n            });\n    }\n\n    // #endregion\n\n    // #region Popup Window Creation\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @ignore\n     * @hidden\n     */\n    private openPopup(urlNavigate: string, title: string, popUpWidth: number, popUpHeight: number) {\n        this.logger.verbose(\"OpenPopup has been called\");\n        try {\n            /**\n             * adding winLeft and winTop to account for dual monitor\n             * using screenLeft and screenTop for IE8 and earlier\n             */\n            const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n            const winTop = window.screenTop ? window.screenTop : window.screenY;\n            /**\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\n             * using document.documentElement.clientWidth for IE8 and earlier\n             */\n            const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n            const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n            const left = ((width / 2) - (popUpWidth / 2)) + winLeft;\n            const top = ((height / 2) - (popUpHeight / 2)) + winTop;\n\n            // open the window\n            const popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top + \", left=\" + left + \", scrollbars=yes\");\n            if (!popupWindow) {\n                throw ClientAuthError.createPopupWindowError();\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n\n            return popupWindow;\n        } catch (e) {\n            this.cacheStorage.setInteractionInProgress(false);\n            throw ClientAuthError.createPopupWindowError(e.toString());\n        }\n    }\n\n    // #endregion\n\n    // #region Iframe Management\n\n    /**\n     * @hidden\n     * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\n     * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\n     * @ignore\n     */\n    private async loadIframeTimeout(urlNavigate: string, frameName: string, requestSignature: string): Promise<void> {\n        // set iframe session to pending\n        const expectedState = window.activeRenewals[requestSignature];\n        this.logger.verbosePii(\"Set loading state to pending for: \" + requestSignature + \":\" + expectedState);\n        this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState), Constants.inProgress);\n\n        // render the iframe synchronously if app chooses no timeout, else wait for the set timer to expire\n        const iframe: HTMLIFrameElement = this.config.system.navigateFrameWait ?\n            await WindowUtils.loadFrame(urlNavigate, frameName, this.config.system.navigateFrameWait, this.logger):\n            WindowUtils.loadFrameSync(urlNavigate, frameName, this.logger);\n\n        try {\n            const hash = await WindowUtils.monitorIframeForHash(iframe.contentWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger);\n\n            if (hash) {\n                this.handleAuthenticationResponse(hash);\n            }\n        } catch (error) {\n            if (this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState)) === Constants.inProgress) {\n                // fail the iframe session if it's in pending state\n                this.logger.verbose(\"Loading frame has timed out after: \" + (this.config.system.loadFrameTimeout / 1000) + \" seconds for scope/authority \" + requestSignature + \":\" + expectedState);\n                // Error after timeout\n                if (expectedState && window.callbackMappedToRenewStates[expectedState]) {\n                    window.callbackMappedToRenewStates[expectedState](null, error);\n                }\n\n                this.cacheStorage.removeItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState));\n            }\n            WindowUtils.removeHiddenIframe(iframe);\n            throw error;\n        }\n        WindowUtils.removeHiddenIframe(iframe);\n    }\n\n    // #endregion\n\n    // #region General Helpers\n\n    /**\n     * @hidden\n     * Used to redirect the browser to the STS authorization endpoint\n     * @param {string} urlNavigate - URL of the authorization endpoint\n     */\n    private navigateWindow(urlNavigate: string, popupWindow?: Window) {\n        // Navigate if valid URL\n        if (urlNavigate && !StringUtils.isEmpty(urlNavigate)) {\n            const navigateWindow: Window = popupWindow ? popupWindow : window;\n            const logMessage: string = popupWindow ? \"Navigated Popup window to:\" + urlNavigate : \"Navigate to:\" + urlNavigate;\n            this.logger.infoPii(logMessage);\n            navigateWindow.location.assign(urlNavigate);\n        }\n        else {\n            this.logger.info(\"Navigate url is empty\");\n            throw AuthError.createUnexpectedError(\"Navigate url is empty\");\n        }\n    }\n\n    /**\n     * @hidden\n     * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\n     * @param {string} expectedState - Unique state identifier (guid).\n     * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {Function} resolve - The resolve function of the promise object.\n     * @param {Function} reject - The reject function of the promise object.\n     * @ignore\n     */\n    private registerCallback(expectedState: string, requestSignature: string, resolve: Function, reject: Function): void {\n        // track active renewals\n        window.activeRenewals[requestSignature] = expectedState;\n\n        // initialize callbacks mapped array\n        if (!window.promiseMappedToRenewStates[expectedState]) {\n            window.promiseMappedToRenewStates[expectedState] = [];\n        }\n        // indexing on the current state, push the callback params to callbacks mapped\n        window.promiseMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\n\n        // Store the server response in the current window??\n        if (!window.callbackMappedToRenewStates[expectedState]) {\n            window.callbackMappedToRenewStates[expectedState] = (response: AuthResponse, error: AuthError) => {\n                // reset active renewals\n                delete window.activeRenewals[requestSignature];\n\n                // for all promiseMappedtoRenewStates for a given 'state' - call the reject/resolve with error/token respectively\n                for (let i = 0; i < window.promiseMappedToRenewStates[expectedState].length; ++i) {\n                    try {\n                        if (error) {\n                            window.promiseMappedToRenewStates[expectedState][i].reject(error);\n                        } else if (response) {\n                            window.promiseMappedToRenewStates[expectedState][i].resolve(response);\n                        } else {\n                            this.cacheStorage.resetTempCacheItems(expectedState);\n                            throw AuthError.createUnexpectedError(\"Error and response are both null\");\n                        }\n                    } catch (e) {\n                        this.logger.warning(e);\n                    }\n                }\n\n                // reset\n                delete window.promiseMappedToRenewStates[expectedState];\n                delete window.callbackMappedToRenewStates[expectedState];\n            };\n        }\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     */\n    logout(correlationId?: string): void {\n        this.logger.verbose(\"Logout has been called\");\n        this.logoutAsync(correlationId);\n    }\n\n    /**\n     * Async version of logout(). Use to log out the current user.\n     * @param correlationId Request correlationId\n     */\n    private async logoutAsync(correlationId?: string): Promise<void> {\n        const requestCorrelationId = correlationId || CryptoUtils.createNewGuid();\n        const apiEvent = this.telemetryManager.createAndStartApiEvent(requestCorrelationId, API_EVENT_IDENTIFIER.Logout);\n\n        this.clearCache();\n        this.account = null;\n\n        try {\n            if (!this.authorityInstance.hasCachedMetadata()) {\n                this.logger.verbose(\"No cached metadata for authority\");\n                await AuthorityFactory.saveMetadataFromNetwork(this.authorityInstance, this.telemetryManager, correlationId);\n            } else {\n                this.logger.verbose(\"Cached metadata found for authority\");\n            }\n\n            const correlationIdParam = `client-request-id=${requestCorrelationId}`;\n\n            let postLogoutQueryParam: string;\n            if (this.getPostLogoutRedirectUri()) {\n                postLogoutQueryParam = `&post_logout_redirect_uri=${encodeURIComponent(this.getPostLogoutRedirectUri())}`;\n                this.logger.verbose(\"redirectUri found and set\");\n            } else {\n                postLogoutQueryParam = \"\";\n                this.logger.verbose(\"No redirectUri set for app. postLogoutQueryParam is empty\");\n            }\n\n            let urlNavigate: string;\n            if (this.authorityInstance.EndSessionEndpoint) {\n                urlNavigate = `${this.authorityInstance.EndSessionEndpoint}?${correlationIdParam}${postLogoutQueryParam}`;\n                this.logger.verbose(\"EndSessionEndpoint found and urlNavigate set\");\n                this.logger.verbosePii(`urlNavigate set to: ${this.authorityInstance.EndSessionEndpoint}`);\n            } else {\n                urlNavigate = `${this.authority}oauth2/v2.0/logout?${correlationIdParam}${postLogoutQueryParam}`;\n                this.logger.verbose(\"No endpoint, urlNavigate set to default\");\n            }\n\n            this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, true);\n\n            this.logger.verbose(\"Navigating window to urlNavigate\");\n            this.navigateWindow(urlNavigate);\n        } catch (error) {\n            this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, false, error.errorCode);\n        }\n    }\n\n    /**\n     * @hidden\n     * Clear all access tokens and ID tokens in the cache.\n     * @ignore\n     */\n    protected clearCache(): void {\n        this.logger.verbose(\"Clearing cache\");\n        window.renewStates = [];\n        const tokenCacheItems = this.cacheStorage.getAllTokens(Constants.clientId, Constants.homeAccountIdentifier);\n        for (let i = 0; i < tokenCacheItems.length; i++) {\n            this.cacheStorage.removeItem(JSON.stringify(tokenCacheItems[i].key));\n        }\n        this.cacheStorage.resetCacheItems();\n        this.cacheStorage.clearMsalCookie();\n        this.logger.verbose(\"Cache cleared\");\n    }\n\n    /**\n     * @hidden\n     * Clear a given access token from the cache.\n     *\n     * @param accessToken\n     */\n    protected clearCacheForScope(accessToken: string): void {\n        this.logger.verbose(\"Clearing access token from cache\");\n        const accessTokenItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\n        for (let i = 0; i < accessTokenItems.length; i++) {\n            const token = accessTokenItems[i];\n            if (token.value.accessToken === accessToken) {\n                this.cacheStorage.removeItem(JSON.stringify(token.key));\n                this.logger.verbosePii(`Access token removed: ${token.key}`);\n            }\n        }\n    }\n\n    // #endregion\n\n    // #region Response\n\n    /**\n     * @hidden\n     * @ignore\n     * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\n     * @param {string} hash - Hash passed from redirect page.\n     * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\n     */\n    isCallback(hash: string): boolean {\n        this.logger.info(\"isCallback will be deprecated in favor of urlContainsHash in MSAL.js v2.0.\");\n        this.logger.verbose(\"isCallback has been called\");\n        return UrlUtils.urlContainsHash(hash);\n    }\n\n    /**\n     * @hidden\n     * Used to call the constructor callback with the token/error\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\n     */\n    private processCallBack(hash: string, respStateInfo: ResponseStateInfo, parentCallback?: Function): void {\n        this.logger.info(\"ProcessCallBack has been called. Processing callback from redirect response\");\n\n        // get the state info from the hash\n        let stateInfo = respStateInfo;\n        if (!stateInfo) {\n            this.logger.verbose(\"StateInfo is null, getting stateInfo from hash\");\n            stateInfo = this.getResponseState(hash);\n        }\n\n        let response : AuthResponse;\n        let authErr : AuthError;\n        // Save the token info from the hash\n        try {\n            response = this.saveTokenFromHash(hash, stateInfo);\n        } catch (err) {\n            authErr = err;\n        }\n\n        try {\n            // Clear the cookie in the hash\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\n            const accountState: string = this.getAccountState(stateInfo.state);\n            if (response) {\n                if ((stateInfo.requestType === Constants.renewToken) || response.accessToken) {\n                    if (window.parent !== window) {\n                        this.logger.verbose(\"Window is in iframe, acquiring token silently\");\n                    } else {\n                        this.logger.verbose(\"Acquiring token interactive in progress\");\n                    }\n                    this.logger.verbose(`Response tokenType set to ${ServerHashParamKeys.ACCESS_TOKEN}`);\n                    response.tokenType = ServerHashParamKeys.ACCESS_TOKEN;\n                }\n                else if (stateInfo.requestType === Constants.login) {\n                    this.logger.verbose(`Response tokenType set to ${ServerHashParamKeys.ID_TOKEN}`);\n                    response.tokenType = ServerHashParamKeys.ID_TOKEN;\n                }\n                if (!parentCallback) {\n                    this.logger.verbose(\"Setting redirectResponse\");\n                    this.redirectResponse = response;\n                    return;\n                }\n            } else if (!parentCallback) {\n                this.logger.verbose(\"Response is null, setting redirectResponse with state\");\n                this.redirectResponse = buildResponseStateOnly(accountState);\n                this.redirectError = authErr;\n                this.cacheStorage.resetTempCacheItems(stateInfo.state);\n                return;\n            }\n\n            this.logger.verbose(\"Calling callback provided to processCallback\");\n            parentCallback(response, authErr);\n        } catch (err) {\n            this.logger.error(\"Error occurred in token received callback function: \" + err);\n            throw ClientAuthError.createErrorInCallbackFunction(err.toString());\n        }\n    }\n\n    /**\n     * @hidden\n     * This method must be called for processing the response received from the STS if using popups or iframes. It extracts the hash, processes the token or error\n     * information and saves it in the cache. It then resolves the promises with the result.\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\n     */\n    private handleAuthenticationResponse(hash: string): void {\n        this.logger.verbose(\"HandleAuthenticationResponse has been called\");\n\n        // retrieve the hash\n        const locationHash = hash || window.location.hash;\n\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\n        const stateInfo = this.getResponseState(locationHash);\n        this.logger.verbose(\"Obtained state from response\");\n\n        const tokenResponseCallback = window.callbackMappedToRenewStates[stateInfo.state];\n        this.processCallBack(locationHash, stateInfo, tokenResponseCallback);\n    }\n\n    /**\n     * @hidden\n     * This method must be called for processing the response received from the STS when using redirect flows. It extracts the hash, processes the token or error\n     * information and saves it in the cache. The result can then be accessed by user registered callbacks.\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\n     */\n    private handleRedirectAuthenticationResponse(hash: string): void {\n        this.logger.info(\"Returned from redirect url\");\n        this.logger.verbose(\"HandleRedirectAuthenticationResponse has been called\");\n\n        // clear hash from window\n        WindowUtils.clearUrlFragment(window);\n        this.logger.verbose(\"Window.location.hash cleared\");\n\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\n        const stateInfo = this.getResponseState(hash);\n        \n        // if set to navigate to loginRequest page post login\n        if (this.config.auth.navigateToLoginRequestUrl && window.parent === window) {\n            this.logger.verbose(\"Window.parent is equal to window, not in popup or iframe. Navigation to login request url after login turned on\");\n            const loginRequestUrl = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, stateInfo.state), this.inCookie);\n\n            // Redirect to home page if login request url is null (real null or the string null)\n            if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                this.logger.error(\"Unable to get valid login request url from cache, redirecting to home page\");\n                window.location.assign(\"/\");\n                return;\n            } else {\n                this.logger.verbose(\"Valid login request url obtained from cache\");\n                const currentUrl = UrlUtils.removeHashFromUrl(window.location.href);\n                const finalRedirectUrl = UrlUtils.removeHashFromUrl(loginRequestUrl);\n                if (currentUrl !== finalRedirectUrl) {\n                    this.logger.verbose(\"Current url is not login request url, navigating\");\n                    this.logger.verbosePii(`CurrentUrl: ${currentUrl}, finalRedirectUrl: ${finalRedirectUrl}`);\n                    window.location.assign(`${finalRedirectUrl}${hash}`);\n                    return;\n                } else {\n                    this.logger.verbose(\"Current url matches login request url\");\n                    const loginRequestUrlComponents = UrlUtils.GetUrlComponents(loginRequestUrl);\n                    if (loginRequestUrlComponents.Hash){\n                        this.logger.verbose(\"Login request url contains hash, resetting non-msal hash\");\n                        window.location.hash = loginRequestUrlComponents.Hash;\n                    }\n                }\n            }\n        } else if (!this.config.auth.navigateToLoginRequestUrl) {\n            this.logger.verbose(\"Default navigation to start page after login turned off\");\n        }\n\n        this.processCallBack(hash, stateInfo, null);\n    }\n\n    /**\n     * @hidden\n     * Creates a stateInfo object from the URL fragment and returns it.\n     * @param {string} hash  -  Hash passed from redirect page\n     * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\n     * @ignore\n     */\n    protected getResponseState(hash: string): ResponseStateInfo {\n        this.logger.verbose(\"GetResponseState has been called\");\n\n        const parameters = UrlUtils.deserializeHash(hash);\n        let stateResponse: ResponseStateInfo;\n        if (!parameters) {\n            throw AuthError.createUnexpectedError(\"Hash was not parsed correctly.\");\n        }\n        if (parameters.hasOwnProperty(ServerHashParamKeys.STATE)) {\n            this.logger.verbose(\"Hash contains state. Creating stateInfo object\");\n            const parsedState = RequestUtils.parseLibraryState(parameters[\"state\"]);\n\n            stateResponse = {\n                requestType: Constants.unknown,\n                state: parameters[\"state\"],\n                timestamp: parsedState.ts,\n                method: parsedState.method,\n                stateMatch: false\n            };\n        } else {\n            throw AuthError.createUnexpectedError(\"Hash does not contain state.\");\n        }\n        /*\n         * async calls can fire iframe and login request at the same time if developer does not use the API as expected\n         * incoming callback needs to be looked up to find the request type\n         */\n\n        // loginRedirect\n        if (stateResponse.state === this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, stateResponse.state), this.inCookie) || stateResponse.state === this.silentAuthenticationState) {\n            this.logger.verbose(\"State matches cached state, setting requestType to login\");\n            stateResponse.requestType = Constants.login;\n            stateResponse.stateMatch = true;\n            return stateResponse;\n        }\n        // acquireTokenRedirect\n        else if (stateResponse.state === this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, stateResponse.state), this.inCookie)) {\n            this.logger.verbose(\"State matches cached state, setting requestType to renewToken\");\n            stateResponse.requestType = Constants.renewToken;\n            stateResponse.stateMatch = true;\n            return stateResponse;\n        }\n\n        // external api requests may have many renewtoken requests for different resource\n        if (!stateResponse.stateMatch) {\n            this.logger.verbose(\"State does not match cached state, setting requestType to type from window\");\n            stateResponse.requestType = window.requestType;\n            const statesInParentContext = window.renewStates;\n            for (let i = 0; i < statesInParentContext.length; i++) {\n                if (statesInParentContext[i] === stateResponse.state) {\n                    this.logger.verbose(\"Matching state found for request\");\n                    stateResponse.stateMatch = true;\n                    break;\n                }\n            }\n            if (!stateResponse.stateMatch) {\n                this.logger.verbose(\"Matching state not found for request\");\n            }\n        }\n\n        return stateResponse;\n    }\n\n    // #endregion\n\n    // #region Token Processing (Extract to TokenProcessing.ts)\n\n    /**\n     * @hidden\n     * Used to get token for the specified set of scopes from the cache\n     * @param {@link ServerRequestParameters} - Request sent to the STS to obtain an id_token/access_token\n     * @param {Account} account - Account for which the scopes were requested\n     */\n    private getCachedToken(serverAuthenticationRequest: ServerRequestParameters, account: Account): AuthResponse {\n        this.logger.verbose(\"GetCachedToken has been called\");\n        const scopes = serverAuthenticationRequest.scopes;\n\n        /**\n         * Id Token should be returned in every acquireTokenSilent call. The only exception is a response_type = token\n         * request when a valid ID Token is not present in the cache.\n         */\n        const idToken = this.getCachedIdToken(serverAuthenticationRequest, account);\n        const authResponse = this.getCachedAccessToken(serverAuthenticationRequest, account, scopes);\n        const accountState = this.getAccountState(serverAuthenticationRequest.state);\n        return ResponseUtils.buildAuthResponse(idToken, authResponse, serverAuthenticationRequest, account, scopes, accountState);\n    }\n\n    /**\n     * @hidden\n     * \n     * Uses passed in authority to further filter an array of tokenCacheItems until only the token being searched for remains, then returns that tokenCacheItem.\n     * This method will throw if authority filtering still yields multiple matching tokens and will return null if not tokens match the authority passed in.\n     * \n     * @param authority \n     * @param tokenCacheItems \n     * @param request \n     * @param requestScopes \n     * @param tokenType \n     */\n    private getTokenCacheItemByAuthority(authority: string, tokenCacheItems: Array<AccessTokenCacheItem>, requestScopes: Array<string>, tokenType: string): AccessTokenCacheItem {\n        let filteredAuthorityItems: Array<AccessTokenCacheItem>;\n    \n        if (UrlUtils.isCommonAuthority(authority) || UrlUtils.isOrganizationsAuthority(authority) || UrlUtils.isConsumersAuthority(authority)) {\n            filteredAuthorityItems = AuthCacheUtils.filterTokenCacheItemsByDomain(tokenCacheItems, UrlUtils.GetUrlComponents(authority).HostNameAndPort);\n        } else {\n            filteredAuthorityItems = AuthCacheUtils.filterTokenCacheItemsByAuthority(tokenCacheItems, authority);\n        }\n        if (filteredAuthorityItems.length === 1) {\n            return filteredAuthorityItems[0];\n        }\n        else if (filteredAuthorityItems.length > 1) {\n            this.logger.warning(\"Multiple matching tokens found. Cleaning cache and requesting a new token.\");\n            filteredAuthorityItems.forEach((accessTokenCacheItem) => {\n                this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\n            });\n            return null;\n        }\n        else {\n            this.logger.verbose(`No matching tokens of type ${tokenType} found`);\n            return null;\n        }  \n    }\n\n    /**\n     * \n     * @hidden\n     * \n     * Searches the token cache for an ID Token that matches the request parameter and returns it as an IdToken object.\n     * \n     * @param serverAuthenticationRequest \n     * @param account \n     */\n    private getCachedIdToken(serverAuthenticationRequest: ServerRequestParameters, account: Account): IdToken {\n        this.logger.verbose(\"Getting all cached tokens of type ID Token\");\n        const idTokenCacheItems = this.cacheStorage.getAllIdTokens(this.clientId, account ? account.homeAccountIdentifier : null);\n        const matchAuthority = serverAuthenticationRequest.authority || this.authority;\n        const idTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, idTokenCacheItems, null, ServerHashParamKeys.ID_TOKEN);\n        \n        if (idTokenCacheItem) {\n            this.logger.verbose(\"Evaluating ID token found\");\n            const idTokenIsStillValid = this.evaluateTokenExpiration(idTokenCacheItem);\n\n            if (idTokenIsStillValid) {\n                this.logger.verbose(\"ID token expiration is within offset, using ID token found in cache\");\n                const idTokenValue = idTokenCacheItem.value;\n                if (idTokenValue) {\n                    this.logger.verbose(\"ID Token found in cache is valid and unexpired\");\n                } else {\n                    this.logger.verbose(\"ID Token found in cache is invalid\");\n                }\n        \n                return (idTokenValue) ? new IdToken(idTokenValue.idToken) : null;\n            } else {\n                this.logger.verbose(\"Cached ID token is expired, removing from cache\");\n                this.cacheStorage.removeItem(JSON.stringify(idTokenCacheItem.key));\n                return null;\n            }\n        } else {\n            this.logger.verbose(\"No tokens found\");\n            return null;\n        }\n    }\n\n    /**\n     * \n     * @hidden\n     * \n     * Searches the token cache for an access token that matches the request parameters and returns it as an AuthResponse.\n     * \n     * @param serverAuthenticationRequest \n     * @param account \n     * @param scopes \n     */\n    private getCachedAccessToken(serverAuthenticationRequest: ServerRequestParameters, account: Account, scopes: string[]): AuthResponse {\n        this.logger.verbose(\"Getting all cached tokens of type Access Token\");\n        const tokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, account ? account.homeAccountIdentifier : null);\n        \n        const scopeFilteredTokenCacheItems = AuthCacheUtils.filterTokenCacheItemsByScope(tokenCacheItems, scopes);\n        const matchAuthority = serverAuthenticationRequest.authority || this.authority;\n        // serverAuthenticationRequest.authority can only be common or organizations if not null\n        const accessTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, scopeFilteredTokenCacheItems, scopes, ServerHashParamKeys.ACCESS_TOKEN);\n        \n        if (!accessTokenCacheItem) {\n            this.logger.verbose(\"No matching token found when filtering by scope and authority\");\n            return null;\n        } else {\n            serverAuthenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(accessTokenCacheItem.key.authority, this.config.auth.validateAuthority);\n            this.logger.verbose(\"Evaluating access token found\");\n            const tokenIsStillValid = this.evaluateTokenExpiration(accessTokenCacheItem);\n            // The response value will stay null if token retrieved from the cache is expired, otherwise it will be populated with said token's data\n            \n            if (tokenIsStillValid) {\n                this.logger.verbose(\"Access token expiration is within offset, using access token found in cache\");\n                const responseAccount: Account = account || this.getAccount();\n                if (!responseAccount) {\n                    throw AuthError.createUnexpectedError(\"Account should not be null here.\");\n                }\n\n                const aState = this.getAccountState(serverAuthenticationRequest.state);\n                const response: AuthResponse = {\n                    uniqueId: \"\",\n                    tenantId: \"\",\n                    tokenType: ServerHashParamKeys.ACCESS_TOKEN,\n                    idToken: null,\n                    idTokenClaims: null,\n                    accessToken: accessTokenCacheItem.value.accessToken,\n                    scopes: accessTokenCacheItem.key.scopes.split(\" \"),\n                    expiresOn: new Date(Number(accessTokenCacheItem.value.expiresIn) * 1000),\n                    account: responseAccount,\n                    accountState: aState,\n                    fromCache: true\n                };   \n                \n                return response;\n            } else {\n                this.logger.verbose(\"Access token expired, removing from cache\");\n                this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\n                return null;\n            }\n        }\n    }\n\n    /**\n     * Returns true if the token passed in is within the acceptable expiration time offset, false if it is expired.\n     * @param tokenCacheItem \n     * @param serverAuthenticationRequest \n     */\n    private evaluateTokenExpiration(tokenCacheItem: AccessTokenCacheItem): Boolean {\n        const expiration = Number(tokenCacheItem.value.expiresIn);\n        return TokenUtils.validateExpirationIsWithinOffset(expiration, this.config.system.tokenRenewalOffsetSeconds);\n    }\n\n    /**\n     * @hidden\n     * Check if ADAL id_token exists and return if exists.\n     *\n     */\n    private extractADALIdToken(): object {\n        this.logger.verbose(\"ExtractADALIdToken has been called\");\n        const adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\n        return (!StringUtils.isEmpty(adalIdToken)) ? TokenUtils.extractIdToken(adalIdToken) : null;\n    }\n\n    /**\n     * @hidden\n     * Acquires access token using a hidden iframe.\n     * @ignore\n     */\n    private renewToken(requestSignature: string, resolve: Function, reject: Function, account: Account, serverAuthenticationRequest: ServerRequestParameters): void {\n        this.logger.verbose(\"RenewToken has been called\");\n        this.logger.verbosePii(`RenewToken scope and authority: ${requestSignature}`);\n\n        const frameName = WindowUtils.generateFrameName(FramePrefix.TOKEN_FRAME, requestSignature);\n        WindowUtils.addHiddenIFrame(frameName, this.logger);\n\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\n        this.logger.verbosePii(`RenewToken expected state: ${serverAuthenticationRequest.state}`);\n\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\n        const urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\n\n        window.renewStates.push(serverAuthenticationRequest.state);\n        window.requestType = Constants.renewToken;\n        this.logger.verbose(\"Set window.renewState and requestType\");\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\n        this.logger.infoPii(`Navigate to: ${urlNavigate}`);\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(error => reject(error));\n    }\n\n    /**\n     * @hidden\n     * Renews idtoken for app's own backend when clientId is passed as a single scope in the scopes array.\n     * @ignore\n     */\n    private renewIdToken(requestSignature: string, resolve: Function, reject: Function, account: Account, serverAuthenticationRequest: ServerRequestParameters): void {\n        this.logger.info(\"RenewIdToken has been called\");\n\n        const frameName = WindowUtils.generateFrameName(FramePrefix.ID_TOKEN_FRAME, requestSignature);\n        WindowUtils.addHiddenIFrame(frameName, this.logger);\n\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\n\n        this.logger.verbose(`RenewIdToken expected state: ${serverAuthenticationRequest.state}`);\n\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\n        const urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\n\n        if (this.silentLogin) {\n            this.logger.verbose(\"Silent login is true, set silentAuthenticationState\");\n            window.requestType = Constants.login;\n            this.silentAuthenticationState = serverAuthenticationRequest.state;\n        } else {\n            this.logger.verbose(\"Not silent login, set window.renewState and requestType\");\n            window.requestType = Constants.renewToken;\n            window.renewStates.push(serverAuthenticationRequest.state);\n        }\n\n        // note: scope here is clientId\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\n        this.logger.infoPii(`Navigate to:\" ${urlNavigate}`);\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(error => reject(error));\n    }\n\n    /**\n     * @hidden\n     * \n     * This method builds an Access Token Cache item and saves it to the cache, returning the original\n     * AuthResponse augmented with a parsed expiresOn attribute.\n     * \n     * @param response The AuthResponse object that contains the token to be saved\n     * @param authority The authority under which the ID token will be cached\n     * @param scopes The scopes to be added to the cache item key (undefined for ID token cache items)\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\n     * @param expiration Token expiration timestamp\n     */\n    private saveToken(response: AuthResponse, authority: string, scopes: string, clientInfo: ClientInfo, expiration: number): AuthResponse {\n        const accessTokenKey = new AccessTokenKey(authority, this.clientId, scopes, clientInfo.uid, clientInfo.utid);\n        const accessTokenValue = new AccessTokenValue(response.accessToken, response.idToken.rawIdToken, expiration.toString(), clientInfo.encodeClientInfo());\n        this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\n\n        if (expiration) {\n            this.logger.verbose(\"New expiration set for token\");\n            response.expiresOn = new Date(expiration * 1000);\n        } else {\n            this.logger.error(\"Could not parse expiresIn parameter for access token\");\n        }\n\n        return response;\n    }\n\n    /**\n     * @hidden\n     * \n     * This method sets up the elements of an ID Token cache item and calls saveToken to save it in\n     * Access Token Cache item format for the client application to use.\n     * \n     * @param response The AuthResponse object that will be used to build the cache item\n     * @param authority The authority under which the ID token will be cached\n     * @param parameters The response's Hash Params, which contain the ID token returned from the server\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\n     * @param idTokenObj ID Token object from which the ID token's expiration is extracted\n     */\n    /* tslint:disable:no-string-literal */\n    private saveIdToken(response: AuthResponse, authority: string, parameters: object, clientInfo: ClientInfo, idTokenObj: IdToken): AuthResponse {\n        this.logger.verbose(\"SaveIdToken has been called\");\n        const idTokenResponse = { ...response };\n\n        // Scopes are undefined so they don't show up in ID token cache key\n        let scopes: string;\n\n        idTokenResponse.scopes = Constants.oidcScopes;\n        idTokenResponse.accessToken = parameters[ServerHashParamKeys.ID_TOKEN];\n\n        const expiration = Number(idTokenObj.expiration);\n\n        // Set ID Token item in cache\n        this.logger.verbose(\"Saving ID token to cache\");\n        return this.saveToken(idTokenResponse, authority, scopes, clientInfo, expiration);\n    }\n\n    /**\n     * @hidden\n     * \n     * This method sets up the elements of an Access Token cache item and calls saveToken to save it to the cache\n     * \n     * @param response The AuthResponse object that will be used to build the cache item\n     * @param authority The authority under which the access token will be cached\n     * @param parameters The response's Hash Params, which contain the access token returned from the server\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\n     */\n    /* tslint:disable:no-string-literal */\n    private saveAccessToken(response: AuthResponse, authority: string, parameters: object, clientInfo: ClientInfo): AuthResponse {\n        this.logger.verbose(\"SaveAccessToken has been called\");\n        const accessTokenResponse = { ...response };\n\n        // read the scopes\n        const scope = parameters[ServerHashParamKeys.SCOPE];\n        const consentedScopes = scope.split(\" \");\n\n        // retrieve all access tokens from the cache, remove the dup scopes\n        const accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, authority);\n        this.logger.verbose(\"Retrieving all access tokens from cache and removing duplicates\");\n\n        for (let i = 0; i < accessTokenCacheItems.length; i++) {\n            const accessTokenCacheItem = accessTokenCacheItems[i];\n\n            if (accessTokenCacheItem.key.homeAccountIdentifier === response.account.homeAccountIdentifier) {\n                const cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\n                if (ScopeSet.isIntersectingScopes(cachedScopes, consentedScopes)) {\n                    this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\n                }\n            }\n        }\n\n        accessTokenResponse.accessToken  = parameters[ServerHashParamKeys.ACCESS_TOKEN];\n        accessTokenResponse.scopes = consentedScopes;\n\n        const expiresIn = TimeUtils.parseExpiresIn(parameters[ServerHashParamKeys.EXPIRES_IN]);\n        const parsedState = RequestUtils.parseLibraryState(parameters[ServerHashParamKeys.STATE]);\n        const expiration = parsedState.ts + expiresIn;\n\n        this.logger.verbose(\"Saving access token to cache\");\n        return this.saveToken(accessTokenResponse, authority, scope, clientInfo, expiration);\n    }\n\n    /**\n     * @hidden\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the account object.\n     * @ignore\n     */\n    protected saveTokenFromHash(hash: string, stateInfo: ResponseStateInfo): AuthResponse {\n        this.logger.verbose(\"SaveTokenFromHash has been called\");\n        this.logger.info(`State status: ${stateInfo.stateMatch}; Request type: ${stateInfo.requestType}`);\n\n        let response : AuthResponse = {\n            uniqueId: \"\",\n            tenantId: \"\",\n            tokenType: \"\",\n            idToken: null,\n            idTokenClaims: null,\n            accessToken: null,\n            scopes: [],\n            expiresOn: null,\n            account: null,\n            accountState: \"\",\n            fromCache: false\n        };\n\n        let error: AuthError;\n        const hashParams = UrlUtils.deserializeHash(hash);\n        let authorityKey: string = \"\";\n        let acquireTokenAccountKey: string = \"\";\n        let idTokenObj: IdToken = null;\n\n        // If server returns an error\n        if (hashParams.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) || hashParams.hasOwnProperty(ServerHashParamKeys.ERROR)) {\n            this.logger.verbose(\"Server returned an error\");\n            this.logger.infoPii(`Error : ${hashParams[ServerHashParamKeys.ERROR]}; Error description: ${hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]}`);\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR, hashParams[ServerHashParamKeys.ERROR]);\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\n\n            // login\n            if (stateInfo.requestType === Constants.login) {\n                this.logger.verbose(\"RequestType is login, caching login error, generating authorityKey\");\n                this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION] + \":\" + hashParams[ServerHashParamKeys.ERROR]);\n                authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\n            }\n\n            // acquireToken\n            if (stateInfo.requestType === Constants.renewToken) {\n                this.logger.verbose(\"RequestType is renewToken, generating acquireTokenAccountKey\");\n                authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\n\n                const account: Account = this.getAccount();\n                let accountId;\n\n                if (account && !StringUtils.isEmpty(account.homeAccountIdentifier)) {\n                    accountId = account.homeAccountIdentifier;\n                    this.logger.verbose(\"AccountId is set\");\n                }\n                else {\n                    accountId = Constants.no_account;\n                    this.logger.verbose(\"AccountId is set as no_account\");\n                }\n\n                acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, stateInfo.state);\n            }\n\n            const hashErr = hashParams[ServerHashParamKeys.ERROR];\n            const hashErrDesc = hashParams[ServerHashParamKeys.ERROR_DESCRIPTION];\n            if (InteractionRequiredAuthError.isInteractionRequiredError(hashErr) ||\n        InteractionRequiredAuthError.isInteractionRequiredError(hashErrDesc)) {\n                error = new InteractionRequiredAuthError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\n            } else {\n                error = new ServerError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\n            }\n        }\n        // If the server returns \"Success\"\n        else {\n            this.logger.verbose(\"Server returns success\");\n            // Verify the state from redirect and record tokens to storage if exists\n            if (stateInfo.stateMatch) {\n                this.logger.info(\"State is right\");\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.SESSION_STATE)) {\n                    this.logger.verbose(\"Fragment has session state, caching\");\n                    this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.SESSION_STATE, stateInfo.state), hashParams[ServerHashParamKeys.SESSION_STATE]);\n                }\n                response.accountState = this.getAccountState(stateInfo.state);\n\n                let clientInfo: ClientInfo;\n\n                // Process access_token\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN)) {\n                    this.logger.info(\"Fragment has access token\");\n                    response.accessToken = hashParams[ServerHashParamKeys.ACCESS_TOKEN];\n\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.SCOPE)) {\n                        response.scopes = hashParams[ServerHashParamKeys.SCOPE].split(\" \");\n                    }\n\n                    // retrieve the id_token from response if present\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\n                        this.logger.verbose(\"Fragment has id_token\");\n                        idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\n                    } else {\n                        this.logger.verbose(\"No idToken on fragment, getting idToken from cache\");\n                        idTokenObj = new IdToken(this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN));\n                    }\n\n                    response = ResponseUtils.setResponseIdToken(response, idTokenObj);\n\n                    // set authority\n                    const authority: string = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\n                    this.logger.verbose(\"Got authority from cache\");\n\n                    // retrieve client_info - if it is not found, generate the uid and utid from idToken\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\n                        this.logger.verbose(\"Fragment has clientInfo\");\n                        clientInfo = new ClientInfo(hashParams[ServerHashParamKeys.CLIENT_INFO], authority);\n                    } else if (this.authorityInstance.AuthorityType === AuthorityType.Adfs) {\n                        clientInfo = ClientInfo.createClientInfoFromIdToken(idTokenObj, authority);\n                    } else {\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\n                    }\n\n                    response.account = Account.createAccount(idTokenObj, clientInfo);\n                    this.logger.verbose(\"Account object created from response\");\n\n                    let accountKey: string;\n                    if (response.account && !StringUtils.isEmpty(response.account.homeAccountIdentifier)) {\n                        this.logger.verbose(\"AccountKey set\");\n                        accountKey = response.account.homeAccountIdentifier;\n                    }\n                    else {\n                        this.logger.verbose(\"AccountKey set as no_account\");\n                        accountKey = Constants.no_account;\n                    }\n\n                    acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountKey, stateInfo.state);\n                    const acquireTokenAccountKey_noaccount = AuthCache.generateAcquireTokenAccountKey(Constants.no_account, stateInfo.state);\n                    this.logger.verbose(\"AcquireTokenAccountKey generated\");\n\n                    const cachedAccount: string = this.cacheStorage.getItem(acquireTokenAccountKey);\n                    let acquireTokenAccount: Account;\n\n                    // Check with the account in the Cache\n                    if (!StringUtils.isEmpty(cachedAccount)) {\n                        acquireTokenAccount = JSON.parse(cachedAccount);\n                        this.logger.verbose(\"AcquireToken request account retrieved from cache\");\n                        if (response.account && acquireTokenAccount && Account.compareAccounts(response.account, acquireTokenAccount)) {\n                            response = this.saveAccessToken(response, authority, hashParams, clientInfo);\n                            this.logger.info(\"The user object received in the response is the same as the one passed in the acquireToken request\");\n                        }\n                        else {\n                            this.logger.warning(\n                                \"The account object created from the response is not the same as the one passed in the acquireToken request\");\n                        }\n                    }\n                    else if (!StringUtils.isEmpty(this.cacheStorage.getItem(acquireTokenAccountKey_noaccount))) {\n                        this.logger.verbose(\"No acquireToken account retrieved from cache\");\n                        response = this.saveAccessToken(response, authority, hashParams, clientInfo);\n                    }\n                }\n\n                // Process id_token\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\n                    this.logger.info(\"Fragment has idToken\");\n\n                    // set the idToken\n                    idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\n\n                    // set authority\n                    const authority: string = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\n\n                    response = ResponseUtils.setResponseIdToken(response, idTokenObj);\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\n                        this.logger.verbose(\"Fragment has clientInfo\");\n                        clientInfo = new ClientInfo(hashParams[ServerHashParamKeys.CLIENT_INFO], authority);\n                    } else if (this.authorityInstance.AuthorityType === AuthorityType.Adfs) {\n                        clientInfo = ClientInfo.createClientInfoFromIdToken(idTokenObj, authority);\n                    } else {\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\n                    }\n\n                    this.account = Account.createAccount(idTokenObj, clientInfo);\n                    response.account = this.account;\n                    this.logger.verbose(\"Account object created from response\");\n\n                    if (idTokenObj && idTokenObj.nonce) {\n                        this.logger.verbose(\"IdToken has nonce\");\n                        // check nonce integrity if idToken has nonce - throw an error if not matched\n                        const cachedNonce = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, stateInfo.state), this.inCookie);\n                        if (idTokenObj.nonce !== cachedNonce) {\n                            this.account = null;\n                            this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, \"Nonce Mismatch. Expected Nonce: \" + cachedNonce + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\n                            this.logger.error(`Nonce Mismatch. Expected Nonce: ${cachedNonce}, Actual Nonce: ${idTokenObj.nonce}`);\n                            error = ClientAuthError.createNonceMismatchError(cachedNonce, idTokenObj.nonce);\n                        }\n                        // Save the token\n                        else {\n                            this.logger.verbose(\"Nonce matches, saving idToken to cache\");\n                            this.cacheStorage.setItem(PersistentCacheKeys.IDTOKEN, hashParams[ServerHashParamKeys.ID_TOKEN], this.inCookie);\n                            this.cacheStorage.setItem(PersistentCacheKeys.CLIENT_INFO, clientInfo.encodeClientInfo(), this.inCookie);\n\n                            // Save idToken as access token item for app itself\n                            this.saveIdToken(response, authority, hashParams, clientInfo, idTokenObj);\n                        }\n                    } else {\n                        this.logger.verbose(\"No idToken or no nonce. Cache key for Authority set as state\");\n                        authorityKey = stateInfo.state;\n                        acquireTokenAccountKey = stateInfo.state;\n\n                        this.logger.error(\"Invalid id_token received in the response\");\n                        error = ClientAuthError.createInvalidIdTokenError(idTokenObj);\n                        this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\n                        this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\n                    }\n                }\n            }\n            // State mismatch - unexpected/invalid state\n            else {\n                this.logger.verbose(\"State mismatch\");\n                authorityKey = stateInfo.state;\n                acquireTokenAccountKey = stateInfo.state;\n\n                const expectedState = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, stateInfo.state), this.inCookie);\n                this.logger.error(`State Mismatch. Expected State: ${expectedState}, Actual State: ${stateInfo.state}`);\n                error = ClientAuthError.createInvalidStateError(stateInfo.state, expectedState);\n                this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\n                this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\n            }\n        }\n\n        // Set status to completed\n        this.cacheStorage.removeItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, stateInfo.state));\n        this.cacheStorage.resetTempCacheItems(stateInfo.state);\n        this.logger.verbose(\"Status set to complete, temporary cache cleared\");\n\n        // this is required if navigateToLoginRequestUrl=false\n        if (this.inCookie) {\n            this.logger.verbose(\"InCookie is true, setting authorityKey in cookie\");\n            this.cacheStorage.setItemCookie(authorityKey, \"\", -1);\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\n        }\n        if (error) {\n            // Error case, set status to cancelled\n            throw error;\n        }\n\n        if (!response) {\n            throw AuthError.createUnexpectedError(\"Response is null\");\n        }\n\n        return response;\n    }\n\n    /**\n     * Set Authority when saving Token from the hash\n     * @param state\n     * @param inCookie\n     * @param cacheStorage\n     * @param idTokenObj\n     * @param response\n     */\n    private populateAuthority(state: string, inCookie: boolean, cacheStorage: AuthCache, idTokenObj: IdToken): string {\n        this.logger.verbose(\"PopulateAuthority has been called\");\n        const authorityKey: string = AuthCache.generateAuthorityKey(state);\n        const cachedAuthority: string = cacheStorage.getItem(authorityKey, inCookie);\n\n        // retrieve the authority from cache and replace with tenantID\n        return StringUtils.isEmpty(cachedAuthority) ? cachedAuthority : UrlUtils.replaceTenantPath(cachedAuthority, idTokenObj.tenantId);\n    }\n\n    /* tslint:enable:no-string-literal */\n\n    // #endregion\n\n    // #region Account\n\n    /**\n     * Returns the signed in account\n     * (the account object is created at the time of successful login)\n     * or null when no state is found\n     * @returns {@link Account} - the account object stored in MSAL\n     */\n    getAccount(): Account {\n        // if a session already exists, get the account from the session\n        if (this.account) {\n            return this.account;\n        }\n\n        // frame is used to get idToken and populate the account for the given session\n        const rawIdToken = this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN, this.inCookie);\n        const rawClientInfo = this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO, this.inCookie);\n\n        if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\n            const idToken = new IdToken(rawIdToken);\n            const clientInfo = new ClientInfo(rawClientInfo, \"\");\n            this.account = Account.createAccount(idToken, clientInfo);\n            return this.account;\n        }\n        // if login not yet done, return null\n        return null;\n    }\n\n    /**\n     * @hidden\n     *\n     * Extracts state value from the accountState sent with the authentication request.\n     * @returns {string} scope.\n     * @ignore\n     */\n    getAccountState (state: string): string {\n        if (state) {\n            const splitIndex = state.indexOf(Constants.resourceDelimiter);\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\n                return state.substring(splitIndex + 1);\n            }\n        }\n        return state;\n    }\n\n    /**\n     * Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.\n     *\n     * @param {@link Array<Account>} Account - all unique accounts in MSAL cache.\n     */\n    getAllAccounts(): Array<Account> {\n        const accounts: Array<Account> = [];\n        const accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\n\n        for (let i = 0; i < accessTokenCacheItems.length; i++) {\n            const idToken = new IdToken(accessTokenCacheItems[i].value.idToken);\n            const clientInfo = new ClientInfo(accessTokenCacheItems[i].value.homeAccountIdentifier, \"\");\n            const account: Account = Account.createAccount(idToken, clientInfo);\n            accounts.push(account);\n        }\n\n        return this.getUniqueAccounts(accounts);\n    }\n\n    /**\n     * @hidden\n     *\n     * Used to filter accounts based on homeAccountIdentifier\n     * @param {Array<Account>}  Accounts - accounts saved in the cache\n     * @ignore\n     */\n    private getUniqueAccounts(accounts: Array<Account>): Array<Account> {\n        if (!accounts || accounts.length <= 1) {\n            return accounts;\n        }\n\n        const flags: Array<string> = [];\n        const uniqueAccounts: Array<Account> = [];\n        for (let index = 0; index < accounts.length; ++index) {\n            if (accounts[index].homeAccountIdentifier && flags.indexOf(accounts[index].homeAccountIdentifier) === -1) {\n                flags.push(accounts[index].homeAccountIdentifier);\n                uniqueAccounts.push(accounts[index]);\n            }\n        }\n\n        return uniqueAccounts;\n    }\n\n    // #endregion\n\n    // #region Angular\n\n    /**\n     * @hidden\n     *\n     * Broadcast messages - Used only for Angular?  *\n     * @param eventName\n     * @param data\n     */\n    private broadcast(eventName: string, data: string) {\n        const evt = new CustomEvent(eventName, { detail: data });\n        window.dispatchEvent(evt);\n    }\n\n    /**\n     * @hidden\n     *\n     * Helper function to retrieve the cached token\n     *\n     * @param scopes\n     * @param {@link Account} account\n     * @param state\n     * @return {@link AuthResponse} AuthResponse\n     */\n    protected getCachedTokenInternal(scopes : Array<string> , account: Account, state: string, correlationId?: string): AuthResponse {\n        // Get the current session's account object\n        const accountObject: Account = account || this.getAccount();\n        if (!accountObject) {\n            return null;\n        }\n\n        // Construct AuthenticationRequest based on response type; set \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\n        const newAuthority = this.authorityInstance ? this.authorityInstance : AuthorityFactory.CreateInstance(this.authority, this.config.auth.validateAuthority);\n        const responseType = this.getTokenType(accountObject, scopes);\n\n        const serverAuthenticationRequest = new ServerRequestParameters(\n            newAuthority,\n            this.clientId,\n            responseType,\n            this.getRedirectUri(),\n            scopes,\n            state,\n            correlationId\n        );\n\n        // get cached token\n        return this.getCachedToken(serverAuthenticationRequest, account);\n    }\n\n    /**\n     * @hidden\n     *\n     * Get scopes for the Endpoint - Used in Angular to track protected and unprotected resources without interaction from the developer app\n     * Note: Please check if we need to set the \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\n     *\n     * @param endpoint\n     */\n    protected getScopesForEndpoint(endpoint: string) : Array<string> {\n        // if user specified list of unprotectedResources, no need to send token to these endpoints, return null.\n        if (this.config.framework.unprotectedResources.length > 0) {\n            for (let i = 0; i < this.config.framework.unprotectedResources.length; i++) {\n                if (endpoint.indexOf(this.config.framework.unprotectedResources[i]) > -1) {\n                    return null;\n                }\n            }\n        }\n\n        // process all protected resources and send the matched one\n        if (this.config.framework.protectedResourceMap.size > 0) {\n            for (const key of Array.from(this.config.framework.protectedResourceMap.keys())) {\n                // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\n                if (endpoint.indexOf(key) > -1) {\n                    return this.config.framework.protectedResourceMap.get(key);\n                }\n            }\n        }\n\n        /*\n         * default resource will be clientid if nothing specified\n         * App will use idtoken for calls to itself\n         * check if it's staring from http or https, needs to match with app host\n         */\n        if (endpoint.indexOf(\"http://\") > -1 || endpoint.indexOf(\"https://\") > -1) {\n            if (UrlUtils.getHostFromUri(endpoint) === UrlUtils.getHostFromUri(this.getRedirectUri())) {\n                return new Array<string>(this.clientId);\n            }\n        } else {\n            /*\n             * in angular level, the url for $http interceptor call could be relative url,\n             * if it's relative call, we'll treat it as app backend call.\n             */\n            return new Array<string>(this.clientId);\n        }\n\n        // if not the app's own backend or not a domain listed in the endpoints structure\n        return null;\n    }\n\n    /**\n     * Return boolean flag to developer to help inform if login is in progress\n     * @returns {boolean} true/false\n     */\n    public getLoginInProgress(): boolean {\n        return this.cacheStorage.isInteractionInProgress(true);\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * @param loginInProgress\n     */\n    protected setInteractionInProgress(inProgress: boolean): void {\n        this.cacheStorage.setInteractionInProgress(inProgress);\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * @param loginInProgress\n     */\n    protected setloginInProgress(loginInProgress : boolean): void {\n        this.setInteractionInProgress(loginInProgress);\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * returns the status of acquireTokenInProgress\n     */\n    protected getAcquireTokenInProgress(): boolean {\n        return this.cacheStorage.isInteractionInProgress(true);\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * @param acquireTokenInProgress\n     */\n    protected setAcquireTokenInProgress(acquireTokenInProgress : boolean): void {\n        this.setInteractionInProgress(acquireTokenInProgress);\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * returns the logger handle\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Sets the logger callback.\n     * @param logger Logger callback\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    // #endregion\n\n    // #region Getters and Setters\n\n    /**\n     * Use to get the redirect uri configured in MSAL or null.\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\n     *\n     * @returns {string} redirect URL\n     */\n    public getRedirectUri(reqRedirectUri?:  string): string {\n        if(reqRedirectUri) {\n            return reqRedirectUri;\n        }\n        else if (typeof this.config.auth.redirectUri === \"function\") {\n            return this.config.auth.redirectUri();\n        }\n        return this.config.auth.redirectUri;\n    }\n\n    /**\n     * Use to get the post logout redirect uri configured in MSAL or null.\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\n     *\n     * @returns {string} post logout redirect URL\n     */\n    public getPostLogoutRedirectUri(): string {\n        if (typeof this.config.auth.postLogoutRedirectUri === \"function\") {\n            return this.config.auth.postLogoutRedirectUri();\n        }\n        return this.config.auth.postLogoutRedirectUri;\n    }\n\n    /**\n     * Use to get the current {@link Configuration} object in MSAL\n     *\n     * @returns {@link Configuration}\n     */\n    public getCurrentConfiguration(): Configuration {\n        if (!this.config) {\n            throw ClientConfigurationError.createNoSetConfigurationError();\n        }\n        return this.config;\n    }\n\n    /**\n     * @ignore\n     *\n     * Utils function to create the Authentication\n     * @param {@link account} account object\n     * @param scopes\n     *\n     * @returns {string} token type: token, id_token or id_token token\n     *\n     */\n    private getTokenType(accountObject: Account, scopes: string[]): string {\n        const accountsMatch = Account.compareAccounts(accountObject, this.getAccount());\n        return ServerRequestParameters.determineResponseType(accountsMatch, scopes);\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * Sets the cachekeys for and stores the account information in cache\n     * @param account\n     * @param state\n     * @hidden\n     */\n    private setAccountCache(account: Account, state: string) {\n\n        // Cache acquireTokenAccountKey\n        const accountId = account ? this.getAccountId(account) : Constants.no_account;\n\n        const acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, state);\n        this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\n    }\n\n    /**\n     * @hidden\n     * @ignore\n     *\n     * Sets the cacheKey for and stores the authority information in cache\n     * @param state\n     * @param authority\n     * @hidden\n     */\n    private setAuthorityCache(state: string, authority: string) {\n        // Cache authorityKey\n        const authorityKey = AuthCache.generateAuthorityKey(state);\n        this.cacheStorage.setItem(authorityKey, UrlUtils.CanonicalizeUri(authority), this.inCookie);\n    }\n\n    /**\n     * Updates account, authority, and nonce in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     * @hidden\n     * @ignore\n     */\n    private updateCacheEntries(serverAuthenticationRequest: ServerRequestParameters, account: Account, isLoginCall: boolean, loginStartPage?: string) {\n        // Cache Request Originator Page\n        if (loginStartPage) {\n            this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, serverAuthenticationRequest.state), loginStartPage, this.inCookie);\n        }\n\n        // Cache account and authority\n        if (isLoginCall) {\n            // Cache the state\n            this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, serverAuthenticationRequest.state), serverAuthenticationRequest.state, this.inCookie);\n        } else {\n            this.setAccountCache(account, serverAuthenticationRequest.state);\n        }\n        // Cache authorityKey\n        this.setAuthorityCache(serverAuthenticationRequest.state, serverAuthenticationRequest.authority);\n\n        // Cache nonce\n        this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, serverAuthenticationRequest.state), serverAuthenticationRequest.nonce, this.inCookie);\n    }\n\n    /**\n     * Returns the unique identifier for the logged in account\n     * @param account\n     * @hidden\n     * @ignore\n     */\n    private getAccountId(account: Account): string {\n        // return `${account.accountIdentifier}` + Constants.resourceDelimiter + `${account.homeAccountIdentifier}`;\n        let accountId: string;\n        if (!StringUtils.isEmpty(account.homeAccountIdentifier)) {\n            accountId = account.homeAccountIdentifier;\n        }\n        else {\n            accountId = Constants.no_account;\n        }\n\n        return accountId;\n    }\n\n    /**\n     * @ignore\n     * @param extraQueryParameters\n     *\n     * Construct 'tokenRequest' from the available data in adalIdToken\n     */\n    private buildIDTokenRequest(request: AuthenticationParameters): AuthenticationParameters {\n\n        const tokenRequest: AuthenticationParameters = {\n            scopes: Constants.oidcScopes,\n            authority: this.authority,\n            account: this.getAccount(),\n            extraQueryParameters: request.extraQueryParameters,\n            correlationId: request.correlationId\n        };\n\n        return tokenRequest;\n    }\n\n    /**\n     * @ignore\n     * @param config\n     * @param clientId\n     *\n     * Construct TelemetryManager from Configuration\n     */\n    private getTelemetryManagerFromConfig(config: TelemetryOptions, clientId: string): TelemetryManager {\n        if (!config) { // if unset\n            return TelemetryManager.getTelemetrymanagerStub(clientId, this.logger);\n        }\n        // if set then validate\n        const { applicationName, applicationVersion, telemetryEmitter } = config;\n        if (!applicationName || !applicationVersion || !telemetryEmitter) {\n            throw ClientConfigurationError.createTelemetryConfigError(config);\n        }\n        // if valid then construct\n        const telemetryPlatform: TelemetryPlatform = {\n            applicationName,\n            applicationVersion\n        };\n        const telemetryManagerConfig: TelemetryConfig = {\n            platform: telemetryPlatform,\n            clientId: clientId\n        };\n        return new TelemetryManager(telemetryManagerConfig, telemetryEmitter, this.logger);\n    }\n\n    // #endregion\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n",null,null,null,null,"/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nlet batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport const setBatch = newBatch => batch = newBatch; // Supply a getter just to skip dealing with ESM bindings\n\nexport const getBatch = () => batch;","import React from 'react';\nexport const ReactReduxContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactReduxContext.displayName = 'ReactRedux';\n}\n\nexport default ReactReduxContext;","import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\n\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\nexport function useReduxContext() {\n  const contextValue = useContext(ReactReduxContext);\n\n  if (process.env.NODE_ENV !== 'production' && !contextValue) {\n    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  }\n\n  return contextValue;\n}","export const notInitialized = () => {\n  throw new Error('uSES not initialized!');\n};","import { useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { ReactReduxContext } from '../components/Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStoreWithSelector = notInitialized;\nexport const initializeUseSelector = fn => {\n  useSyncExternalStoreWithSelector = fn;\n};\n\nconst refEquality = (a, b) => a === b;\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context = ReactReduxContext) {\n  const useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useSelector(selector, equalityFn = refEquality) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`);\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`);\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(`You must pass a function as an equality function to useSelector`);\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState\n    } = useReduxContext();\n    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport const useSelector = /*#__PURE__*/createSelectorHook();","import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  const batch = getBatch();\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n\n    get() {\n      let listeners = [];\n      let listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n\n    subscribe(callback) {\n      let isSubscribed = true;\n      let listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n\n  };\n}\n\nconst nullListeners = {\n  notify() {},\n\n  get: () => []\n};\nexport function createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe,\n    tryUnsubscribe,\n    getListeners: () => listeners\n  };\n  return subscription;\n}","import { useEffect, useLayoutEffect } from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\n\nexport const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;","import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider({\n  store,\n  context,\n  children,\n  serverState\n}) {\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined\n    };\n  }, [store, serverState]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;","import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The primary entry point assumes we're working with standard ReactDOM/RN, but\n// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).\n// Because of that, the useSyncExternalStore compat shim is needed.\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch';\nimport { initializeUseSelector } from './hooks/useSelector';\nimport { initializeConnect } from './components/connect';\ninitializeUseSelector(useSyncExternalStoreWithSelector);\ninitializeConnect(useSyncExternalStore); // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };\nexport * from './exports';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"reactReduxForwardedRef\"];\n\n/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */\nimport hoistStatics from 'hoist-non-react-statics';\nimport React, { useContext, useMemo, useRef } from 'react';\nimport { isValidElementType, isContextConsumer } from 'react-is';\nimport defaultSelectorFactory from '../connect/selectorFactory';\nimport { mapDispatchToPropsFactory } from '../connect/mapDispatchToProps';\nimport { mapStateToPropsFactory } from '../connect/mapStateToProps';\nimport { mergePropsFactory } from '../connect/mergeProps';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport shallowEqual from '../utils/shallowEqual';\nimport warning from '../utils/warning';\nimport { ReactReduxContext } from './Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStore = notInitialized;\nexport const initializeConnect = fn => {\n  useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\n\nconst EMPTY_ARRAY = [null, 0];\nconst NO_SUBSCRIPTION_ARRAY = [null, null]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n\n\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,\nchildPropsFromStoreUpdate, notifyNestedSubs) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\n\n\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,\nadditionalSubscribeListener) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts\n\n  let didUnsubscribe = false;\n  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return;\n    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n\n\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n\n    if (!error) {\n      lastThrownError = null;\n    } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n\n      additionalSubscribeListener();\n    }\n  }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n  // changed since we began.\n\n  checkForUpdates();\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError;\n    }\n  };\n\n  return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\n\n\nconst initStateUpdates = () => EMPTY_ARRAY;\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */\n\n\nlet hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = shallowEqual,\n  areStatePropsEqual = shallowEqual,\n  areMergedPropsEqual = shallowEqual,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      warning('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n    }\n  }\n\n  const Context = context;\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);\n  const initMergeProps = mergePropsFactory(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n\n  const wrapWithConnect = WrappedComponent => {\n    if (process.env.NODE_ENV !== 'production' && !isValidElementType(WrappedComponent)) {\n      throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = useMemo(() => {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        const {\n          reactReduxForwardedRef\n        } = props,\n              wrapperProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n        return [props.context, reactReduxForwardedRef, wrapperProps];\n      }, [props]);\n      const ContextToUse = useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && // @ts-ignore\n        isContextConsumer( /*#__PURE__*/React.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      const contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n\n      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(`Could not find \"store\" in the context of ` + `\"${displayName}\". Either wrap the root component in a <Provider>, ` + `or pass a custom React context provider to <Provider> and the corresponding ` + `React context consumer to ${displayName} in connect options.`);\n      } // Based on the previous check, one of these must be true\n\n\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = useMemo(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        const subscription = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n      const overriddenContextValue = useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return _extends({}, contextValue, {\n          subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic\n\n      const lastChildProps = useRef();\n      const lastWrapperProps = useRef(wrapperProps);\n      const childPropsFromStoreUpdate = useRef();\n      const renderIsScheduled = useRef(false);\n      const isProcessingDispatch = useRef(false);\n      const isMounted = useRef(false);\n      const latestSubscriptionCallbackError = useRef();\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = useMemo(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          } // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n\n\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n\n        return selector;\n      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = useMemo(() => {\n        const subscribe = reactListener => {\n          if (!subscription) {\n            return () => {};\n          }\n\n          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore\n          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n        };\n\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);\n      let actualChildProps;\n\n      try {\n        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`;\n        }\n\n        throw err;\n      }\n\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = undefined;\n        childPropsFromStoreUpdate.current = undefined;\n        lastChildProps.current = actualChildProps;\n      }); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      const renderedWrappedComponent = useMemo(() => {\n        return (\n          /*#__PURE__*/\n          // @ts-ignore\n          React.createElement(WrappedComponent, _extends({}, actualChildProps, {\n            ref: reactReduxForwardedRef\n          }))\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      const renderedChild = useMemo(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return /*#__PURE__*/React.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n\n    const _Connect = React.memo(ConnectFunction);\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {\n        // @ts-ignore\n        return /*#__PURE__*/React.createElement(Connect, _extends({}, props, {\n          reactReduxForwardedRef: ref\n        }));\n      });\n\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return hoistStatics(forwarded, WrappedComponent);\n    }\n\n    return hoistStatics(Connect, WrappedComponent);\n  };\n\n  return wrapWithConnect;\n}\n\nexport default connect;","import * as React from \"react\";\nimport type { History, Location } from \"history\";\nimport { Action as NavigationType } from \"history\";\n\nimport type { RouteMatch } from \"./router\";\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n","import type { Location, Path, To } from \"history\";\nimport { parsePath } from \"history\";\n\nexport function invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nexport function warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n","import * as React from \"react\";\nimport type { Location, Path, To } from \"history\";\nimport { Action as NavigationType, parsePath } from \"history\";\n\nimport { LocationContext, NavigationContext, RouteContext } from \"./context\";\nimport type {\n  ParamParseKey,\n  Params,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n} from \"./router\";\nimport {\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"./router\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n","import * as React from \"react\";\nimport type { InitialEntry, Location, MemoryHistory, To } from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n} from \"history\";\n\nimport { LocationContext, NavigationContext, Navigator } from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\nimport type { RouteMatch, RouteObject } from \"./router\";\nimport { invariant, normalizePathname, stripBasename, warning } from \"./router\";\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;","import type { Action, ActionCreator, StoreEnhancer } from 'redux'\r\nimport { compose } from 'redux'\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface DevToolsEnhancerOptions {\r\n  /**\r\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\r\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\r\n   */\r\n  name?: string\r\n  /**\r\n   * action creators functions to be available in the Dispatcher.\r\n   */\r\n  actionCreators?: ActionCreator<any>[] | { [key: string]: ActionCreator<any> }\r\n  /**\r\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\r\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\r\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\r\n   *\r\n   * @default 500 ms.\r\n   */\r\n  latency?: number\r\n  /**\r\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\r\n   *\r\n   * @default 50\r\n   */\r\n  maxAge?: number\r\n  /**\r\n   * Customizes how actions and state are serialized and deserialized. Can be a boolean or object. If given a boolean, the behavior is the same as if you\r\n   * were to pass an object and specify `options` as a boolean. Giving an object allows fine-grained customization using the `replacer` and `reviver`\r\n   * functions.\r\n   */\r\n  serialize?:\r\n    | boolean\r\n    | {\r\n        /**\r\n         * - `undefined` - will use regular `JSON.stringify` to send data (it's the fast mode).\r\n         * - `false` - will handle also circular references.\r\n         * - `true` - will handle also date, regex, undefined, error objects, symbols, maps, sets and functions.\r\n         * - object, which contains `date`, `regex`, `undefined`, `error`, `symbol`, `map`, `set` and `function` keys.\r\n         *   For each of them you can indicate if to include (by setting as `true`).\r\n         *   For `function` key you can also specify a custom function which handles serialization.\r\n         *   See [`jsan`](https://github.com/kolodny/jsan) for more details.\r\n         */\r\n        options?:\r\n          | undefined\r\n          | boolean\r\n          | {\r\n              date?: true\r\n              regex?: true\r\n              undefined?: true\r\n              error?: true\r\n              symbol?: true\r\n              map?: true\r\n              set?: true\r\n              function?: true | ((fn: (...args: any[]) => any) => string)\r\n            }\r\n        /**\r\n         * [JSON replacer function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter) used for both actions and states stringify.\r\n         * In addition, you can specify a data type by adding a [`__serializedType__`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/helpers/index.js#L4)\r\n         * key. So you can deserialize it back while importing or persisting data.\r\n         * Moreover, it will also [show a nice preview showing the provided custom type](https://cloud.githubusercontent.com/assets/7957859/21814330/a17d556a-d761-11e6-85ef-159dd12f36c5.png):\r\n         */\r\n        replacer?: (key: string, value: unknown) => any\r\n        /**\r\n         * [JSON `reviver` function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter)\r\n         * used for parsing the imported actions and states. See [`remotedev-serialize`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/immutable/serialize.js#L8-L41)\r\n         * as an example on how to serialize special data types and get them back.\r\n         */\r\n        reviver?: (key: string, value: unknown) => any\r\n        /**\r\n         * Automatically serialize/deserialize immutablejs via [remotedev-serialize](https://github.com/zalmoxisus/remotedev-serialize).\r\n         * Just pass the Immutable library. It will support all ImmutableJS structures. You can even export them into a file and get them back.\r\n         * The only exception is `Record` class, for which you should pass this in addition the references to your classes in `refs`.\r\n         */\r\n        immutable?: any\r\n        /**\r\n         * ImmutableJS `Record` classes used to make possible restore its instances back when importing, persisting...\r\n         */\r\n        refs?: any\r\n      }\r\n  /**\r\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\r\n   */\r\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A\r\n  /**\r\n   * function which takes `state` object and index as arguments, and should return `state` object back.\r\n   */\r\n  stateSanitizer?: <S>(state: S, index: number) => S\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   * @deprecated Use actionsDenylist instead.\r\n   */\r\n  actionsBlacklist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   * @deprecated Use actionsAllowlist instead.\r\n   */\r\n  actionsWhitelist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\r\n  actionsDenylist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\r\n  actionsAllowlist?: string | string[]\r\n  /**\r\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\r\n   * Use it as a more advanced version of `actionsDenylist`/`actionsAllowlist` parameters.\r\n   */\r\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean\r\n  /**\r\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\r\n   * Available only for Redux enhancer, for others use `autoPause`.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldRecordChanges?: boolean\r\n  /**\r\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\r\n   * If not specified, will commit when paused. Available only for Redux enhancer.\r\n   *\r\n   * @default \"@@PAUSED\"\"\r\n   */\r\n  pauseActionType?: string\r\n  /**\r\n   * auto pauses when the extension’s window is not opened, and so has zero impact on your app when not in use.\r\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\r\n   *\r\n   * @default false\r\n   */\r\n  autoPause?: boolean\r\n  /**\r\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\r\n   * Available only for Redux enhancer.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldStartLocked?: boolean\r\n  /**\r\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldHotReload?: boolean\r\n  /**\r\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldCatchErrors?: boolean\r\n  /**\r\n   * If you want to restrict the extension, specify the features you allow.\r\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\r\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\r\n   * Otherwise, you'll get/set the data right from the monitor part.\r\n   */\r\n  features?: {\r\n    /**\r\n     * start/pause recording of dispatched actions\r\n     */\r\n    pause?: boolean\r\n    /**\r\n     * lock/unlock dispatching actions and side effects\r\n     */\r\n    lock?: boolean\r\n    /**\r\n     * persist states on page reloading\r\n     */\r\n    persist?: boolean\r\n    /**\r\n     * export history of actions in a file\r\n     */\r\n    export?: boolean | 'custom'\r\n    /**\r\n     * import history of actions from a file\r\n     */\r\n    import?: boolean | 'custom'\r\n    /**\r\n     * jump back and forth (time travelling)\r\n     */\r\n    jump?: boolean\r\n    /**\r\n     * skip (cancel) actions\r\n     */\r\n    skip?: boolean\r\n    /**\r\n     * drag and drop actions in the history list\r\n     */\r\n    reorder?: boolean\r\n    /**\r\n     * dispatch custom actions or action creators\r\n     */\r\n    dispatch?: boolean\r\n    /**\r\n     * generate tests for the selected actions\r\n     */\r\n    test?: boolean\r\n  }\r\n  /**\r\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\r\n   * Defaults to false.\r\n   */\r\n  trace?: boolean | (<A extends Action>(action: A) => string)\r\n  /**\r\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\r\n   */\r\n  traceLimit?: number\r\n}\r\n\r\ntype Compose = typeof compose\r\n\r\ninterface ComposeWithDevTools {\r\n  (options: DevToolsEnhancerOptions): Compose\r\n  <StoreExt>(...funcs: StoreEnhancer<StoreExt>[]): StoreEnhancer<StoreExt>\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const composeWithDevTools: ComposeWithDevTools =\r\n  typeof window !== 'undefined' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : function () {\r\n        if (arguments.length === 0) return undefined\r\n        if (typeof arguments[0] === 'object') return compose\r\n        return compose.apply(null, arguments as any as Function[])\r\n      }\r\n\r\n/**\r\n * @public\r\n */\r\nexport const devToolsEnhancer: {\r\n  (options: DevToolsEnhancerOptions): StoreEnhancer<any>\r\n} =\r\n  typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    : function () {\r\n        return function (noop) {\r\n          return noop\r\n        }\r\n      }\r\n","/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * prototype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n *\r\n * @public\r\n */\r\nexport default function isPlainObject(value: unknown): value is object {\r\n  if (typeof value !== 'object' || value === null) return false\r\n\r\n  let proto = Object.getPrototypeOf(value)\r\n  if (proto === null) return true\r\n\r\n  let baseProto = proto\r\n  while (Object.getPrototypeOf(baseProto) !== null) {\r\n    baseProto = Object.getPrototypeOf(baseProto)\r\n  }\r\n\r\n  return proto === baseProto\r\n}\r\n","import createNextState, { isDraftable } from 'immer'\r\nimport type { Middleware } from 'redux'\r\n\r\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\r\n  let elapsed = 0\r\n  return {\r\n    measureTime<T>(fn: () => T): T {\r\n      const started = Date.now()\r\n      try {\r\n        return fn()\r\n      } finally {\r\n        const finished = Date.now()\r\n        elapsed += finished - started\r\n      }\r\n    },\r\n    warnIfExceeded() {\r\n      if (elapsed > maxDelay) {\r\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \r\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\r\nIt is disabled in production builds, so you don't need to worry about that.`)\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class MiddlewareArray<\r\n  Middlewares extends Middleware<any, any>[]\r\n> extends Array<Middlewares[number]> {\r\n  constructor(...items: Middlewares)\r\n  constructor(...args: any[]) {\r\n    super(...args)\r\n    Object.setPrototypeOf(this, MiddlewareArray.prototype)\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return MiddlewareArray as any\r\n  }\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n  concat(...arr: any[]) {\r\n    return super.concat.apply(this, arr)\r\n  }\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend(...arr: any[]) {\r\n    if (arr.length === 1 && Array.isArray(arr[0])) {\r\n      return new MiddlewareArray(...arr[0].concat(this))\r\n    }\r\n    return new MiddlewareArray(...arr.concat(this))\r\n  }\r\n}\r\n\r\nexport function freezeDraftable<T>(val: T) {\r\n  return isDraftable(val) ? createNextState(val, () => {}) : val\r\n}\r\n","import type { Middleware, AnyAction } from 'redux'\r\nimport type { ThunkMiddleware } from 'redux-thunk'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport type { ImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware'\r\n/* PROD_START_REMOVE_UMD */\r\nimport { createImmutableStateInvariantMiddleware } from './immutableStateInvariantMiddleware'\r\n/* PROD_STOP_REMOVE_UMD */\r\n\r\nimport type { SerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware'\r\nimport { createSerializableStateInvariantMiddleware } from './serializableStateInvariantMiddleware'\r\nimport type { ExcludeFromTuple } from './tsHelpers'\r\nimport { MiddlewareArray } from './utils'\r\n\r\nfunction isBoolean(x: any): x is boolean {\r\n  return typeof x === 'boolean'\r\n}\r\n\r\ninterface ThunkOptions<E = any> {\r\n  extraArgument: E\r\n}\r\n\r\ninterface GetDefaultMiddlewareOptions {\r\n  thunk?: boolean | ThunkOptions\r\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions\r\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions\r\n}\r\n\r\nexport type ThunkMiddlewareFor<\r\n  S,\r\n  O extends GetDefaultMiddlewareOptions = {}\r\n> = O extends {\r\n  thunk: false\r\n}\r\n  ? never\r\n  : O extends { thunk: { extraArgument: infer E } }\r\n  ? ThunkMiddleware<S, AnyAction, E>\r\n  : ThunkMiddleware<S, AnyAction>\r\n\r\nexport type CurriedGetDefaultMiddleware<S = any> = <\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options?: O\r\n) => MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>>\r\n\r\nexport function curryGetDefaultMiddleware<\r\n  S = any\r\n>(): CurriedGetDefaultMiddleware<S> {\r\n  return function curriedGetDefaultMiddleware(options) {\r\n    return getDefaultMiddleware(options)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n *\r\n * @deprecated Prefer to use the callback notation for the `middleware` option in `configureStore`\r\n * to access a pre-typed `getDefaultMiddleware` instead.\r\n */\r\nexport function getDefaultMiddleware<\r\n  S = any,\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options: O = {} as O\r\n): MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>> {\r\n  const {\r\n    thunk = true,\r\n    immutableCheck = true,\r\n    serializableCheck = true,\r\n  } = options\r\n\r\n  let middlewareArray = new MiddlewareArray<Middleware[]>()\r\n\r\n  if (thunk) {\r\n    if (isBoolean(thunk)) {\r\n      middlewareArray.push(thunkMiddleware)\r\n    } else {\r\n      middlewareArray.push(\r\n        thunkMiddleware.withExtraArgument(thunk.extraArgument)\r\n      )\r\n    }\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (immutableCheck) {\r\n      /* PROD_START_REMOVE_UMD */\r\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(immutableCheck)) {\r\n        immutableOptions = immutableCheck\r\n      }\r\n\r\n      middlewareArray.unshift(\r\n        createImmutableStateInvariantMiddleware(immutableOptions)\r\n      )\r\n      /* PROD_STOP_REMOVE_UMD */\r\n    }\r\n\r\n    if (serializableCheck) {\r\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(serializableCheck)) {\r\n        serializableOptions = serializableCheck\r\n      }\r\n\r\n      middlewareArray.push(\r\n        createSerializableStateInvariantMiddleware(serializableOptions)\r\n      )\r\n    }\r\n  }\r\n\r\n  return middlewareArray as any\r\n}\r\n","import type { Action } from 'redux'\r\nimport type {\r\n  IsUnknownOrNonInferrable,\r\n  IfMaybeUndefined,\r\n  IfVoid,\r\n  IsAny,\r\n} from './tsHelpers'\r\nimport isPlainObject from './isPlainObject'\r\n\r\n/**\r\n * An action with a string type and an associated payload. This is the\r\n * type of action returned by `createAction()` action creators.\r\n *\r\n * @template P The type of the action's payload.\r\n * @template T the type used for the action type.\r\n * @template M The type of the action's meta (optional)\r\n * @template E The type of the action's error (optional)\r\n *\r\n * @public\r\n */\r\nexport type PayloadAction<\r\n  P = void,\r\n  T extends string = string,\r\n  M = never,\r\n  E = never\r\n> = {\r\n  payload: P\r\n  type: T\r\n} & ([M] extends [never]\r\n  ? {}\r\n  : {\r\n      meta: M\r\n    }) &\r\n  ([E] extends [never]\r\n    ? {}\r\n    : {\r\n        error: E\r\n      })\r\n\r\n/**\r\n * A \"prepare\" method to be used as the second parameter of `createAction`.\r\n * Takes any number of arguments and returns a Flux Standard Action without\r\n * type (will be added later) that *must* contain a payload (might be undefined).\r\n *\r\n * @public\r\n */\r\nexport type PrepareAction<P> =\r\n  | ((...args: any[]) => { payload: P })\r\n  | ((...args: any[]) => { payload: P; meta: any })\r\n  | ((...args: any[]) => { payload: P; error: any })\r\n  | ((...args: any[]) => { payload: P; meta: any; error: any })\r\n\r\n/**\r\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\r\n *\r\n * @internal\r\n */\r\nexport type _ActionCreatorWithPreparedPayload<\r\n  PA extends PrepareAction<any> | void,\r\n  T extends string = string\r\n> = PA extends PrepareAction<infer P>\r\n  ? ActionCreatorWithPreparedPayload<\r\n      Parameters<PA>,\r\n      P,\r\n      T,\r\n      ReturnType<PA> extends {\r\n        error: infer E\r\n      }\r\n        ? E\r\n        : never,\r\n      ReturnType<PA> extends {\r\n        meta: infer M\r\n      }\r\n        ? M\r\n        : never\r\n    >\r\n  : void\r\n\r\n/**\r\n * Basic type for all action creators.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n */\r\nexport interface BaseActionCreator<P, T extends string, M = never, E = never> {\r\n  type: T\r\n  match: (action: Action<unknown>) => action is PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator that takes multiple arguments that are passed\r\n * to a `PrepareAction` method to create the final Action.\r\n * @typeParam Args arguments for the action creator function\r\n * @typeParam P `payload` type\r\n * @typeParam T `type` name\r\n * @typeParam E optional `error` type\r\n * @typeParam M optional `meta` type\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPreparedPayload<\r\n  Args extends unknown[],\r\n  P,\r\n  T extends string = string,\r\n  E = never,\r\n  M = never\r\n> extends BaseActionCreator<P, T, M, E> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with `Args` will return\r\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\r\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\r\n   */\r\n  (...args: Args): PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes an optional payload of type `P`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\r\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\r\n   */\r\n  (payload?: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes no payload.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithoutPayload<T extends string = string>\r\n  extends BaseActionCreator<undefined, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\r\n   */\r\n  (): PayloadAction<undefined, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that requires a payload of type P.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\r\n   */\r\n  (payload: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithNonInferrablePayload<\r\n  T extends string = string\r\n> extends BaseActionCreator<unknown, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload\r\n   * of exactly the type of the argument.\r\n   */\r\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>\r\n}\r\n\r\n/**\r\n * An action creator that produces actions with a `payload` attribute.\r\n *\r\n * @typeParam P the `payload` type\r\n * @typeParam T the `type` of the resulting action\r\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\r\n *\r\n * @public\r\n */\r\nexport type PayloadActionCreator<\r\n  P = void,\r\n  T extends string = string,\r\n  PA extends PrepareAction<P> | void = void\r\n> = IfPrepareActionMethodProvided<\r\n  PA,\r\n  _ActionCreatorWithPreparedPayload<PA, T>,\r\n  // else\r\n  IsAny<\r\n    P,\r\n    ActionCreatorWithPayload<any, T>,\r\n    IsUnknownOrNonInferrable<\r\n      P,\r\n      ActionCreatorWithNonInferrablePayload<T>,\r\n      // else\r\n      IfVoid<\r\n        P,\r\n        ActionCreatorWithoutPayload<T>,\r\n        // else\r\n        IfMaybeUndefined<\r\n          P,\r\n          ActionCreatorWithOptionalPayload<P, T>,\r\n          // else\r\n          ActionCreatorWithPayload<P, T>\r\n        >\r\n      >\r\n    >\r\n  >\r\n>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<P = void, T extends string = string>(\r\n  type: T\r\n): PayloadActionCreator<P, T>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<\r\n  PA extends PrepareAction<any>,\r\n  T extends string = string\r\n>(\r\n  type: T,\r\n  prepareAction: PA\r\n): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>\r\n\r\nexport function createAction(type: string, prepareAction?: Function): any {\r\n  function actionCreator(...args: any[]) {\r\n    if (prepareAction) {\r\n      let prepared = prepareAction(...args)\r\n      if (!prepared) {\r\n        throw new Error('prepareAction did not return an object')\r\n      }\r\n\r\n      return {\r\n        type,\r\n        payload: prepared.payload,\r\n        ...('meta' in prepared && { meta: prepared.meta }),\r\n        ...('error' in prepared && { error: prepared.error }),\r\n      }\r\n    }\r\n    return { type, payload: args[0] }\r\n  }\r\n\r\n  actionCreator.toString = () => `${type}`\r\n\r\n  actionCreator.type = type\r\n\r\n  actionCreator.match = (action: Action<unknown>): action is PayloadAction =>\r\n    action.type === type\r\n\r\n  return actionCreator\r\n}\r\n\r\nexport function isFSA(action: unknown): action is {\r\n  type: string\r\n  payload?: unknown\r\n  error?: unknown\r\n  meta?: unknown\r\n} {\r\n  return (\r\n    isPlainObject(action) &&\r\n    typeof (action as any).type === 'string' &&\r\n    Object.keys(action).every(isValidKey)\r\n  )\r\n}\r\n\r\nfunction isValidKey(key: string) {\r\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1\r\n}\r\n\r\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\r\nexport function getType<T extends string>(\r\n  actionCreator: PayloadActionCreator<any, T>\r\n): T {\r\n  return `${actionCreator}` as T\r\n}\r\n\r\n// helper types for more readable typings\r\n\r\ntype IfPrepareActionMethodProvided<\r\n  PA extends PrepareAction<any> | void,\r\n  True,\r\n  False\r\n> = PA extends (...args: any[]) => any ? True : False\r\n","import type { Action, AnyAction } from 'redux'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ActionMatcherDescriptionCollection,\r\n} from './createReducer'\r\nimport type { TypeGuard } from './tsHelpers'\r\n\r\nexport interface TypedActionCreator<Type extends string> {\r\n  (...args: any[]): Action<Type>\r\n  type: Type\r\n}\r\n\r\n/**\r\n * A builder for an action <-> reducer map.\r\n *\r\n * @public\r\n */\r\nexport interface ActionReducerMapBuilder<State> {\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<ActionCreator extends TypedActionCreator<string>>(\r\n    actionCreator: ActionCreator,\r\n    reducer: CaseReducer<State, ReturnType<ActionCreator>>\r\n  ): ActionReducerMapBuilder<State>\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<Type extends string, A extends Action<Type>>(\r\n    type: Type,\r\n    reducer: CaseReducer<State, A>\r\n  ): ActionReducerMapBuilder<State>\r\n\r\n  /**\r\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\r\n   * @remarks\r\n   * If multiple matcher reducers match, all of them will be executed in the order\r\n   * they were defined in - even if a case reducer already matched.\r\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\r\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/advanced-types.html#using-type-predicates)\r\n   *   function\r\n   * @param reducer - The actual case reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AsyncThunk,\r\n  AnyAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\r\n\r\ntype PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\r\ntype RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\r\ntype FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\r\n\r\nconst initialState: Record<string, string> = {};\r\nconst resetAction = createAction(\"reset-tracked-loading-state\");\r\n\r\nfunction isPendingAction(action: AnyAction): action is PendingAction {\r\n  return action.type.endsWith(\"/pending\");\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(resetAction, () => initialState)\r\n    // matcher can be defined outside as a type predicate function\r\n    .addMatcher(isPendingAction, (state, action) => {\r\n      state[action.meta.requestId] = \"pending\";\r\n    })\r\n    .addMatcher(\r\n      // matcher can be defined inline as a type predicate function\r\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"rejected\";\r\n      }\r\n    )\r\n    // matcher can just return boolean and the matcher can receive a generic argument\r\n    .addMatcher<FulfilledAction>(\r\n      (action) => action.type.endsWith(\"/fulfilled\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"fulfilled\";\r\n      }\r\n    );\r\n});\r\n```\r\n   */\r\n  addMatcher<A>(\r\n    matcher: TypeGuard<A> | ((action: any) => boolean),\r\n    reducer: CaseReducer<State, A extends AnyAction ? A : A & AnyAction>\r\n  ): Omit<ActionReducerMapBuilder<State>, 'addCase'>\r\n\r\n  /**\r\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\r\n   * reducer was executed for this action.\r\n   * @param reducer - The fallback \"default case\" reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nconst initialState = { otherActions: 0 }\r\nconst reducer = createReducer(initialState, builder => {\r\n  builder\r\n    // .addCase(...)\r\n    // .addMatcher(...)\r\n    .addDefaultCase((state, action) => {\r\n      state.otherActions++\r\n    })\r\n})\r\n```\r\n   */\r\n  addDefaultCase(reducer: CaseReducer<State, AnyAction>): {}\r\n}\r\n\r\nexport function executeReducerBuilderCallback<S>(\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): [\r\n  CaseReducers<S, any>,\r\n  ActionMatcherDescriptionCollection<S>,\r\n  CaseReducer<S, AnyAction> | undefined\r\n] {\r\n  const actionsMap: CaseReducers<S, any> = {}\r\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = []\r\n  let defaultCaseReducer: CaseReducer<S, AnyAction> | undefined\r\n  const builder = {\r\n    addCase(\r\n      typeOrActionCreator: string | TypedActionCreator<any>,\r\n      reducer: CaseReducer<S>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        /*\r\n         to keep the definition by the user in line with actual behavior, \r\n         we enforce `addCase` to always be called before calling `addMatcher`\r\n         as matching cases take precedence over matchers\r\n         */\r\n        if (actionMatchers.length > 0) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addMatcher`'\r\n          )\r\n        }\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      const type =\r\n        typeof typeOrActionCreator === 'string'\r\n          ? typeOrActionCreator\r\n          : typeOrActionCreator.type\r\n      if (type in actionsMap) {\r\n        throw new Error(\r\n          'addCase cannot be called with two reducers for the same action type'\r\n        )\r\n      }\r\n      actionsMap[type] = reducer\r\n      return builder\r\n    },\r\n    addMatcher<A>(\r\n      matcher: TypeGuard<A>,\r\n      reducer: CaseReducer<S, A extends AnyAction ? A : A & AnyAction>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      actionMatchers.push({ matcher, reducer })\r\n      return builder\r\n    },\r\n    addDefaultCase(reducer: CaseReducer<S, AnyAction>) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error('`builder.addDefaultCase` can only be called once')\r\n        }\r\n      }\r\n      defaultCaseReducer = reducer\r\n      return builder\r\n    },\r\n  }\r\n  builderCallback(builder)\r\n  return [actionsMap, actionMatchers, defaultCaseReducer]\r\n}\r\n","import type { Dispatch, AnyAction, MiddlewareAPI } from 'redux'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport { createAction } from '../createAction'\r\nimport { nanoid } from '../nanoid'\r\n\r\nimport type {\r\n  ListenerMiddleware,\r\n  ListenerMiddlewareInstance,\r\n  AddListenerOverloads,\r\n  AnyListenerPredicate,\r\n  CreateListenerMiddlewareOptions,\r\n  TypedAddListener,\r\n  TypedCreateListenerEntry,\r\n  FallbackAddListenerOptions,\r\n  ListenerEntry,\r\n  ListenerErrorHandler,\r\n  UnsubscribeListener,\r\n  TakePattern,\r\n  ListenerErrorInfo,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  TypedRemoveListener,\r\n  TaskResult,\r\n  AbortSignalWithReason,\r\n  UnsubscribeListenerOptions,\r\n} from './types'\r\nimport {\r\n  abortControllerWithReason,\r\n  addAbortSignalListener,\r\n  assertFunction,\r\n  catchRejection,\r\n} from './utils'\r\nimport {\r\n  listenerCancelled,\r\n  listenerCompleted,\r\n  TaskAbortError,\r\n  taskCancelled,\r\n  taskCompleted,\r\n} from './exceptions'\r\nimport {\r\n  runTask,\r\n  promisifyAbortSignal,\r\n  validateActive,\r\n  createPause,\r\n  createDelay,\r\n} from './task'\r\nexport { TaskAbortError } from './exceptions'\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './types'\r\n\r\n//Overly-aggressive byte-shaving\r\nconst { assign } = Object\r\n/**\r\n * @internal\r\n */\r\nconst INTERNAL_NIL_TOKEN = {} as const\r\n\r\nconst alm = 'listenerMiddleware' as const\r\n\r\nconst createFork = (parentAbortSignal: AbortSignalWithReason<unknown>) => {\r\n  const linkControllers = (controller: AbortController) =>\r\n    addAbortSignalListener(parentAbortSignal, () =>\r\n      abortControllerWithReason(controller, parentAbortSignal.reason)\r\n    )\r\n\r\n  return <T>(taskExecutor: ForkedTaskExecutor<T>): ForkedTask<T> => {\r\n    assertFunction(taskExecutor, 'taskExecutor')\r\n    const childAbortController = new AbortController()\r\n\r\n    linkControllers(childAbortController)\r\n\r\n    const result = runTask<T>(\r\n      async (): Promise<T> => {\r\n        validateActive(parentAbortSignal)\r\n        validateActive(childAbortController.signal)\r\n        const result = (await taskExecutor({\r\n          pause: createPause(childAbortController.signal),\r\n          delay: createDelay(childAbortController.signal),\r\n          signal: childAbortController.signal,\r\n        })) as T\r\n        validateActive(childAbortController.signal)\r\n        return result\r\n      },\r\n      () => abortControllerWithReason(childAbortController, taskCompleted)\r\n    )\r\n\r\n    return {\r\n      result: createPause<TaskResult<T>>(parentAbortSignal)(result),\r\n      cancel() {\r\n        abortControllerWithReason(childAbortController, taskCancelled)\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nconst createTakePattern = <S>(\r\n  startListening: AddListenerOverloads<\r\n    UnsubscribeListener,\r\n    S,\r\n    Dispatch<AnyAction>\r\n  >,\r\n  signal: AbortSignal\r\n): TakePattern<S> => {\r\n  /**\r\n   * A function that takes a ListenerPredicate and an optional timeout,\r\n   * and resolves when either the predicate returns `true` based on an action\r\n   * state combination or when the timeout expires.\r\n   * If the parent listener is canceled while waiting, this will throw a\r\n   * TaskAbortError.\r\n   */\r\n  const take = async <P extends AnyListenerPredicate<S>>(\r\n    predicate: P,\r\n    timeout: number | undefined\r\n  ) => {\r\n    validateActive(signal)\r\n\r\n    // Placeholder unsubscribe function until the listener is added\r\n    let unsubscribe: UnsubscribeListener = () => {}\r\n\r\n    const tuplePromise = new Promise<[AnyAction, S, S]>((resolve) => {\r\n      // Inside the Promise, we synchronously add the listener.\r\n      unsubscribe = startListening({\r\n        predicate: predicate as any,\r\n        effect: (action, listenerApi): void => {\r\n          // One-shot listener that cleans up as soon as the predicate passes\r\n          listenerApi.unsubscribe()\r\n          // Resolve the promise with the same arguments the predicate saw\r\n          resolve([\r\n            action,\r\n            listenerApi.getState(),\r\n            listenerApi.getOriginalState(),\r\n          ])\r\n        },\r\n      })\r\n    })\r\n\r\n    const promises: (Promise<null> | Promise<[AnyAction, S, S]>)[] = [\r\n      promisifyAbortSignal(signal),\r\n      tuplePromise,\r\n    ]\r\n\r\n    if (timeout != null) {\r\n      promises.push(\r\n        new Promise<null>((resolve) => setTimeout(resolve, timeout, null))\r\n      )\r\n    }\r\n\r\n    try {\r\n      const output = await Promise.race(promises)\r\n\r\n      validateActive(signal)\r\n      return output\r\n    } finally {\r\n      // Always clean up the listener\r\n      unsubscribe()\r\n    }\r\n  }\r\n\r\n  return ((predicate: AnyListenerPredicate<S>, timeout: number | undefined) =>\r\n    catchRejection(take(predicate, timeout))) as TakePattern<S>\r\n}\r\n\r\nconst getListenerEntryPropsFrom = (options: FallbackAddListenerOptions) => {\r\n  let { type, actionCreator, matcher, predicate, effect } = options\r\n\r\n  if (type) {\r\n    predicate = createAction(type).match\r\n  } else if (actionCreator) {\r\n    type = actionCreator!.type\r\n    predicate = actionCreator.match\r\n  } else if (matcher) {\r\n    predicate = matcher\r\n  } else if (predicate) {\r\n    // pass\r\n  } else {\r\n    throw new Error(\r\n      'Creating or removing a listener requires one of the known fields for matching an action'\r\n    )\r\n  }\r\n\r\n  assertFunction(effect, 'options.listener')\r\n\r\n  return { predicate, type, effect }\r\n}\r\n\r\n/** Accepts the possible options for creating a listener, and returns a formatted listener entry */\r\nexport const createListenerEntry: TypedCreateListenerEntry<unknown> = (\r\n  options: FallbackAddListenerOptions\r\n) => {\r\n  const { type, predicate, effect } = getListenerEntryPropsFrom(options)\r\n\r\n  const id = nanoid()\r\n  const entry: ListenerEntry<unknown> = {\r\n    id,\r\n    effect,\r\n    type,\r\n    predicate,\r\n    pending: new Set<AbortController>(),\r\n    unsubscribe: () => {\r\n      throw new Error('Unsubscribe not initialized')\r\n    },\r\n  }\r\n\r\n  return entry\r\n}\r\n\r\nconst createClearListenerMiddleware = (\r\n  listenerMap: Map<string, ListenerEntry>\r\n) => {\r\n  return () => {\r\n    listenerMap.forEach(cancelActiveListeners)\r\n\r\n    listenerMap.clear()\r\n  }\r\n}\r\n\r\n/**\r\n * Safely reports errors to the `errorHandler` provided.\r\n * Errors that occur inside `errorHandler` are notified in a new task.\r\n * Inspired by [rxjs reportUnhandledError](https://github.com/ReactiveX/rxjs/blob/6fafcf53dc9e557439b25debaeadfd224b245a66/src/internal/util/reportUnhandledError.ts)\r\n * @param errorHandler\r\n * @param errorToNotify\r\n */\r\nconst safelyNotifyError = (\r\n  errorHandler: ListenerErrorHandler,\r\n  errorToNotify: unknown,\r\n  errorInfo: ListenerErrorInfo\r\n): void => {\r\n  try {\r\n    errorHandler(errorToNotify, errorInfo)\r\n  } catch (errorHandlerError) {\r\n    // We cannot let an error raised here block the listener queue.\r\n    // The error raised here will be picked up by `window.onerror`, `process.on('error')` etc...\r\n    setTimeout(() => {\r\n      throw errorHandlerError\r\n    }, 0)\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const addListener = createAction(\r\n  `${alm}/add`\r\n) as TypedAddListener<unknown>\r\n\r\n/**\r\n * @public\r\n */\r\nexport const clearAllListeners = createAction(`${alm}/removeAll`)\r\n\r\n/**\r\n * @public\r\n */\r\nexport const removeListener = createAction(\r\n  `${alm}/remove`\r\n) as TypedRemoveListener<unknown>\r\n\r\nconst defaultErrorHandler: ListenerErrorHandler = (...args: unknown[]) => {\r\n  console.error(`${alm}/error`, ...args)\r\n}\r\n\r\nconst cancelActiveListeners = (\r\n  entry: ListenerEntry<unknown, Dispatch<AnyAction>>\r\n) => {\r\n  entry.pending.forEach((controller) => {\r\n    abortControllerWithReason(controller, listenerCancelled)\r\n  })\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport function createListenerMiddleware<\r\n  S = unknown,\r\n  D extends Dispatch<AnyAction> = ThunkDispatch<S, unknown, AnyAction>,\r\n  ExtraArgument = unknown\r\n>(middlewareOptions: CreateListenerMiddlewareOptions<ExtraArgument> = {}) {\r\n  const listenerMap = new Map<string, ListenerEntry>()\r\n  const { extra, onError = defaultErrorHandler } = middlewareOptions\r\n\r\n  assertFunction(onError, 'onError')\r\n\r\n  const insertEntry = (entry: ListenerEntry) => {\r\n    entry.unsubscribe = () => listenerMap.delete(entry!.id)\r\n\r\n    listenerMap.set(entry.id, entry)\r\n    return (cancelOptions?: UnsubscribeListenerOptions) => {\r\n      entry.unsubscribe()\r\n      if (cancelOptions?.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n  }\r\n\r\n  const findListenerEntry = (\r\n    comparator: (entry: ListenerEntry) => boolean\r\n  ): ListenerEntry | undefined => {\r\n    for (const entry of Array.from(listenerMap.values())) {\r\n      if (comparator(entry)) {\r\n        return entry\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }\r\n\r\n  const startListening = (options: FallbackAddListenerOptions) => {\r\n    let entry = findListenerEntry(\r\n      (existingEntry) => existingEntry.effect === options.effect\r\n    )\r\n\r\n    if (!entry) {\r\n      entry = createListenerEntry(options as any)\r\n    }\r\n\r\n    return insertEntry(entry)\r\n  }\r\n\r\n  const stopListening = (\r\n    options: FallbackAddListenerOptions & UnsubscribeListenerOptions\r\n  ): boolean => {\r\n    const { type, effect, predicate } = getListenerEntryPropsFrom(options)\r\n\r\n    const entry = findListenerEntry((entry) => {\r\n      const matchPredicateOrType =\r\n        typeof type === 'string'\r\n          ? entry.type === type\r\n          : entry.predicate === predicate\r\n\r\n      return matchPredicateOrType && entry.effect === effect\r\n    })\r\n\r\n    if (entry) {\r\n      entry.unsubscribe()\r\n      if (options.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n\r\n    return !!entry\r\n  }\r\n\r\n  const notifyListener = async (\r\n    entry: ListenerEntry<unknown, Dispatch<AnyAction>>,\r\n    action: AnyAction,\r\n    api: MiddlewareAPI,\r\n    getOriginalState: () => S\r\n  ) => {\r\n    const internalTaskController = new AbortController()\r\n    const take = createTakePattern(\r\n      startListening,\r\n      internalTaskController.signal\r\n    )\r\n\r\n    try {\r\n      entry.pending.add(internalTaskController)\r\n      await Promise.resolve(\r\n        entry.effect(\r\n          action,\r\n          // Use assign() rather than ... to avoid extra helper functions added to bundle\r\n          assign({}, api, {\r\n            getOriginalState,\r\n            condition: (\r\n              predicate: AnyListenerPredicate<any>,\r\n              timeout?: number\r\n            ) => take(predicate, timeout).then(Boolean),\r\n            take,\r\n            delay: createDelay(internalTaskController.signal),\r\n            pause: createPause<any>(internalTaskController.signal),\r\n            extra,\r\n            signal: internalTaskController.signal,\r\n            fork: createFork(internalTaskController.signal),\r\n            unsubscribe: entry.unsubscribe,\r\n            subscribe: () => {\r\n              listenerMap.set(entry.id, entry)\r\n            },\r\n            cancelActiveListeners: () => {\r\n              entry.pending.forEach((controller, _, set) => {\r\n                if (controller !== internalTaskController) {\r\n                  abortControllerWithReason(controller, listenerCancelled)\r\n                  set.delete(controller)\r\n                }\r\n              })\r\n            },\r\n          })\r\n        )\r\n      )\r\n    } catch (listenerError) {\r\n      if (!(listenerError instanceof TaskAbortError)) {\r\n        safelyNotifyError(onError, listenerError, {\r\n          raisedBy: 'effect',\r\n        })\r\n      }\r\n    } finally {\r\n      abortControllerWithReason(internalTaskController, listenerCompleted) // Notify that the task has completed\r\n      entry.pending.delete(internalTaskController)\r\n    }\r\n  }\r\n\r\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap)\r\n\r\n  const middleware: ListenerMiddleware<S, D, ExtraArgument> =\r\n    (api) => (next) => (action) => {\r\n      if (addListener.match(action)) {\r\n        return startListening(action.payload)\r\n      }\r\n\r\n      if (clearAllListeners.match(action)) {\r\n        clearListenerMiddleware()\r\n        return\r\n      }\r\n\r\n      if (removeListener.match(action)) {\r\n        return stopListening(action.payload)\r\n      }\r\n\r\n      // Need to get this state _before_ the reducer processes the action\r\n      let originalState: S | typeof INTERNAL_NIL_TOKEN = api.getState()\r\n\r\n      // `getOriginalState` can only be called synchronously.\r\n      // @see https://github.com/reduxjs/redux-toolkit/discussions/1648#discussioncomment-1932820\r\n      const getOriginalState = (): S => {\r\n        if (originalState === INTERNAL_NIL_TOKEN) {\r\n          throw new Error(\r\n            `${alm}: getOriginalState can only be called synchronously`\r\n          )\r\n        }\r\n\r\n        return originalState as S\r\n      }\r\n\r\n      let result: unknown\r\n\r\n      try {\r\n        // Actually forward the action to the reducer before we handle listeners\r\n        result = next(action)\r\n\r\n        if (listenerMap.size > 0) {\r\n          let currentState = api.getState()\r\n          // Work around ESBuild+TS transpilation issue\r\n          const listenerEntries = Array.from(listenerMap.values())\r\n          for (let entry of listenerEntries) {\r\n            let runListener = false\r\n\r\n            try {\r\n              runListener = entry.predicate(action, currentState, originalState)\r\n            } catch (predicateError) {\r\n              runListener = false\r\n\r\n              safelyNotifyError(onError, predicateError, {\r\n                raisedBy: 'predicate',\r\n              })\r\n            }\r\n\r\n            if (!runListener) {\r\n              continue\r\n            }\r\n\r\n            notifyListener(entry, action, api, getOriginalState)\r\n          }\r\n        }\r\n      } finally {\r\n        // Remove `originalState` store from this scope.\r\n        originalState = INTERNAL_NIL_TOKEN\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n  return {\r\n    middleware,\r\n    startListening,\r\n    stopListening,\r\n    clearListeners: clearListenerMiddleware,\r\n  } as ListenerMiddlewareInstance<S, D, ExtraArgument>\r\n}\r\n","import type { AbortSignalWithReason } from './types'\r\n\r\nexport const assertFunction: (\r\n  func: unknown,\r\n  expected: string\r\n) => asserts func is (...args: unknown[]) => unknown = (\r\n  func: unknown,\r\n  expected: string\r\n) => {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(`${expected} is not a function`)\r\n  }\r\n}\r\n\r\nexport const noop = () => {}\r\n\r\nexport const catchRejection = <T>(\r\n  promise: Promise<T>,\r\n  onError = noop\r\n): Promise<T> => {\r\n  promise.catch(onError)\r\n\r\n  return promise\r\n}\r\n\r\nexport const addAbortSignalListener = (\r\n  abortSignal: AbortSignal,\r\n  callback: (evt: Event) => void\r\n) => {\r\n  abortSignal.addEventListener('abort', callback, { once: true })\r\n}\r\n\r\n/**\r\n * Calls `abortController.abort(reason)` and patches `signal.reason`.\r\n * if it is not supported.\r\n *\r\n * At the time of writing `signal.reason` is available in FF chrome, edge node 17 and deno.\r\n * @param abortController\r\n * @param reason\r\n * @returns\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/reason\r\n */\r\nexport const abortControllerWithReason = <T>(\r\n  abortController: AbortController,\r\n  reason: T\r\n): void => {\r\n  type Consumer<T> = (val: T) => void\r\n\r\n  const signal = abortController.signal as AbortSignalWithReason<T>\r\n\r\n  if (signal.aborted) {\r\n    return\r\n  }\r\n\r\n  // Patch `reason` if necessary.\r\n  // - We use defineProperty here because reason is a getter of `AbortSignal.__proto__`.\r\n  // - We need to patch 'reason' before calling `.abort()` because listeners to the 'abort'\r\n  // event are are notified immediately.\r\n  if (!('reason' in signal)) {\r\n    Object.defineProperty(signal, 'reason', {\r\n      enumerable: true,\r\n      value: reason,\r\n      configurable: true,\r\n      writable: true,\r\n    })\r\n  }\r\n\r\n  ;(abortController.abort as Consumer<typeof reason>)(reason)\r\n}\r\n","import { enableES5 } from 'immer'\r\nexport * from 'redux'\r\nexport {\r\n  default as createNextState,\r\n  current,\r\n  freeze,\r\n  original,\r\n  isDraft,\r\n} from 'immer'\r\nexport type { Draft } from 'immer'\r\nexport { createSelector } from 'reselect'\r\nexport type {\r\n  Selector,\r\n  OutputParametricSelector,\r\n  OutputSelector,\r\n  ParametricSelector,\r\n} from 'reselect'\r\nexport { createDraftSafeSelector } from './createDraftSafeSelector'\r\nexport type { ThunkAction, ThunkDispatch } from 'redux-thunk'\r\n\r\n// We deliberately enable Immer's ES5 support, on the grounds that\r\n// we assume RTK will be used with React Native and other Proxy-less\r\n// environments.  In addition, that's how Immer 4 behaved, and since\r\n// we want to ship this in an RTK minor, we should keep the same behavior.\r\nenableES5()\r\n\r\nexport {\r\n  // js\r\n  configureStore,\r\n} from './configureStore'\r\nexport type {\r\n  // types\r\n  ConfigureEnhancersCallback,\r\n  ConfigureStoreOptions,\r\n  EnhancedStore,\r\n} from './configureStore'\r\nexport type { DevToolsEnhancerOptions } from './devtoolsExtension'\r\nexport {\r\n  // js\r\n  createAction,\r\n  getType,\r\n} from './createAction'\r\nexport type {\r\n  // types\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  ActionCreatorWithNonInferrablePayload,\r\n  ActionCreatorWithOptionalPayload,\r\n  ActionCreatorWithPayload,\r\n  ActionCreatorWithoutPayload,\r\n  ActionCreatorWithPreparedPayload,\r\n  PrepareAction,\r\n} from './createAction'\r\nexport {\r\n  // js\r\n  createReducer,\r\n} from './createReducer'\r\nexport type {\r\n  // types\r\n  Actions,\r\n  CaseReducer,\r\n  CaseReducers,\r\n} from './createReducer'\r\nexport {\r\n  // js\r\n  createSlice,\r\n} from './createSlice'\r\n\r\nexport type {\r\n  // types\r\n  CreateSliceOptions,\r\n  Slice,\r\n  CaseReducerActions,\r\n  SliceCaseReducers,\r\n  ValidateSliceCaseReducers,\r\n  CaseReducerWithPrepare,\r\n  SliceActionCreator,\r\n} from './createSlice'\r\nexport {\r\n  // js\r\n  createImmutableStateInvariantMiddleware,\r\n  isImmutableDefault,\r\n} from './immutableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  ImmutableStateInvariantMiddlewareOptions,\r\n} from './immutableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  createSerializableStateInvariantMiddleware,\r\n  findNonSerializableValue,\r\n  isPlain,\r\n} from './serializableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  SerializableStateInvariantMiddlewareOptions,\r\n} from './serializableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  getDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nexport type {\r\n  // types\r\n  ActionReducerMapBuilder,\r\n} from './mapBuilders'\r\nexport { MiddlewareArray } from './utils'\r\n\r\nexport { createEntityAdapter } from './entities/create_adapter'\r\nexport type {\r\n  Dictionary,\r\n  EntityState,\r\n  EntityAdapter,\r\n  EntitySelectors,\r\n  EntityStateAdapter,\r\n  EntityId,\r\n  Update,\r\n  IdSelector,\r\n  Comparer,\r\n} from './entities/models'\r\n\r\nexport {\r\n  createAsyncThunk,\r\n  unwrapResult,\r\n  miniSerializeError,\r\n} from './createAsyncThunk'\r\nexport type {\r\n  AsyncThunk,\r\n  AsyncThunkOptions,\r\n  AsyncThunkAction,\r\n  AsyncThunkPayloadCreatorReturnValue,\r\n  AsyncThunkPayloadCreator,\r\n  SerializedError,\r\n} from './createAsyncThunk'\r\n\r\nexport {\r\n  // js\r\n  isAllOf,\r\n  isAnyOf,\r\n  isPending,\r\n  isRejected,\r\n  isFulfilled,\r\n  isAsyncThunkAction,\r\n  isRejectedWithValue,\r\n} from './matchers'\r\nexport type {\r\n  // types\r\n  ActionMatchingAllOf,\r\n  ActionMatchingAnyOf,\r\n} from './matchers'\r\n\r\nexport { nanoid } from './nanoid'\r\n\r\nexport { default as isPlainObject } from './isPlainObject'\r\n\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './listenerMiddleware/index'\r\nexport type { AnyListenerPredicate } from './listenerMiddleware/types'\r\n\r\nexport {\r\n  createListenerMiddleware,\r\n  addListener,\r\n  removeListener,\r\n  clearAllListeners,\r\n  TaskAbortError,\r\n} from './listenerMiddleware/index'\r\n","export const auth = {\n  TOKEN: \"ML_LOGIN_ACCESS_TOKEN\"\n}","import { createSlice } from '@reduxjs/toolkit'\nimport { auth } from '../../utils/constants'\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: {\n      username: null,\n      name: null,\n    },\n    accessToken: null,\n    instance: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      const { tokenClaim, token, instance } = action.payload\n      console.log(tokenClaim)\n      state.accessToken = token\n      state.instance = instance\n      localStorage.setItem(auth.TOKEN, token)\n\n      state.user = {\n        username: tokenClaim.preferred_username,\n        name: tokenClaim.name,\n      }\n    },\n    logout: (state, action) => {\n      state.user = {username: null, name: null}\n      state.accessToken = null\n      localStorage.setItem(auth.TOKEN, \"null\")\n      state.instance.clearCache()\n    }\n  }\n})\n\n\nexport const { login, logout } = userSlice.actions\nexport const UserReducer = userSlice.reducer\n","import type { AnyAction, Reducer } from 'redux'\r\nimport { createNextState } from '.'\r\nimport type {\r\n  ActionCreatorWithoutPayload,\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  PrepareAction,\r\n  _ActionCreatorWithPreparedPayload,\r\n} from './createAction'\r\nimport { createAction } from './createAction'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ReducerWithInitialState,\r\n} from './createReducer'\r\nimport { createReducer, NotFunction } from './createReducer'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\nimport { freezeDraftable } from './utils'\r\n\r\n/**\r\n * An action creator attached to a slice.\r\n *\r\n * @deprecated please use PayloadActionCreator directly\r\n *\r\n * @public\r\n */\r\nexport type SliceActionCreator<P> = PayloadActionCreator<P>\r\n\r\n/**\r\n * The return value of `createSlice`\r\n *\r\n * @public\r\n */\r\nexport interface Slice<\r\n  State = any,\r\n  CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice name.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The slice's reducer.\r\n   */\r\n  reducer: Reducer<State>\r\n\r\n  /**\r\n   * Action creators for the types of actions that are handled by the slice\r\n   * reducer.\r\n   */\r\n  actions: CaseReducerActions<CaseReducers>\r\n\r\n  /**\r\n   * The individual case reducer functions that were passed in the `reducers` parameter.\r\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\r\n   */\r\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>\r\n\r\n  /**\r\n   * Provides access to the initial state value given to the slice.\r\n   * If a lazy state initializer was provided, it will be called and a fresh value returned.\r\n   */\r\n  getInitialState: () => State\r\n}\r\n\r\n/**\r\n * Options for `createSlice()`.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSliceOptions<\r\n  State = any,\r\n  CR extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice's name. Used to namespace the generated action types.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n   */\r\n  initialState: State | (() => State)\r\n\r\n  /**\r\n   * A mapping from action types to action-type-specific *case reducer*\r\n   * functions. For every action type, a matching action creator will be\r\n   * generated using `createAction()`.\r\n   */\r\n  reducers: ValidateSliceCaseReducers<State, CR>\r\n\r\n  /**\r\n   * A callback that receives a *builder* object to define\r\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n   * \r\n   * Alternatively, a mapping from action types to action-type-specific *case reducer*\r\n   * functions. These reducers should have existing action types used\r\n   * as the keys, and action creators will _not_ be generated.\r\n   * \r\n   * @example\r\n```ts\r\nimport { createAction, createSlice, Action, AnyAction } from '@reduxjs/toolkit'\r\nconst incrementBy = createAction<number>('incrementBy')\r\nconst decrement = createAction('decrement')\r\n\r\ninterface RejectedAction extends Action {\r\n  error: Error\r\n}\r\n\r\nfunction isRejectedAction(action: AnyAction): action is RejectedAction {\r\n  return action.type.endsWith('rejected')\r\n}\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  initialState: 0,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(incrementBy, (state, action) => {\r\n        // action is inferred correctly here if using TS\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {})\r\n      // You can match a range of action types\r\n      .addMatcher(\r\n        isRejectedAction,\r\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\r\n        (state, action) => {}\r\n      )\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {})\r\n    }\r\n})\r\n```\r\n   */\r\n  extraReducers?:\r\n    | CaseReducers<NoInfer<State>, any>\r\n    | ((builder: ActionReducerMapBuilder<NoInfer<State>>) => void)\r\n}\r\n\r\n/**\r\n * A CaseReducer with a `prepare` method.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\r\n  reducer: CaseReducer<State, Action>\r\n  prepare: PrepareAction<Action['payload']>\r\n}\r\n\r\n/**\r\n * The type describing a slice's `reducers` option.\r\n *\r\n * @public\r\n */\r\nexport type SliceCaseReducers<State> = {\r\n  [K: string]:\r\n    | CaseReducer<State, PayloadAction<any>>\r\n    | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>\r\n}\r\n\r\n/**\r\n * Derives the slice's `actions` property from the `reducers` options\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerActions<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends { prepare: any }\r\n    ? ActionCreatorForCaseReducerWithPrepare<CaseReducers[Type]>\r\n    : ActionCreatorForCaseReducer<CaseReducers[Type]>\r\n}\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducerWithPrepare<CR extends { prepare: any }> =\r\n  _ActionCreatorWithPreparedPayload<CR['prepare'], string>\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducer<CR> = CR extends (\r\n  state: any,\r\n  action: infer Action\r\n) => any\r\n  ? Action extends { payload: infer P }\r\n    ? PayloadActionCreator<P>\r\n    : ActionCreatorWithoutPayload\r\n  : ActionCreatorWithoutPayload\r\n\r\n/**\r\n * Extracts the CaseReducers out of a `reducers` object, even if they are\r\n * tested into a `CaseReducerWithPrepare`.\r\n *\r\n * @internal\r\n */\r\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends {\r\n    reducer: infer Reducer\r\n  }\r\n    ? Reducer\r\n    : CaseReducers[Type]\r\n}\r\n\r\n/**\r\n * Used on a SliceCaseReducers object.\r\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\r\n * the `reducer` and the `prepare` function use the same type of `payload`.\r\n *\r\n * Might do additional such checks in the future.\r\n *\r\n * This type is only ever useful if you want to write your own wrapper around\r\n * `createSlice`. Please don't use it otherwise!\r\n *\r\n * @public\r\n */\r\nexport type ValidateSliceCaseReducers<\r\n  S,\r\n  ACR extends SliceCaseReducers<S>\r\n> = ACR & {\r\n  [T in keyof ACR]: ACR[T] extends {\r\n    reducer(s: S, action?: infer A): any\r\n  }\r\n    ? {\r\n        prepare(...a: never[]): Omit<A, 'type'>\r\n      }\r\n    : {}\r\n}\r\n\r\nfunction getType(slice: string, actionKey: string): string {\r\n  return `${slice}/${actionKey}`\r\n}\r\n\r\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\r\nexport function createSlice<\r\n  State,\r\n  CaseReducers extends SliceCaseReducers<State>,\r\n  Name extends string = string\r\n>(\r\n  options: CreateSliceOptions<State, CaseReducers, Name>\r\n): Slice<State, CaseReducers, Name> {\r\n  const { name } = options\r\n  if (!name) {\r\n    throw new Error('`name` is a required option for createSlice')\r\n  }\r\n\r\n  if (\r\n    typeof process !== 'undefined' &&\r\n    process.env.NODE_ENV === 'development'\r\n  ) {\r\n    if(options.initialState === undefined) {\r\n      console.error('You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`')\r\n    }\r\n  }\r\n\r\n  const initialState =\r\n    typeof options.initialState == 'function'\r\n      ? options.initialState\r\n      : freezeDraftable(options.initialState)\r\n\r\n  const reducers = options.reducers || {}\r\n\r\n  const reducerNames = Object.keys(reducers)\r\n\r\n  const sliceCaseReducersByName: Record<string, CaseReducer> = {}\r\n  const sliceCaseReducersByType: Record<string, CaseReducer> = {}\r\n  const actionCreators: Record<string, Function> = {}\r\n\r\n  reducerNames.forEach((reducerName) => {\r\n    const maybeReducerWithPrepare = reducers[reducerName]\r\n    const type = getType(name, reducerName)\r\n\r\n    let caseReducer: CaseReducer<State, any>\r\n    let prepareCallback: PrepareAction<any> | undefined\r\n\r\n    if ('reducer' in maybeReducerWithPrepare) {\r\n      caseReducer = maybeReducerWithPrepare.reducer\r\n      prepareCallback = maybeReducerWithPrepare.prepare\r\n    } else {\r\n      caseReducer = maybeReducerWithPrepare\r\n    }\r\n\r\n    sliceCaseReducersByName[reducerName] = caseReducer\r\n    sliceCaseReducersByType[type] = caseReducer\r\n    actionCreators[reducerName] = prepareCallback\r\n      ? createAction(type, prepareCallback)\r\n      : createAction(type)\r\n  })\r\n\r\n  function buildReducer() {\r\n    const [\r\n      extraReducers = {},\r\n      actionMatchers = [],\r\n      defaultCaseReducer = undefined,\r\n    ] =\r\n      typeof options.extraReducers === 'function'\r\n        ? executeReducerBuilderCallback(options.extraReducers)\r\n        : [options.extraReducers]\r\n\r\n    const finalCaseReducers = { ...extraReducers, ...sliceCaseReducersByType }\r\n    return createReducer(\r\n      initialState,\r\n      finalCaseReducers as any,\r\n      actionMatchers,\r\n      defaultCaseReducer\r\n    )\r\n  }\r\n\r\n  let _reducer: ReducerWithInitialState<State>\r\n\r\n  return {\r\n    name,\r\n    reducer(state, action) {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer(state, action)\r\n    },\r\n    actions: actionCreators as any,\r\n    caseReducers: sliceCaseReducersByName as any,\r\n    getInitialState() {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer.getInitialState()\r\n    },\r\n  }\r\n}\r\n","import type { Draft } from 'immer'\r\nimport createNextState, { isDraft, isDraftable } from 'immer'\r\nimport type { AnyAction, Action, Reducer } from 'redux'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\nimport { freezeDraftable } from './utils'\r\n\r\n/**\r\n * Defines a mapping from action types to corresponding action object shapes.\r\n *\r\n * @deprecated This should not be used manually - it is only used for internal\r\n *             inference purposes and should not have any further value.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type Actions<T extends keyof any = string> = Record<T, Action>\r\n\r\n/**\r\n * @deprecated use `TypeGuard` instead\r\n */\r\nexport interface ActionMatcher<A extends AnyAction> {\r\n  (action: AnyAction): action is A\r\n}\r\n\r\nexport type ActionMatcherDescription<S, A extends AnyAction> = {\r\n  matcher: ActionMatcher<A>\r\n  reducer: CaseReducer<S, NoInfer<A>>\r\n}\r\n\r\nexport type ReadonlyActionMatcherDescriptionCollection<S> = ReadonlyArray<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\nexport type ActionMatcherDescriptionCollection<S> = Array<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\n/**\r\n * A *case reducer* is a reducer function for a specific action type. Case\r\n * reducers can be composed to full reducers using `createReducer()`.\r\n *\r\n * Unlike a normal Redux reducer, a case reducer is never called with an\r\n * `undefined` state to determine the initial state. Instead, the initial\r\n * state is explicitly specified as an argument to `createReducer()`.\r\n *\r\n * In addition, a case reducer can choose to mutate the passed-in `state`\r\n * value directly instead of returning a new state. This does not actually\r\n * cause the store state to be mutated directly; instead, thanks to\r\n * [immer](https://github.com/mweststrate/immer), the mutations are\r\n * translated to copy operations that result in a new state.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducer<S = any, A extends Action = AnyAction> = (\r\n  state: Draft<S>,\r\n  action: A\r\n) => S | void | Draft<S>\r\n\r\n/**\r\n * A mapping from action types to case reducers for `createReducer()`.\r\n *\r\n * @deprecated This should not be used manually - it is only used\r\n *             for internal inference purposes and using it manually\r\n *             would lead to type erasure.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type CaseReducers<S, AS extends Actions> = {\r\n  [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void\r\n}\r\n\r\nexport type NotFunction<T> = T extends Function ? never : T\r\n\r\nfunction isStateFunction<S>(x: unknown): x is () => S {\r\n  return typeof x === 'function'\r\n}\r\n\r\nexport type ReducerWithInitialState<S extends NotFunction<any>> = Reducer<S> & {\r\n  getInitialState: () => S\r\n}\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * @remarks\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @overloadSummary\r\n * This overload accepts a callback function that receives a `builder` object as its argument.\r\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\r\n * called to define what actions this reducer will handle.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param builderCallback - `(builder: Builder) => void` A callback that receives a *builder* object to define\r\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AnyAction,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst increment = createAction<number>(\"increment\");\r\nconst decrement = createAction<number>(\"decrement\");\r\n\r\nfunction isActionWithNumberPayload(\r\n  action: AnyAction\r\n): action is PayloadAction<number> {\r\n  return typeof action.payload === \"number\";\r\n}\r\n\r\nconst reducer = createReducer(\r\n  {\r\n    counter: 0,\r\n    sumOfNumberPayloads: 0,\r\n    unhandledActions: 0,\r\n  },\r\n  (builder) => {\r\n    builder\r\n      .addCase(increment, (state, action) => {\r\n        // action is inferred correctly here\r\n        state.counter += action.payload;\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {\r\n        state.counter -= action.payload;\r\n      })\r\n      // You can apply a \"matcher function\" to incoming actions\r\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {});\r\n  }\r\n);\r\n```\r\n * @public\r\n */\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): ReducerWithInitialState<S>\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n * \r\n * @overloadSummary\r\n * This overload accepts an object where the keys are string action types, and the values\r\n * are case reducer functions to handle those action types.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param actionsMap - An object mapping from action types to _case reducers_, each of which handles one specific action type.\r\n * @param actionMatchers - An array of matcher definitions in the form `{matcher, reducer}`.\r\n *   All matching reducers will be executed in order, independently if a case reducer matched or not.\r\n * @param defaultCaseReducer - A \"default case\" reducer that is executed if no case reducer and no matcher\r\n *   reducer was executed for this action.\r\n *\r\n * @example\r\n```js\r\nconst counterReducer = createReducer(0, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n\r\n// Alternately, use a \"lazy initializer\" to provide the initial state\r\n// (works with either form of createReducer)\r\nconst initialState = () => 0\r\nconst counterReducer = createReducer(initialState, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n```\r\n \r\n * Action creators that were generated using [`createAction`](./createAction) may be used directly as the keys here, using computed property syntax:\r\n\r\n```js\r\nconst increment = createAction('increment')\r\nconst decrement = createAction('decrement')\r\n\r\nconst counterReducer = createReducer(0, {\r\n  [increment]: (state, action) => state + action.payload,\r\n  [decrement.type]: (state, action) => state - action.payload\r\n})\r\n```\r\n * @public\r\n */\r\nexport function createReducer<\r\n  S extends NotFunction<any>,\r\n  CR extends CaseReducers<S, any> = CaseReducers<S, any>\r\n>(\r\n  initialState: S | (() => S),\r\n  actionsMap: CR,\r\n  actionMatchers?: ActionMatcherDescriptionCollection<S>,\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S>\r\n\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  mapOrBuilderCallback:\r\n    | CaseReducers<S, any>\r\n    | ((builder: ActionReducerMapBuilder<S>) => void),\r\n  actionMatchers: ReadonlyActionMatcherDescriptionCollection<S> = [],\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S> {\r\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] =\r\n    typeof mapOrBuilderCallback === 'function'\r\n      ? executeReducerBuilderCallback(mapOrBuilderCallback)\r\n      : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer]\r\n\r\n  // Ensure the initial state gets frozen either way (if draftable)\r\n  let getInitialState: () => S\r\n  if (isStateFunction(initialState)) {\r\n    getInitialState = () => freezeDraftable(initialState())\r\n  } else {\r\n    const frozenInitialState = freezeDraftable(initialState)\r\n    getInitialState = () => frozenInitialState\r\n  }\r\n\r\n  function reducer(state = getInitialState(), action: any): S {\r\n    let caseReducers = [\r\n      actionsMap[action.type],\r\n      ...finalActionMatchers\r\n        .filter(({ matcher }) => matcher(action))\r\n        .map(({ reducer }) => reducer),\r\n    ]\r\n    if (caseReducers.filter((cr) => !!cr).length === 0) {\r\n      caseReducers = [finalDefaultCaseReducer]\r\n    }\r\n\r\n    return caseReducers.reduce((previousState, caseReducer): S => {\r\n      if (caseReducer) {\r\n        if (isDraft(previousState)) {\r\n          // If it's already a draft, we must already be inside a `createNextState` call,\r\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\r\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\r\n          const draft = previousState as Draft<S> // We can assume this is already a draft\r\n          const result = caseReducer(draft, action)\r\n\r\n          if (result === undefined) {\r\n            return previousState\r\n          }\r\n\r\n          return result as S\r\n        } else if (!isDraftable(previousState)) {\r\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\r\n          // return the caseReducer func and not wrap it with produce.\r\n          const result = caseReducer(previousState as any, action)\r\n\r\n          if (result === undefined) {\r\n            if (previousState === null) {\r\n              return previousState\r\n            }\r\n            throw Error(\r\n              'A case reducer on a non-draftable value must not return undefined'\r\n            )\r\n          }\r\n\r\n          return result as S\r\n        } else {\r\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n          // these two types.\r\n          return createNextState(previousState, (draft: Draft<S>) => {\r\n            return caseReducer(draft, action)\r\n          })\r\n        }\r\n      }\r\n\r\n      return previousState\r\n    }, state)\r\n  }\r\n\r\n  reducer.getInitialState = getInitialState\r\n\r\n  return reducer as ReducerWithInitialState<S>\r\n}\r\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { logout } from '../../redux/slice/user';\n\nconst Dashboard = () => {\n  \n  const dispatch = useDispatch();\n  const navigate = useNavigate()\n  const {user} = useSelector(state => state.user)\n\n  \n  useEffect(() => {\n    if (!user.name) {\n      navigate(\"/signin\")\n    }\n  }, [])\n  \n\n  return (\n    <div>\n      <p className='text-3xl font-thin'>Welcome</p>\n      <p className='text-5xl'>{user.name}</p>\n      <div\n        className=\"flex gap-2 mx-auto mt-5 items-center border p-1 px-2 hover:bg-slate-700 hover:text-slate-100 hover:rounded-md transition-all w-max\"\n        onClick={() => {\n          dispatch(logout());\n          navigate(\"/signin\");\n        }}\n      >\n        <img\n          className='w-6' \n          src=\"./assets/images/logo.png\" alt=\"signout\" />\n        <p>sign out</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard","import React from \"react\";\nimport Dashboard from \"../components/Dashboard/Dashboard\";\n\nconst DashboardPage = () => {\n  return (\n    <div className=\"flex justify-center items-center h-screen flex-col text-center bg-slate-50\">\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default DashboardPage;\n","import React, { useState } from \"react\";\nimport MicrosoftLogin from \"react-microsoft-login\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login } from \"../../redux/slice/user\";\n\nconst Microsoft = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [msalInstance, onMsalInstanceChange] = useState();\n  const loginHandler = (err, data, msal) => {\n    console.log(err);\n    console.log(data);\n    console.log(\"msal: \", msal)\n\n    if (data) {\n      dispatch(\n        login({\n          tokenClaim: data.idTokenClaims,\n          token: data.accessToken,\n          instance: msal,\n        })\n      );\n      onMsalInstanceChange(msal);\n      navigate(\"/dashboard\");\n    }\n  };\n\n  return (\n    <div className=\"drop-shadow-2xl flex justify-center items-center flex-col py-24 bg-slate-50 px-5 rounded-lg\">\n      <img\n        className=\"w-20 mb-5 p-0\"\n        src=\"./assets/images/logo.png\"\n        alt=\"microsoft\"\n      />\n      <h1 className=\"text-4xl font-light\">Microsoft Login</h1>\n      <p className=\"w-80 text-center m-5 font-thin\">\n        a simple and intelligent microsoft login that makes it easy to\n        authenticate\n      </p>\n      <MicrosoftLogin\n        clientId={process.env.REACT_APP_CLIENT_ID}\n        authCallback={loginHandler}\n        redirectUri={\"http://localhost:3000/dashboard\"}\n        response_type=\"none\"\n      />\n    </div>\n  );\n};\n\nexport default Microsoft;\n","import React from 'react'\nimport Microsoft from '../components/MicrosoftLogin/Microsoft'\n\nconst Login = () => {\n  return (\n    <div className='flex h-screen justify-center items-center flex-col bg-slate-100'>\n      <Microsoft/>\n    </div>\n  )\n}\n\nexport default Login","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NotFound = () => {\n  const navigate = useNavigate()\n  return (\n    <div\n      className=\"\n      flex justify-center items-center h-screen flex-col\n    \"\n    >\n      <p className=\"text-4xl font-bold\">404</p>\n      <p>page not found</p>\n      <button\n        className=\"\n          py-1 px-5 m-3 border transition-all border-cyan-500 hover:rounded-md hover:bg-cyan-500 hover:text-slate-100\"\n        onClick={() => navigate(-1)}\n      >\n        go back\n      </button>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { useSelector } from \"react-redux\";\nimport { BrowserRouter, Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport Login from \"./pages/Login\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route index path=\"/\" element={<Navigate to={'/signin'}/>}/>\n        <Route path=\"/signin\" element={<Login/>}/>\n        <Route path=\"/dashboard\" element={<DashboardPage/>}/>\n        <Route path=\"*\" element={<NotFound/>}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEvents {\n\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode = \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken = \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent = \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync = \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup = \"acquireTokenPopup\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint = \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt = \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken = \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken = \"silentIframeClientAcquireToken\",\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken = \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent = \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority = \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker = \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken = \"nativeInteractionClientAcquireToken\",\n\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest = \"refreshTokenClientExecuteTokenRequest\",\n\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders = \"baseClientCreateTokenRequestHeaders\",\n\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake = \"brokerHandshake\",\n\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker = \"acquireTokenByRefreshTokenInBroker\",\n\n    /**\n     * acquireToken API in BrokerClientApplication.\n     * Used to acquire a token on behalf of the embedded application (PW-Broker).\n     */\n    AcquireTokenByBroker = \"acquireTokenByBroker\"\n}\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEventStatus {\n    NotStarted,\n    InProgress,\n    Completed\n}\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string,\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus,\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string,\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string,\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null,\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null,\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {PerformanceEvents}\n     */\n    name: PerformanceEvents,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null,\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number,\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null,\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string,\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string,\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string,\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string,\n\n    /**\n     * Size of the id token\n     *\n     * @type {number}\n     */\n    idTokenSize?: number,\n\n    /**\n     * \n     * Size of the access token\n     *\n     * @type {number}\n     */\n\n    accessTokenSize?: number,\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string,\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string,\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n};\n\nexport const OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE\n];\n\nexport const OIDC_SCOPES = [\n    ...OIDC_DEFAULT_SCOPES,\n    Constants.EMAIL_SCOPE\n];\n\n/**\n * Request header names\n */\nexport enum HeaderNames {\n    CONTENT_TYPE = \"Content-Type\",\n    RETRY_AFTER = \"Retry-After\",\n    CCS_HEADER = \"X-AnchorMailbox\",\n    WWWAuthenticate = \"WWW-Authenticate\",\n    AuthenticationInfo = \"Authentication-Info\"\n}\n\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nexport enum PersistentCacheKeys {\n    ID_TOKEN = \"idtoken\",\n    CLIENT_INFO = \"client.info\",\n    ADAL_ID_TOKEN = \"adal.idtoken\",\n    ERROR = \"error\",\n    ERROR_DESC = \"error.description\",\n    ACTIVE_ACCOUNT = \"active-account\", // Legacy active-account cache key, use new key instead\n    ACTIVE_ACCOUNT_FILTERS = \"active-account-filters\" // new cache entry for active_account for a more robust version for browser\n}\n\n/**\n * String constants related to AAD Authority\n */\nexport enum AADAuthorityConstants {\n    COMMON = \"common\",\n    ORGANIZATIONS = \"organizations\",\n    CONSUMERS = \"consumers\"\n}\n\n/**\n * Keys in the hashParams sent by AAD Server\n */\nexport enum AADServerParamKeys {\n    CLIENT_ID = \"client_id\",\n    REDIRECT_URI = \"redirect_uri\",\n    RESPONSE_TYPE = \"response_type\",\n    RESPONSE_MODE = \"response_mode\",\n    GRANT_TYPE = \"grant_type\",\n    CLAIMS = \"claims\",\n    SCOPE = \"scope\",\n    ERROR = \"error\",\n    ERROR_DESCRIPTION = \"error_description\",\n    ACCESS_TOKEN = \"access_token\",\n    ID_TOKEN = \"id_token\",\n    REFRESH_TOKEN = \"refresh_token\",\n    EXPIRES_IN = \"expires_in\",\n    STATE = \"state\",\n    NONCE = \"nonce\",\n    PROMPT = \"prompt\",\n    SESSION_STATE = \"session_state\",\n    CLIENT_INFO = \"client_info\",\n    CODE = \"code\",\n    CODE_CHALLENGE = \"code_challenge\",\n    CODE_CHALLENGE_METHOD = \"code_challenge_method\",\n    CODE_VERIFIER = \"code_verifier\",\n    CLIENT_REQUEST_ID = \"client-request-id\",\n    X_CLIENT_SKU = \"x-client-SKU\",\n    X_CLIENT_VER = \"x-client-VER\",\n    X_CLIENT_OS = \"x-client-OS\",\n    X_CLIENT_CPU = \"x-client-CPU\",\n    X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\",\n    X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\",\n    X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\",\n    X_APP_NAME = \"x-app-name\",\n    X_APP_VER = \"x-app-ver\",\n    POST_LOGOUT_URI = \"post_logout_redirect_uri\",\n    ID_TOKEN_HINT= \"id_token_hint\",\n    DEVICE_CODE = \"device_code\",\n    CLIENT_SECRET = \"client_secret\",\n    CLIENT_ASSERTION = \"client_assertion\",\n    CLIENT_ASSERTION_TYPE = \"client_assertion_type\",\n    TOKEN_TYPE = \"token_type\",\n    REQ_CNF = \"req_cnf\",\n    OBO_ASSERTION = \"assertion\",\n    REQUESTED_TOKEN_USE = \"requested_token_use\",\n    ON_BEHALF_OF = \"on_behalf_of\",\n    FOCI = \"foci\",\n    CCS_HEADER = \"X-AnchorMailbox\",\n    RETURN_SPA_CODE = \"return_spa_code\",\n    NATIVE_BROKER = \"nativebroker\",\n    LOGOUT_HINT = \"logout_hint\"\n}\n\n/**\n * Claims request keys\n */\nexport enum ClaimsRequestKeys {\n    ACCESS_TOKEN = \"access_token\",\n    XMS_CC = \"xms_cc\"\n}\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nexport const PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\"\n};\n\n/**\n * SSO Types - generated to populate hints\n */\nexport enum SSOTypes {\n    ACCOUNT = \"account\",\n    SID = \"sid\",\n    LOGIN_HINT = \"login_hint\",\n    ID_TOKEN = \"id_token\",\n    DOMAIN_HINT = \"domain_hint\",\n    ORGANIZATIONS = \"organizations\",\n    CONSUMERS = \"consumers\",\n    ACCOUNT_ID = \"accountIdentifier\",\n    HOMEACCOUNT_ID = \"homeAccountIdentifier\"\n}\n\n/**\n * Disallowed extra query parameters.\n */\nexport const BlacklistedEQParams = [\n    SSOTypes.SID,\n    SSOTypes.LOGIN_HINT\n];\n\n/**\n * allowed values for codeVerifier\n */\nexport const CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\"\n};\n\n/**\n * The method used to encode the code verifier for the code challenge parameter. can be one\n * of plain or s256. if excluded, code challenge is assumed to be plaintext. for more\n * information, see the pkce rcf: https://tools.ietf.org/html/rfc7636\n */\nexport const CodeChallengeMethodValuesArray: string[] = [\n    CodeChallengeMethodValues.PLAIN,\n    CodeChallengeMethodValues.S256\n];\n\n/**\n * allowed values for response_mode\n */\nexport enum ResponseMode {\n    QUERY = \"query\",\n    FRAGMENT = \"fragment\",\n    FORM_POST = \"form_post\"\n}\n\n/**\n * allowed grant_type\n */\nexport enum GrantType {\n    IMPLICIT_GRANT = \"implicit\",\n    AUTHORIZATION_CODE_GRANT = \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT = \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT = \"password\",\n    REFRESH_TOKEN_GRANT = \"refresh_token\",\n    DEVICE_CODE_GRANT = \"device_code\",\n    JWT_BEARER = \"urn:ietf:params:oauth:grant-type:jwt-bearer\"\n}\n\n/**\n * Account types in Cache\n */\nexport enum CacheAccountType {\n    MSSTS_ACCOUNT_TYPE = \"MSSTS\",\n    ADFS_ACCOUNT_TYPE = \"ADFS\",\n    MSAV1_ACCOUNT_TYPE = \"MSA\",\n    GENERIC_ACCOUNT_TYPE = \"Generic\" // NTLM, Kerberos, FBA, Basic etc\n}\n\n/**\n * Separators used in cache\n */\nexport enum Separators {\n    CACHE_KEY_SEPARATOR = \"-\",\n    CLIENT_INFO_SEPARATOR = \".\"\n}\n\n/**\n * Credential Type stored in the cache\n */\nexport enum CredentialType {\n    ID_TOKEN = \"IdToken\",\n    ACCESS_TOKEN = \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME = \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN = \"RefreshToken\",\n}\n\n/**\n * Credential Type stored in the cache\n */\nexport enum CacheSchemaType {\n    ACCOUNT = \"Account\",\n    CREDENTIAL = \"Credential\",\n    ID_TOKEN = \"IdToken\",\n    ACCESS_TOKEN = \"AccessToken\",\n    REFRESH_TOKEN = \"RefreshToken\",\n    APP_METADATA = \"AppMetadata\",\n    TEMPORARY = \"TempCache\",\n    TELEMETRY = \"Telemetry\",\n    UNDEFINED = \"Undefined\",\n    THROTTLING = \"Throttling\"\n}\n\n/**\n * Combine all cache types\n */\nexport enum CacheType {\n    ADFS = 1001,\n    MSA = 1002,\n    MSSTS = 1003,\n    GENERIC = 1004,\n    ACCESS_TOKEN = 2001,\n    REFRESH_TOKEN = 2002,\n    ID_TOKEN = 2003,\n    APP_METADATA = 3001,\n    UNDEFINED = 9999\n}\n\n/**\n * More Cache related constants\n */\nexport const APP_METADATA = \"appmetadata\";\nexport const CLIENT_INFO = \"client_info\";\nexport const THE_FAMILY_ID = \"1\";\n\nexport const AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\n};\n\nexport enum AuthorityMetadataSource {\n    CONFIG = \"config\",\n    CACHE = \"cache\",\n    NETWORK = \"network\",\n    HARDCODED_VALUES= \"hardcoded_values\",\n}\n\nexport const SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\"\n};\n\n/**\n * Type of the authentication request\n */\nexport enum AuthenticationScheme {\n    BEARER = \"Bearer\",\n    POP = \"pop\",\n    SSH = \"ssh-cert\"\n}\n\n/**\n * Constants related to throttling\n */\nexport const ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\n};\n\nexport const Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n\n/**\n * Password grant parameters\n */\nexport enum PasswordGrantConstants {\n    username = \"username\",\n    password = \"password\"\n}\n\n/**\n * Response codes\n */\nexport enum  ResponseCodes {\n    httpSuccess = 200,\n    httpBadRequest = 400\n}\n\n/**\n * Region Discovery Sources\n */\nexport enum RegionDiscoverySources {\n    FAILED_AUTO_DETECTION = \"1\",\n    INTERNAL_CACHE = \"2\",\n    ENVIRONMENT_VARIABLE = \"3\",\n    IMDS = \"4\",\n}\n\n/**\n * Region Discovery Outcomes\n */\nexport enum RegionDiscoveryOutcomes {\n    CONFIGURED_MATCHES_DETECTED = \"1\",\n    CONFIGURED_NO_AUTO_DETECTION = \"2\",\n    CONFIGURED_NOT_DETECTED = \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL = \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED = \"5\"\n}\n\nexport enum CacheOutcome {\n    NO_CACHE_HIT = \"0\",\n    FORCE_REFRESH = \"1\",\n    NO_CACHED_ACCESS_TOKEN = \"2\",\n    CACHED_ACCESS_TOKEN_EXPIRED = \"3\",\n    REFRESH_CACHED_ACCESS_TOKEN = \"4\"\n}\n\nexport enum JsonTypes {\n    Jwt = \"JWT\",\n    Jwk = \"JWK\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    POLL_INTERVAL_MS: 50,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\n\nexport const NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\"\n};\n\nexport enum NativeExtensionMethod {\n    HandshakeRequest = \"Handshake\",\n    HandshakeResponse = \"HandshakeResponse\",\n    GetToken = \"GetToken\",\n    Response = \"Response\"\n}\n\nexport enum BrowserCacheLocation {\n    LocalStorage = \"localStorage\",\n    SessionStorage = \"sessionStorage\",\n    MemoryStorage = \"memoryStorage\"\n}\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport enum HTTP_REQUEST_TYPE {\n    GET = \"GET\",\n    POST = \"POST\"\n}\n\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nexport enum TemporaryCacheKeys {\n    AUTHORITY = \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireToken.account\",\n    SESSION_STATE = \"session.state\",\n    REQUEST_STATE = \"request.state\",\n    NONCE_IDTOKEN = \"nonce.id_token\",\n    ORIGIN_URI = \"request.origin\",\n    RENEW_STATUS = \"token.renew.status\",\n    URL_HASH = \"urlHash\",\n    REQUEST_PARAMS = \"request.params\",\n    SCOPES = \"scopes\",\n    INTERACTION_STATUS_KEY = \"interaction.status\",\n    CCS_CREDENTIAL = \"ccs.credential\",\n    CORRELATION_ID = \"request.correlationId\",\n    NATIVE_REQUEST = \"request.native\"\n}\n\n/**\n * Cache keys stored in-memory\n */\nexport enum InMemoryCacheKeys {\n    WRAPPER_SKU = \"wrapper.sku\",\n    WRAPPER_VER = \"wrapper.version\"\n}\n\n/**\n * API Codes for Telemetry purposes. \n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nexport enum ApiId {\n    acquireTokenRedirect = 861,\n    acquireTokenPopup = 862,\n    ssoSilent = 863,\n    acquireTokenSilent_authCode = 864,\n    handleRedirectPromise = 865,\n    acquireTokenByCode = 866,\n    acquireTokenSilent_silentFlow = 61,\n    logout = 961,\n    logoutPopup = 962\n}\n\n/*\n * Interaction type of the API - used for state and telemetry\n */\nexport enum InteractionType {\n    Redirect = \"redirect\",\n    Popup = \"popup\",\n    Silent = \"silent\",\n    None = \"none\"\n}\n\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nexport enum InteractionStatus {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup = \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login = \"login\",\n    /**\n     * Status set when logout call occuring\n     */ \n    Logout = \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken = \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent = \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect = \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None = \"none\"\n}\n\nexport const DEFAULT_REQUEST: RedirectRequest|PopupRequest = {\n    scopes: OIDC_DEFAULT_SCOPES\n};\n\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nexport const KEY_FORMAT_JWK = \"jwk\";\n\n// Supported wrapper SKUs\nexport enum WrapperSKU {\n    React = \"@azure/msal-react\",\n    Angular = \"@azure/msal-angular\"\n}\n\n// DatabaseStorage Constants\nexport const DB_NAME = \"msal.db\";\nexport const DB_VERSION = 1;\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, IPerformanceClient, JoseHeader, Logger, PerformanceEvents, PkceCodes, SignedHttpRequest, SignedHttpRequestParameters } from \"@azure/msal-common\";\nimport { GuidGenerator } from \"./GuidGenerator\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { Base64Decode } from \"../encode/Base64Decode\";\nimport { PkceGenerator } from \"./PkceGenerator\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { AsyncMemoryStorage } from \"../cache/AsyncMemoryStorage\";\n\nexport type CachedKeyPair = {\n    publicKey: CryptoKey,\n    privateKey: CryptoKey,\n    requestMethod?: string,\n    requestUri?: string\n};\n\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nexport type CryptoKeyStore = {\n    asymmetricKeys: AsyncMemoryStorage<CachedKeyPair>;\n    symmetricKeys: AsyncMemoryStorage<CryptoKey>;\n};\n\nexport enum CryptoKeyStoreNames {\n    asymmetricKeys = \"asymmetricKeys\",\n    symmetricKeys = \"symmetricKeys\"\n}\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n\n    private browserCrypto: BrowserCrypto;\n    private guidGenerator: GuidGenerator;\n    private b64Encode: Base64Encode;\n    private b64Decode: Base64Decode;\n    private pkceGenerator: PkceGenerator;\n    private logger: Logger;\n\n    /**\n     * CryptoOps can be used in contexts outside a PCA instance,\n     * meaning there won't be a performance manager available.\n     */\n    private performanceClient: IPerformanceClient | undefined;\n\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\n    private static EXTRACTABLE: boolean = true;\n    private cache: CryptoKeyStore;\n\n    constructor(logger: Logger, performanceClient?: IPerformanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        this.browserCrypto = new BrowserCrypto(this.logger);\n        this.b64Encode = new Base64Encode();\n        this.b64Decode = new Base64Decode();\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\n        this.cache = {\n            asymmetricKeys: new AsyncMemoryStorage<CachedKeyPair>(this.logger, CryptoKeyStoreNames.asymmetricKeys),\n            symmetricKeys: new AsyncMemoryStorage<CryptoKey>(this.logger, CryptoKeyStoreNames.symmetricKeys)\n        };\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return this.guidGenerator.generateGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input \n     */\n    base64Encode(input: string): string {\n        return this.b64Encode.encode(input);\n    }    \n    \n    /**\n     * Decodes input string from base64.\n     * @param input \n     */\n    base64Decode(input: string): string {\n        return this.b64Decode.decode(input);\n    }\n\n    /**\n     * Generates PKCE codes used in Authorization Code Flow.\n     */\n    async generatePkceCodes(): Promise<PkceCodes> {\n        return this.pkceGenerator.generateCodes();\n    }\n\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string> {\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\n\n        // Generate Keypair\n        const keyPair: CryptoKeyPair = await this.browserCrypto.generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\n\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.publicKey);\n        \n        const pubKeyThumprintObj: JsonWebKey = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n\n        };\n\n        const publicJwkString: string = BrowserCrypto.getJwkString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.privateKey);\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey: CryptoKey = await this.browserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(\n            publicJwkHash, \n            {\n                privateKey: unextractablePrivateKey,\n                publicKey: keyPair.publicKey,\n                requestMethod: request.resourceRequestMethod,\n                requestUri: request.resourceRequestUri\n            }\n        );\n\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.endMeasurement({\n                success: true\n            });\n        }\n\n        return publicJwkHash;\n    }\n\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid \n     */\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore(): Promise<boolean> {\n        try {\n            this.logger.verbose(\"Deleting in-memory and persistent asymmetric key stores\");\n            await this.cache.asymmetricKeys.clear();\n            this.logger.verbose(\"Successfully deleted asymmetric key stores\");\n            this.logger.verbose(\"Deleting in-memory and persistent symmetric key stores\");\n            await this.cache.symmetricKeys.clear();\n            this.logger.verbose(\"Successfully deleted symmetric key stores\");\n            return true;\n        } catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\n            } else {\n                this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n            \n            return false;\n        }\n    }\n\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload \n     * @param kid \n     */\n    async signJwt(payload: SignedHttpRequest, kid: string, correlationId?: string): Promise<string> {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsSignJwt, correlationId);\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n        \n        if (!cachedKeyPair) {\n            throw BrowserAuthError.createSigningKeyNotFoundInStorageError(kid);\n        }\n\n        // Get public key as JWK\n        const publicKeyJwk = await this.browserCrypto.exportJwk(cachedKeyPair.publicKey);\n        const publicKeyJwkString = BrowserCrypto.getJwkString(publicKeyJwk);\n        \n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = this.b64Encode.urlEncode(JSON.stringify({ kid: kid }));\n\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({ kid: encodedKeyIdThumbprint, alg: publicKeyJwk.alg });\n        const encodedShrHeader = this.b64Encode.urlEncode(shrHeader);\n\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString)\n        };\n        const encodedPayload = this.b64Encode.urlEncode(JSON.stringify(payload));\n\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n\n        // Sign token\n        const tokenBuffer = BrowserStringUtils.stringToArrayBuffer(tokenString);\n        const signatureBuffer = await this.browserCrypto.sign(cachedKeyPair.privateKey, tokenBuffer);\n        const encodedSignature = this.b64Encode.urlEncodeArr(new Uint8Array(signatureBuffer));\n\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n\n        if (signJwtMeasurement) {\n            signJwtMeasurement.endMeasurement({\n                success: true\n            });\n        }\n\n        return signedJwt;\n    }\n\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText: string): Promise<string> {\n        const hashBuffer: ArrayBuffer = await this.browserCrypto.sha256Digest(plainText);\n        const hashBytes = new Uint8Array(hashBuffer);\n        return this.b64Encode.urlEncodeArr(hashBytes);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: \"unexpected_error\",\n        desc: \"Unexpected error in authentication.\"\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\"\n    }\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Creates an error that is thrown when something unexpected happens in the library.\n     * @param errDesc\n     */\n    static createUnexpectedError(errDesc: string): AuthError {\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n    }\n\n    /**\n     * Creates an error for post request failures.\n     * @param errDesc \n     * @returns \n     */\n    static createPostRequestFailed(errDesc: string): AuthError {\n        return new AuthError(AuthErrorMessage.postRequestFailed.code, `${AuthErrorMessage.postRequestFailed.desc}: ${errDesc}`);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const JoseHeaderErrorMessage = {\n    missingKidError: {\n        code: \"missing_kid_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\"\n    },\n    missingAlgError: {\n        code: \"missing_alg_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\"\n    },\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class JoseHeaderError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when keyId isn't set on JOSE header.\n     */\n    static createMissingKidError(): JoseHeaderError {\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingKidError.code, JoseHeaderErrorMessage.missingKidError.desc);\n    }\n\n    /**\n     * Creates an error thrown when algorithm isn't set on JOSE header.\n     */\n    static createMissingAlgError(): JoseHeaderError {\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingAlgError.code, JoseHeaderErrorMessage.missingAlgError.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { JoseHeaderError } from \"../error/JoseHeaderError\";\nimport { JsonTypes } from \"../utils/Constants\";\n\nexport type JoseHeaderOptions = {\n    typ?: JsonTypes,\n    alg?: string,\n    kid?: string\n};\n\nexport class JoseHeader {\n    public typ?: JsonTypes;\n    public alg?: string;\n    public kid?: string;\n\n    constructor (options: JoseHeaderOptions) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions \n     * @returns \n     */\n    static getShrHeaderString(shrHeaderOptions: JoseHeaderOptions): string {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw JoseHeaderError.createMissingKidError();\n        }\n\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw JoseHeaderError.createMissingAlgError();\n        }\n\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type JWT, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonTypes.Jwt,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg\n        });\n\n        return JSON.stringify(shrHeader);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class for math specific functions in browser.\n */\nexport class MathUtils {\n\n    /**\n     * Decimal to Hex\n     *\n     * @param num\n     */\n    static decimalToHex(num: number): string {\n        let hex: string = num.toString(16);\n        while (hex.length < 2) {\n            hex = \"0\" + hex;\n        }\n        return hex;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants , IGuidGenerator } from \"@azure/msal-common\";\nimport { MathUtils } from \"../utils/MathUtils\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\nexport class GuidGenerator implements IGuidGenerator {\n\n    // browser crypto object used to generate random values\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.cryptoObj = cryptoObj;\n    }\n\n    /*\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\n     * pseudo-random numbers.\n     * The algorithm is as follows:\n     *     Set the two most significant bits (bits 6 and 7) of the\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\n     *     Set the four most significant bits (bits 12 through 15) of the\n     *        time_hi_and_version field to the 4-bit version number from\n     *        Section 4.1.3. Version4\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\n     *     values.\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\n     * time-low               = 4hexOctet\n     * time-mid               = 2hexOctet\n     * time-high-and-version  = 2hexOctet\n     * clock-seq-and-reserved = hexOctet:\n     * clock-seq-low          = hexOctet\n     * node                   = 6hexOctet\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\n     * y values are 8, 9, A, B\n     */\n    generateGuid(): string {\n        try {\n            const buffer: Uint8Array = new Uint8Array(16);\n            this.cryptoObj.getRandomValues(buffer);\n\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\n\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\n        }\n        catch (err) {\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n            const hex: string = \"0123456789abcdef\";\n            let r: number = 0;\n            let guidResponse: string = Constants.EMPTY_STRING;\n            for (let i: number = 0; i < 36; i++) {\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n                    // each x and y needs to be random\n                    r = Math.random() * 16 | 0;\n                }\n                if (guidHolder[i] === \"x\") {\n                    guidResponse += hex[r];\n                } else if (guidHolder[i] === \"y\") {\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n                    r |= 0x8; // set pos 3 to 1 as 1???\n                    guidResponse += hex[r];\n                } else {\n                    guidResponse += guidHolder[i];\n                }\n            }\n            return guidResponse;\n        }\n    }\n\n    /**\n     * verifies if a string is  GUID\n     * @param guid\n     */\n    isGuid(guid: string): boolean {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"@azure/msal-common\";\n\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class BrowserStringUtils {\n\n    /**\n     * Converts string to Uint8Array\n     * @param sDOMStr \n     */\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\n        let nChr;\n        let nArrLen = 0;\n        const nStrLen = sDOMStr.length;\n        /* mapping... */\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n            nChr = sDOMStr.charCodeAt(nMapIdx);\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n        }\n\n        const aBytes = new Uint8Array(nArrLen);\n\n        /* transcription... */\n\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n            nChr = sDOMStr.charCodeAt(nChrIdx);\n            if (nChr < 128) {\n                /* one byte */\n                aBytes[nIdx++] = nChr;\n            } else if (nChr < 0x800) {\n                /* two bytes */\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x10000) {\n                /* three bytes */\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x200000) {\n                /* four bytes */\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x4000000) {\n                /* five bytes */\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else /* if (nChr <= 0x7fffffff) */ {\n                /* six bytes */\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n        }\n\n        return aBytes;      \n    }\n\n    /**\n     * Converst string to ArrayBuffer\n     * @param dataString \n     */\n    static stringToArrayBuffer(dataString: string): ArrayBuffer {\n        const data = new ArrayBuffer(dataString.length);\n        const dataView = new Uint8Array(data);\n        for (let i: number = 0; i < dataString.length; i++) {\n            dataView[i] = dataString.charCodeAt(i);\n        }\n        return data;\n    }\n\n    /**\n     * Converts Uint8Array to a string\n     * @param aBytes \n     */\n    static utf8ArrToString (aBytes: Uint8Array): string {\n        let sView = Constants.EMPTY_STRING;\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            nPart = aBytes[nIdx];\n            sView += String.fromCharCode(\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\n                                    : /* nPart < 127 ? */ /* one byte */\n                                    nPart\n            );\n        }\n        return sView;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"@azure/msal-common\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Encode {\n    \n    /**\n     * Returns URL Safe b64 encoded string from a plaintext string.\n     * @param input \n     */\n    urlEncode(input: string): string {\n        return encodeURIComponent(this.encode(input)\n            .replace(/=/g, Constants.EMPTY_STRING)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\"));\n    }\n\n    /**\n     * Returns URL Safe b64 encoded string from an int8Array.\n     * @param inputArr \n     */\n    urlEncodeArr(inputArr: Uint8Array): string {\n        return this.base64EncArr(inputArr)\n            .replace(/=/g, Constants.EMPTY_STRING)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n\n    /**\n     * Returns b64 encoded string from plaintext string.\n     * @param input \n     */\n    encode(input: string): string {\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\n        return this.base64EncArr(inputUtf8Arr);\n    }\n\n    /**\n     * Base64 encode byte array\n     * @param aBytes \n     */\n    private base64EncArr(aBytes: Uint8Array): string {  \n        const eqLen = (3 - (aBytes.length % 3)) % 3;\n        let sB64Enc = Constants.EMPTY_STRING;\n      \n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n            nMod3 = nIdx % 3;\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\n            /*\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\n             */\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n                sB64Enc += String.fromCharCode(\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \n                    this.uint6ToB64(nUint24 >>> 12 & 63), \n                    this.uint6ToB64(nUint24 >>> 6 & 63), \n                    this.uint6ToB64(nUint24 & 63)\n                );\n                nUint24 = 0;\n            }\n        }\n\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n    }\n\n    /**\n     * Base64 string to array encoding helper\n     * @param nUint6 \n     */\n    private uint6ToB64 (nUint6: number): number {\n        return nUint6 < 26 ?\n            nUint6 + 65\n            : nUint6 < 52 ?\n                nUint6 + 71\n                : nUint6 < 62 ?\n                    nUint6 - 4\n                    : nUint6 === 62 ?\n                        43\n                        : nUint6 === 63 ?\n                            47\n                            :\n                            65;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"@azure/msal-common\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Decode {\n\n    /**\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\n     * @param input \n     */\n    decode(input: string): string {\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (encodedString.length % 4) {\n            case 0:\n                break;\n            case 2:\n                encodedString += \"==\";\n                break;\n            case 3:\n                encodedString += \"=\";\n                break;\n            default:\n                throw new Error(\"Invalid base64 string\");\n        }\n\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\n        return BrowserStringUtils.utf8ArrToString(inputUtf8Arr);\n    }\n\n    /**\n     * Decodes base64 into Uint8Array\n     * @param base64String \n     * @param nBlockSize \n     */\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, Constants.EMPTY_STRING);\n        const nInLen = sB64Enc.length;\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\n        const aBytes = new Uint8Array(nOutLen);\n\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n            nMod4 = nInIdx & 3;\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n                }\n                nUint24 = 0;\n            }\n        }\n\n        return aBytes;\n    }\n\n    /**\n     * Base64 string to array decoding helper\n     * @param charNum \n     */\n    private b64ToUint6(charNum: number): number {\n        return charNum > 64 && charNum < 91 ?\n            charNum - 65\n            : charNum > 96 && charNum < 123 ? \n                charNum - 71\n                : charNum > 47 && charNum < 58 ?\n                    charNum + 4\n                    : charNum === 43 ?\n                        62\n                        : charNum === 47 ?\n                            63\n                            :\n                            0;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: \"client_info_decoding_error\",\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\n    },\n    clientInfoEmptyError: {\n        code: \"client_info_empty_error\",\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\n    },\n    tokenParsingError: {\n        code: \"token_parsing_error\",\n        desc: \"Token cannot be parsed. Please review stack trace to determine root cause.\"\n    },\n    nullOrEmptyToken: {\n        code: \"null_or_empty_token\",\n        desc: \"The token is null or empty. Please review the trace to determine the root cause.\"\n    },\n    endpointResolutionError: {\n        code: \"endpoints_resolution_error\",\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\n    },\n    networkError: {\n        code: \"network_error\",\n        desc: \"Network request failed. Please check network trace to determine root cause.\"\n    },\n    unableToGetOpenidConfigError: {\n        code: \"openid_config_error\",\n        desc: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\"\n    },\n    hashNotDeserialized: {\n        code: \"hash_not_deserialized\",\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\n    },\n    blankGuidGenerated: {\n        code: \"blank_guid_generated\",\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\n    },\n    invalidStateError: {\n        code: \"invalid_state\",\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\n    },\n    stateMismatchError: {\n        code: \"state_mismatch\",\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\n    },\n    stateNotFoundError: {\n        code: \"state_not_found\",\n        desc: \"State not found\"\n    },\n    nonceMismatchError: {\n        code: \"nonce_mismatch\",\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\n    },\n    nonceNotFoundError: {\n        code: \"nonce_not_found\",\n        desc: \"nonce not found\"\n    },\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\n    },\n    multipleMatchingTokens: {\n        code: \"multiple_matching_tokens\",\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\n    },\n    multipleMatchingAccounts: {\n        code: \"multiple_matching_accounts\",\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\n    },\n    multipleMatchingAppMetadata: {\n        code: \"multiple_matching_appMetadata\",\n        desc: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\"\n    },\n    tokenRequestCannotBeMade: {\n        code: \"request_cannot_be_made\",\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\n    },\n    appendEmptyScopeError: {\n        code: \"cannot_append_empty_scope\",\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\n    },\n    removeEmptyScopeError: {\n        code: \"cannot_remove_empty_scope\",\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\n    },\n    appendScopeSetError: {\n        code: \"cannot_append_scopeset\",\n        desc: \"Cannot append ScopeSet due to error.\"\n    },\n    emptyInputScopeSetError: {\n        code: \"empty_input_scopeset\",\n        desc: \"Empty input ScopeSet cannot be processed.\"\n    },\n    DeviceCodePollingCancelled: {\n        code: \"device_code_polling_cancelled\",\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\n    },\n    DeviceCodeExpired: {\n        code: \"device_code_expired\",\n        desc: \"Device code is expired.\"\n    },\n    DeviceCodeUnknownError: {\n        code: \"device_code_unknown_error\",\n        desc: \"Device code stopped polling for unknown reasons.\"\n    },\n    NoAccountInSilentRequest: {\n        code: \"no_account_in_silent_request\",\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\n    },\n    invalidCacheRecord: {\n        code: \"invalid_cache_record\",\n        desc: \"Cache record object was null or undefined.\"\n    },\n    invalidCacheEnvironment: {\n        code: \"invalid_cache_environment\",\n        desc: \"Invalid environment when attempting to create cache entry\"\n    },\n    noAccountFound: {\n        code: \"no_account_found\",\n        desc: \"No account found in cache for given key.\"\n    },\n    CachePluginError: {\n        code: \"no cache plugin set on CacheManager\",\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\n    },\n    noCryptoObj: {\n        code: \"no_crypto_object\",\n        desc: \"No crypto object detected. This is required for the following operation: \"\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\"\n    },\n    unexpectedAccountType: {\n        code: \"unexpected_account_type\",\n        desc: \"Unexpected account type.\"\n    },\n    unexpectedCredentialType: {\n        code: \"unexpected_credential_type\",\n        desc: \"Unexpected credential type.\"\n    },\n    invalidAssertion: {\n        code: \"invalid_assertion\",\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\"\n    },\n    invalidClientCredential: {\n        code: \"invalid_client_credential\",\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\"\n    },\n    tokenRefreshRequired: {\n        code: \"token_refresh_required\",\n        desc: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\"\n    },\n    userTimeoutReached: {\n        code: \"user_timeout_reached\",\n        desc: \"User defined timeout for device code polling reached\",\n    },\n    tokenClaimsRequired: {\n        code: \"token_claims_cnf_required_for_signedjwt\",\n        desc: \"Cannot generate a POP jwt if the token_claims are not populated\"\n    },\n    noAuthorizationCodeFromServer: {\n        code: \"authorization_code_missing_from_server_response\",\n        desc: \"Server response does not contain an authorization code to proceed\"\n    },\n    noAzureRegionDetected: {\n        code: \"no_azure_region_detected\",\n        desc: \"No azure region was detected and no fallback was made available\"\n    },\n    accessTokenEntityNullError: {\n        code: \"access_token_entity_null\",\n        desc: \"Access token entity is null, please check logs and cache to ensure a valid access token is present.\"\n    },\n    bindingKeyNotRemovedError: {\n        code: \"binding_key_not_removed\",\n        desc: \"Could not remove the credential's binding key from storage.\"\n    },\n    logoutNotSupported: {\n        code: \"end_session_endpoint_not_supported\",\n        desc: \"Provided authority does not support logout.\"\n    },\n    keyIdMissing: {\n        code: \"key_id_missing\",\n        desc: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\"\n    }\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when client info object doesn't decode correctly.\n     * @param caughtError\n     */\n    static createClientInfoDecodingError(caughtError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code,\n            `${ClientAuthErrorMessage.clientInfoDecodingError.desc} Failed with error: ${caughtError}`);\n    }\n\n    /**\n     * Creates an error thrown if the client info is empty.\n     * @param rawClientInfo\n     */\n    static createClientInfoEmptyError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code,\n            `${ClientAuthErrorMessage.clientInfoEmptyError.desc}`);\n    }\n\n    /**\n     * Creates an error thrown when the id token extraction errors out.\n     * @param err\n     */\n    static createTokenParsingError(caughtExtractionError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenParsingError.code,\n            `${ClientAuthErrorMessage.tokenParsingError.desc} Failed with error: ${caughtExtractionError}`);\n    }\n\n    /**\n     * Creates an error thrown when the id token string is null or empty.\n     * @param invalidRawTokenString\n     */\n    static createTokenNullOrEmptyError(invalidRawTokenString: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyToken.code,\n            `${ClientAuthErrorMessage.nullOrEmptyToken.desc} Raw Token Value: ${invalidRawTokenString}`);\n    }\n\n    /**\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\n     */\n    static createEndpointDiscoveryIncompleteError(errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code,\n            `${ClientAuthErrorMessage.endpointResolutionError.desc} Detail: ${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the fetch client throws\n     */\n    static createNetworkError(endpoint: string, errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.networkError.code,\n            `${ClientAuthErrorMessage.networkError.desc} | Fetch client threw: ${errDetail} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Creates an error thrown when the openid-configuration endpoint cannot be reached or does not contain the required data\n     */\n    static createUnableToGetOpenidConfigError(errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unableToGetOpenidConfigError.code,\n            `${ClientAuthErrorMessage.unableToGetOpenidConfigError.desc} Attempted to retrieve endpoints from: ${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the hash cannot be deserialized.\n     * @param hashParamObj\n     */\n    static createHashNotDeserializedError(hashParamObj: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code,\n            `${ClientAuthErrorMessage.hashNotDeserialized.desc} Given Object: ${hashParamObj}`);\n    }\n\n    /**\n     * Creates an error thrown when the state cannot be parsed.\n     * @param invalidState\n     */\n    static createInvalidStateError(invalidState: string, errorString?: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code,\n            `${ClientAuthErrorMessage.invalidStateError.desc} Invalid State: ${invalidState}, Root Err: ${errorString}`);\n    }\n\n    /**\n     * Creates an error thrown when two states do not match.\n     */\n    static createStateMismatchError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code,\n            ClientAuthErrorMessage.stateMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the state is not present\n     * @param missingState\n     */\n    static createStateNotFoundError(missingState: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.stateNotFoundError.code,\n            `${ClientAuthErrorMessage.stateNotFoundError.desc}:  ${missingState}`);\n    }\n\n    /**\n     * Creates an error thrown when the nonce does not match.\n     */\n    static createNonceMismatchError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code,\n            ClientAuthErrorMessage.nonceMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the mnonce is not present\n     * @param missingNonce\n     */\n    static createNonceNotFoundError(missingNonce: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceNotFoundError.code,\n            `${ClientAuthErrorMessage.nonceNotFoundError.desc}:  ${missingNonce}`);\n    }\n\n    /**\n     * Throws error when multiple tokens are in cache.\n     */\n    static createMultipleMatchingTokensInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code,\n            `${ClientAuthErrorMessage.multipleMatchingTokens.desc}.`);\n    }\n\n    /**\n     * Throws error when multiple accounts are in cache for the given params\n     */\n    static createMultipleMatchingAccountsInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code,\n            ClientAuthErrorMessage.multipleMatchingAccounts.desc);\n    }\n\n    /**\n     * Throws error when multiple appMetada are in cache for the given clientId.\n     */\n    static createMultipleMatchingAppMetadataInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAppMetadata.code,\n            ClientAuthErrorMessage.multipleMatchingAppMetadata.desc);\n    }\n\n    /**\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\n     */\n    static createTokenRequestCannotBeMadeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\n    }\n\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createAppendEmptyScopeToSetError(givenScope: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, `${ClientAuthErrorMessage.appendEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createRemoveEmptyScopeFromSetError(givenScope: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, `${ClientAuthErrorMessage.removeEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n\n    /**\n     * Throws error when attempting to append null or empty ScopeSet.\n     * @param appendError\n     */\n    static createAppendScopeSetError(appendError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, `${ClientAuthErrorMessage.appendScopeSetError.desc} Detail Error: ${appendError}`);\n    }\n\n    /**\n     * Throws error if ScopeSet is null or undefined.\n     * @param givenScopeSet\n     */\n    static createEmptyInputScopeSetError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, `${ClientAuthErrorMessage.emptyInputScopeSetError.desc}`);\n    }\n\n    /**\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\n     */\n    static createDeviceCodeCancelledError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, `${ClientAuthErrorMessage.DeviceCodePollingCancelled.desc}`);\n    }\n\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeExpiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, `${ClientAuthErrorMessage.DeviceCodeExpired.desc}`);\n    }\n\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeUnknownError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeUnknownError.code, `${ClientAuthErrorMessage.DeviceCodeUnknownError.desc}`);\n    }\n\n    /**\n     * Throws error when silent requests are made without an account object\n     */\n    static createNoAccountInSilentRequestError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, `${ClientAuthErrorMessage.NoAccountInSilentRequest.desc}`);\n    }\n\n    /**\n     * Throws error when cache record is null or undefined.\n     */\n    static createNullOrUndefinedCacheRecord(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\n    }\n\n    /**\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\n     */\n    static createInvalidCacheEnvironmentError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\n    }\n\n    /**\n     * Throws error when account is not found in cache.\n     */\n    static createNoAccountFoundError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\n    }\n\n    /**\n     * Throws error if ICachePlugin not set on CacheManager.\n     */\n    static createCachePluginError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, `${ClientAuthErrorMessage.CachePluginError.desc}`);\n    }\n\n    /**\n     * Throws error if crypto object not found.\n     * @param operationName\n     */\n    static createNoCryptoObjectError(operationName: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, `${ClientAuthErrorMessage.noCryptoObj.desc}${operationName}`);\n    }\n\n    /**\n     * Throws error if cache type is invalid.\n     */\n    static createInvalidCacheTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, `${ClientAuthErrorMessage.invalidCacheType.desc}`);\n    }\n\n    /**\n     * Throws error if unexpected account type.\n     */\n    static createUnexpectedAccountTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, `${ClientAuthErrorMessage.unexpectedAccountType.desc}`);\n    }\n\n    /**\n     * Throws error if unexpected credential type.\n     */\n    static createUnexpectedCredentialTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, `${ClientAuthErrorMessage.unexpectedCredentialType.desc}`);\n    }\n\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidAssertionError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, `${ClientAuthErrorMessage.invalidAssertion.desc}`);\n    }\n\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidCredentialError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, `${ClientAuthErrorMessage.invalidClientCredential.desc}`);\n    }\n\n    /**\n     * Throws error if token cannot be retrieved from cache due to refresh being required.\n     */\n    static createRefreshRequiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRefreshRequired.code, ClientAuthErrorMessage.tokenRefreshRequired.desc);\n    }\n\n    /**\n     * Throws error if the user defined timeout is reached.\n     */\n    static createUserTimeoutReachedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.userTimeoutReached.code, ClientAuthErrorMessage.userTimeoutReached.desc);\n    }\n\n    /*\n     * Throws error if token claims are not populated for a signed jwt generation\n     */\n    static createTokenClaimsRequiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenClaimsRequired.code, ClientAuthErrorMessage.tokenClaimsRequired.desc);\n    }\n\n    /**\n     * Throws error when the authorization code is missing from the server response\n     */\n    static createNoAuthCodeInServerResponseError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noAuthorizationCodeFromServer.code, ClientAuthErrorMessage.noAuthorizationCodeFromServer.desc);\n    }\n\n    static createBindingKeyNotRemovedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.bindingKeyNotRemovedError.code, ClientAuthErrorMessage.bindingKeyNotRemovedError.desc);\n    }\n\n    /**\n     * Thrown when logout is attempted for an authority that doesnt have an end_session_endpoint\n     */\n    static createLogoutNotSupportedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.logoutNotSupported.code, ClientAuthErrorMessage.logoutNotSupported.desc);\n    }\n\n    /**\n     * Create an error when kid attribute is missing from a PoP token's cache record\n     */\n    static createKeyIdMissingError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.keyIdMissing.code, ClientAuthErrorMessage.keyIdMissing.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DecodedAuthToken } from \"../account/DecodedAuthToken\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * @hidden\n */\nexport class StringUtils {\n\n    /**\n     * decode a JWT\n     *\n     * @param authToken\n     */\n    static decodeAuthToken(authToken: string): DecodedAuthToken {\n        if (StringUtils.isEmpty(authToken)) {\n            throw ClientAuthError.createTokenNullOrEmptyError(authToken);\n        }\n        const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n        const matches = tokenPartsRegex.exec(authToken);\n        if (!matches || matches.length < 4) {\n            throw ClientAuthError.createTokenParsingError(`Given token is malformed: ${JSON.stringify(authToken)}`);\n        }\n        const crackedToken: DecodedAuthToken = {\n            header: matches[1],\n            JWSPayload: matches[2],\n            JWSSig: matches[3]\n        };\n        return crackedToken;\n    }\n\n    /**\n     * Check if a string is empty.\n     *\n     * @param str\n     */\n    static isEmpty(str?: string): boolean {\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\n    }\n\n    /**\n     * Check if stringified object is empty\n     * @param strObj \n     */\n    static isEmptyObj(strObj?: string): boolean {\n        if (strObj && !StringUtils.isEmpty(strObj)) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            } catch (e) {}\n        }\n        return true;\n    }\n\n    static startsWith(str: string, search: string): boolean {\n        return str.indexOf(search) === 0;\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\n    }\n\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject<T>(query: string): T {\n        const obj: {} = {};\n        const params = query.split(\"&\");\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj as T;\n    }\n\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr: Array<string>): Array<string> {\n        return arr.map(entry => entry.trim());\n    }\n\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\n        return arr.filter(entry => {\n            return !StringUtils.isEmpty(entry);\n        });\n    }\n\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper<T>(str: string): T | null {\n        try {\n            return JSON.parse(str) as T;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern: string, input: string): boolean {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        const regex: RegExp = new RegExp(pattern.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\*/g, \"[^ ]*\").replace(/\\?/g, \"\\\\\\?\")); // eslint-disable-line security/detect-non-literal-regexp\n\n        return regex.test(input);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: \"pkce_not_created\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\n    },\n    cryptoDoesNotExist: {\n        code: \"crypto_nonexistent\",\n        desc: \"The crypto object or function is not available.\"\n    },\n    httpMethodNotImplementedError: {\n        code: \"http_method_not_implemented\",\n        desc: \"The HTTP method given has not been implemented in this library.\"\n    },\n    emptyNavigateUriError: {\n        code: \"empty_navigate_uri\",\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n    },\n    hashEmptyError: {\n        code: \"hash_empty_error\",\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    hashDoesNotContainStateError: {\n        code: \"no_state_in_hash\",\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: \"hash_does_not_contain_known_properties\",\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    unableToParseStateError: {\n        code: \"unable_to_parse_state\",\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n    },\n    stateInteractionTypeMismatchError: {\n        code: \"state_interaction_type_mismatch\",\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\n    },\n    interactionInProgress: {\n        code: \"interaction_in_progress\",\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    popupWindowError: {\n        code: \"popup_window_error\",\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n    },\n    emptyWindowError: {\n        code: \"empty_window_error\",\n        desc: \"window.open returned null or undefined window object.\"\n    },\n    userCancelledError: {\n        code: \"user_cancelled\",\n        desc: \"User cancelled the flow.\"\n    },\n    monitorPopupTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    monitorIframeTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    redirectInIframeError: {\n        code: \"redirect_in_iframe\",\n        desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: \"block_iframe_reload\",\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    blockAcquireTokenInPopupsError: {\n        code: \"block_nested_popups\",\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n    },\n    iframeClosedPrematurelyError: {\n        code: \"iframe_closed_prematurely\",\n        desc: \"The iframe being monitored was closed prematurely.\"\n    },\n    silentLogoutUnsupportedError: {\n        code: \"silent_logout_unsupported\",\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\n    },\n    noAccountError: {\n        code: \"no_account_error\",\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n    },\n    silentPromptValueError: {\n        code: \"silent_prompt_value_error\",\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\n    },\n    noTokenRequestCacheError: {\n        code: \"no_token_request_cache_error\",\n        desc: \"No token request found in cache.\"\n    },\n    unableToParseTokenRequestCacheError: {\n        code: \"unable_to_parse_token_request_cache_error\",\n        desc: \"The cached token request could not be parsed.\"\n    },\n    noCachedAuthorityError: {\n        code: \"no_cached_authority_error\",\n        desc: \"No cached authority found.\"\n    },\n    authRequestNotSet: {\n        code: \"auth_request_not_set_error\",\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\"\n    },\n    notInBrowserEnvironment: {\n        code: \"non_browser_environment\",\n        desc: \"Login and token requests are not supported in non-browser environments.\"\n    },\n    databaseNotOpen: {\n        code: \"database_not_open\",\n        desc: \"Database is not open!\"\n    },\n    noNetworkConnectivity: {\n        code: \"no_network_connectivity\",\n        desc: \"No network connectivity. Check your internet connection.\"\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n    },\n    getRequestFailed: {\n        code: \"get_request_failed\",\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\n    },\n    failedToParseNetworkResponse: {\n        code: \"failed_to_parse_response\",\n        desc: \"Failed to parse network response. Check network trace.\"\n    },\n    unableToLoadTokenError: {\n        code: \"unable_to_load_token\",\n        desc: \"Error loading token to cache.\"\n    },\n    signingKeyNotFoundInStorage: {\n        code: \"crypto_key_not_found\",\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\"\n    },\n    authCodeRequired: {\n        code: \"auth_code_required\",\n        desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\n    },\n    authCodeOrNativeAccountRequired: {\n        code: \"auth_code_or_nativeAccountId_required\",\n        desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\n    },\n    databaseUnavailable: {\n        code: \"database_unavailable\",\n        desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: \"unable_to_acquire_token_from_native_platform\",\n        desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativeHandshakeTimeout: {\n        code: \"native_handshake_timeout\",\n        desc: \"Timed out while attempting to establish connection to browser extension\"\n    },\n    nativeExtensionNotInstalled: {\n        code: \"native_extension_not_installed\",\n        desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\n    },\n    nativeConnectionNotEstablished: {\n        code: \"native_connection_not_established\",\n        desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativeBrokerCalledBeforeInitialize: {\n        code: \"native_broker_called_before_initialize\",\n        desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativePromptNotSupported: {\n        code: \"native_prompt_not_supported\",\n        desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n\n    /**\n     * Creates an error thrown when PKCE is not implemented.\n     * @param errDetail\n     */\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the crypto object is unavailable.\n     * @param errDetail\n     */\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\n     * @param method\n     */\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\n    }\n\n    /**\n     * Creates an error thrown when the navigation URI is empty.\n     */\n    static createEmptyNavigationUriError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     * @param hashValue\n     */\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createHashDoesNotContainStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value does not contain known properties\n     */\n    static createHashDoesNotContainKnownPropertiesError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createUnableToParseStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\n     */\n    static createStateInteractionTypeMismatchError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\n     */\n    static createInteractionInProgressError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n    }\n\n    /**\n     * Creates an error thrown when the popup window could not be opened.\n     * @param errDetail\n     */\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n    }\n\n    /**\n     * Creates an error thrown when window.open returns an empty window object.\n     * @param errDetail\n     */\n    static createEmptyWindowCreatedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the user closes a popup.\n     */\n    static createUserCancelledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\n            BrowserAuthErrorMessage.userCancelledError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\n     */\n    static createMonitorPopupTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code,\n            BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\n     */\n    static createMonitorIframeTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code,\n            BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\n     * @param windowParentCheck\n     */\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code,\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\n    }\n\n    /**\n     * Creates an error thrown when an auth reload is done inside an iframe.\n     */\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a popup attempts to call an acquireToken API\n     * @returns\n     */\n    static createBlockAcquireTokenInPopupsError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code,\n            BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n    }\n\n    /**\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\n     */\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\n     */\n    static createSilentLogoutUnsupportedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\n     */\n    static createNoAccountError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\n     */\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\n    }\n\n    /**\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\n     */\n    static createUnableToParseTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the token request could not be retrieved from the cache\n     */\n    static createNoTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\n     */\n    static createAuthRequestNotSetError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code,\n            BrowserAuthErrorMessage.authRequestNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the authority could not be retrieved from the cache\n     */\n    static createNoCachedAuthorityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code,\n            BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n    }\n\n    /**\n     * Creates an error thrown if cache type is invalid.\n     */\n    static createInvalidCacheTypeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\n    }\n\n    /**\n     * Create an error thrown when login and token requests are made from a non-browser environment\n     */\n    static createNonBrowserEnvironmentError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n    }\n\n    /**\n     * Create an error thrown when indexDB database is not open\n     */\n    static createDatabaseNotOpenError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to no internet\n     */\n    static createNoNetworkConnectivityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\n     */\n    static createPostRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\n     */\n    static createGetRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when network client fails to parse network response\n     */\n    static createFailedToParseNetworkResponseError(endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when the necessary information is not available to sideload tokens\n     */\n    static createUnableToLoadTokenError(errorDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\n    }\n\n    /**\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\n     */\n    static createSigningKeyNotFoundInStorageError(keyId: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\n    }\n\n    /**\n     * Create an error when an authorization code is required but not provided\n     */\n    static createAuthCodeRequiredError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\n    }\n\n    /**\n     * Create an error when an authorization code or native account ID is required but not provided\n     */\n    static createAuthCodeOrNativeAccountIdRequiredError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\n    }\n\n    /**\n     * Create an error when IndexedDB is unavailable\n     */\n    static createDatabaseUnavailableError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n    }\n\n    /**\n     * Create an error when native token acquisition is not possible\n     */\n    static createUnableToAcquireTokenFromNativePlatformError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\n    }\n\n    /**\n     * Create an error thrown when Handshake with browser extension times out\n     */\n    static createNativeHandshakeTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\n    }\n\n    /**\n     * Create an error thrown when browser extension is not installed\n     */\n    static createNativeExtensionNotInstalledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\n    }\n\n    /**\n     * Create an error when native connection has not been established\n     * @returns\n     */\n    static createNativeConnectionNotEstablishedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\n    }\n\n    /**\n     * Create an error thrown when the initialize function hasn't been called\n     */\n    static createNativeBrokerCalledBeforeInitialize(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\n    }\n\n    /**\n     * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\n     * These requests must go through eSTS to ensure eSTS is aware of the new account\n     */\n    static createNativePromptParameterNotSupportedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { PkceCodes } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\n\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n\n/**\n * Class which exposes APIs to generate PKCE codes and code verifiers.\n */\nexport class PkceGenerator {\n\n    private base64Encode: Base64Encode;\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.base64Encode = new Base64Encode();\n        this.cryptoObj = cryptoObj;\n    }\n\n    /**\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n     */\n    async generateCodes(): Promise<PkceCodes> {\n        const codeVerifier = this.generateCodeVerifier();\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\n        return {\n            verifier: codeVerifier,\n            challenge: codeChallenge\n        };\n    }\n\n    /**\n     * Generates a random 32 byte buffer and returns the base64\n     * encoded string to be used as a PKCE Code Verifier\n     */\n    private generateCodeVerifier(): string {\n        try {\n            // Generate random values as utf-8\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n            this.cryptoObj.getRandomValues(buffer);\n            // encode verifier as base64\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncodeArr(buffer);\n            return pkceCodeVerifierB64;\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n\n    /**\n     * Creates a base64 encoded PKCE Code Challenge string from the\n     * hash created from the PKCE Code Verifier supplied\n     */\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\n        try {\n            // hashed verifier\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\n            // encode hash as base64\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\nimport { Logger } from \"..\";\nimport { Constants } from \"@azure/msal-common\";\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\n\n/**\n * This class implements functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\nexport class BrowserCrypto {\n\n    private _keygenAlgorithmOptions: RsaHashedKeyGenParams;\n    private logger: Logger;\n\n    constructor(logger: Logger) {\n        this.logger = logger;\n        \n        if (!(this.hasCryptoAPI())) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\n        }\n\n        this._keygenAlgorithmOptions = {\n            name: PKCS1_V15_KEYGEN_ALG,\n            hash: S256_HASH_ALG,\n            modulusLength: MODULUS_LENGTH,\n            publicExponent: PUBLIC_EXPONENT\n        };\n    }\n\n    /**\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n     * @param dataString \n     */\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\n\n        return this.hasIECrypto() ? this.getMSCryptoDigest(S256_HASH_ALG, data) : this.getSubtleCryptoDigest(S256_HASH_ALG, data);\n    }\n\n    /**\n     * Populates buffer with cryptographically random values.\n     * @param dataBuffer \n     */\n    getRandomValues(dataBuffer: Uint8Array): void {\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\n        if (!cryptoObj.getRandomValues) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\n        }\n        cryptoObj.getRandomValues(dataBuffer);\n    }\n\n    /**\n     * Generates a keypair based on current keygen algorithm config.\n     * @param extractable \n     * @param usages \n     */\n    async generateKeyPair(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\n        return (\n            this.hasIECrypto() ? \n                this.msCryptoGenerateKey(extractable, usages) \n                : window.crypto.subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages)\n        ) as Promise<CryptoKeyPair>;\n    }\n\n    /**\n     * Export key as Json Web Key (JWK)\n     * @param key \n     * @param format \n     */\n    async exportJwk(key: CryptoKey): Promise<JsonWebKey> {\n        return this.hasIECrypto() ? this.msCryptoExportJwk(key) : window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\n    }\n\n    /**\n     * Imports key as Json Web Key (JWK), can set extractable and usages.\n     * @param key \n     * @param format \n     * @param extractable \n     * @param usages \n     */\n    async importJwk(key: JsonWebKey, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\n        const keyString = BrowserCrypto.getJwkString(key);\n        const keyBuffer = BrowserStringUtils.stringToArrayBuffer(keyString);\n\n        return this.hasIECrypto() ? \n            this.msCryptoImportKey(keyBuffer, extractable, usages) \n            : window.crypto.subtle.importKey(KEY_FORMAT_JWK, key, this._keygenAlgorithmOptions, extractable, usages);\n    }\n\n    /**\n     * Signs given data with given key\n     * @param key \n     * @param data \n     */\n    async sign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\n        return this.hasIECrypto() ?\n            this.msCryptoSign(key, data)\n            : window.crypto.subtle.sign(this._keygenAlgorithmOptions, key, data);\n    }\n\n    /**\n     * Check whether IE crypto or other browser cryptography is available.\n     */\n    private hasCryptoAPI(): boolean {\n        return this.hasIECrypto() || this.hasBrowserCrypto();\n    }\n\n    /**\n     * Checks whether IE crypto (AKA msCrypto) is available.\n     */\n    private hasIECrypto(): boolean {\n        return \"msCrypto\" in window;\n    }\n\n    /**\n     * Check whether browser crypto is available.\n     */\n    private hasBrowserCrypto(): boolean {\n        return \"crypto\" in window;\n    }\n\n    /**\n     * Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return window.crypto.subtle.digest(algorithm, data);\n    }\n\n    /**\n     * IE Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\n                resolve(e.target.result);\n            });\n            digestOperation.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for generating a keypair\n     * @param extractable \n     * @param usages \n     */\n    private async msCryptoGenerateKey(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msGenerateKey = window[\"msCrypto\"].subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages);\n            msGenerateKey.addEventListener(\"complete\", (e: { target: { result: CryptoKeyPair | PromiseLike<CryptoKeyPair>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msGenerateKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for exportKey\n     * @param key \n     * @param format \n     */\n    private async msCryptoExportJwk(key: CryptoKey): Promise<JsonWebKey> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msExportKey = window[\"msCrypto\"].subtle.exportKey(KEY_FORMAT_JWK, key);\n            msExportKey.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer; }; }) => {\n                const resultBuffer: ArrayBuffer = e.target.result;\n\n                const resultString = BrowserStringUtils.utf8ArrToString(new Uint8Array(resultBuffer))\n                    .replace(/\\r/g, Constants.EMPTY_STRING)\n                    .replace(/\\n/g, Constants.EMPTY_STRING)\n                    .replace(/\\t/g, Constants.EMPTY_STRING)\n                    .split(\" \").join(Constants.EMPTY_STRING)\n                    .replace(\"\\u0000\", Constants.EMPTY_STRING);\n\n                try {\n                    resolve(JSON.parse(resultString));\n                } catch (e) {\n                    reject(e);\n                }\n            });\n\n            msExportKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for importKey\n     * @param key \n     * @param format \n     * @param extractable \n     * @param usages \n     */\n    private async msCryptoImportKey(keyBuffer: ArrayBuffer, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msImportKey = window[\"msCrypto\"].subtle.importKey(KEY_FORMAT_JWK, keyBuffer, this._keygenAlgorithmOptions, extractable, usages);\n            msImportKey.addEventListener(\"complete\", (e: { target: { result: CryptoKey | PromiseLike<CryptoKey>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msImportKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for sign JWT\n     * @param key \n     * @param data \n     */\n    private async msCryptoSign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msSign = window[\"msCrypto\"].subtle.sign(this._keygenAlgorithmOptions, key, data);\n            msSign.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msSign.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Returns stringified jwk.\n     * @param jwk \n     */\n    static getJwkString(jwk: JsonWebKey): string {\n        return JSON.stringify(jwk, Object.keys(jwk).sort());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { DB_NAME, DB_TABLE_NAME, DB_VERSION } from \"../utils/BrowserConstants\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\n\ninterface IDBOpenDBRequestEvent extends Event {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBRequestEvent extends Event {\n    target: IDBRequest & EventTarget;\n}\n\ninterface IDBDatabaseInfo {\n    name?: string;\n    version?: number;\n}\n\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\n    private db: IDBDatabase|undefined;\n    private dbName: string;\n    private tableName: string;\n    private version: number;\n    private dbOpen: boolean;\n\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\"upgradeneeded\", (e: IDBVersionChangeEvent) => {\n                const event = e as IDBOpenOnUpgradeNeededEvent;\n                event.target.result.createObjectStore(this.tableName);\n            });\n            openDB.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBOpenDBRequestEvent;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\",  () => reject(BrowserAuthError.createDatabaseUnavailableError()));\n        });\n    }\n\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection(): void {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n\n    /**\n     * Opens database if it's not already open\n     */\n    private async validateDbIsOpen(): Promise<void> {\n        if (!this.dbOpen) {\n            return await this.open();\n        }\n    }\n\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key \n     */\n    async getItem(key: string): Promise<T | null> {\n        await this.validateDbIsOpen();\n        return new Promise<T>((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n            \n            dbGet.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGet.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key \n     * @param payload \n     */\n    async setItem(key: string, payload: T): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n\n            const objectStore = transaction.objectStore(this.tableName);\n\n            const dbPut = objectStore.put(payload, key);\n\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys(): Promise<string[]> {\n        await this.validateDbIsOpen();\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGetKeys.addEventListener(\"error\",  (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * \n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key: string): Promise<boolean> {\n        await this.validateDbIsOpen();\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n\n            dbContainsKey.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase(): Promise<boolean> {\n        // Check if database being deleted exists\n\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n        \n        // @ts-ignore\n        const existingDatabases = await window.indexedDB.databases();\n        const database = existingDatabases.find((database: IDBDatabaseInfo) => database.name === DB_NAME );\n\n        // If database exists, delete it\n        if (database) {\n            return new Promise<boolean>((resolve: Function, reject: Function) => {\n                const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n                deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n                deleteDbRequest.addEventListener(\"error\", () => reject(false));\n            });\n        }\n\n        // Database doesn't exist, return true\n        return true;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear() :void {\n        this.cache.clear();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\nimport { DatabaseStorage } from \"./DatabaseStorage\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\n\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\n    private inMemoryCache: MemoryStorage<T>;\n    private indexedDBCache: DatabaseStorage<T>;\n    private logger: Logger;\n    private storeName: string;\n\n    constructor(logger: Logger, storeName: string) {\n        this.inMemoryCache = new MemoryStorage<T>();\n        this.indexedDBCache = new DatabaseStorage<T>();\n        this.logger = logger;\n        this.storeName = storeName;\n    }\n\n    private handleDatabaseAccessError(error: unknown): void {\n        if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.databaseUnavailable.code) {\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\n        } else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key \n     */\n    async getItem(key: string): Promise<T | null> {\n        const item = this.inMemoryCache.getItem(key);\n        if(!item) {\n            try {\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.getItem(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key \n     * @param value \n     */\n    async setItem(key: string, value: T): Promise<void> {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key \n     */\n    async removeItem(key: string): Promise<void> {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the \n     * asynchronous storage object.\n     */\n    async getKeys(): Promise<string[]> {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\n                return await this.indexedDBCache.getKeys();\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key \n     */\n    async containsKey(key: string): Promise<boolean> {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if(!containsKey) {\n            try {\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.containsKey(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n\n    /**\n     * Clears in-memory Map and tries to delete the IndexedDB database.\n     */\n    async clear(): Promise<boolean> {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore ${this.storeName} deleted`);\n        this.logger.verbose(`Deleting persistent keystore ${this.storeName}`);\n        \n        try {\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            \n            if (dbDeleted) {\n                this.logger.verbose(`Persistent keystore ${this.storeName} deleted`);\n            }\n            \n            return dbDeleted;\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { LoggerOptions } from \"../config/ClientConfiguration\";\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * Options for logger messages.\n */\nexport type LoggerMessageOptions = {\n    logLevel: LogLevel,\n    containsPii?: boolean,\n    context?: string,\n    correlationId?: string\n};\n\n/**\n * Log message level.\n */\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose,\n    Trace\n}\n\n/**\n * Callback to send the messages to.\n */\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nexport class Logger {\n\n    // Correlation ID for request, usually set by user.\n    private correlationId: string;\n\n    // Current log level, defaults to info.\n    private level: LogLevel = LogLevel.Info;\n\n    // Boolean describing whether PII logging is allowed.\n    private piiLoggingEnabled: boolean;\n\n    // Callback to send messages to.\n    private localCallback: ILoggerCallback;\n\n    // Package name implementing this logger\n    private packageName: string;\n\n    // Package version implementing this logger\n    private packageVersion: string;\n\n    constructor(loggerOptions: LoggerOptions, packageName?: string, packageVersion?: string) {\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        this.localCallback = loggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled || false;\n        this.level = typeof(loggerOptions.logLevel) === \"number\" ? loggerOptions.logLevel : LogLevel.Info;\n        this.correlationId = loggerOptions.correlationId || Constants.EMPTY_STRING;\n\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Create new Logger with existing configurations.\n     */\n    public clone(packageName: string, packageVersion: string, correlationId?: string): Logger {\n        return new Logger({loggerCallback: this.localCallback, piiLoggingEnabled: this.piiLoggingEnabled, logLevel: this.level, correlationId: correlationId || this.correlationId}, packageName, packageVersion);\n    }\n\n    /**\n     * Log message with required options.\n     */\n    private logMessage(logMessage: string, options: LoggerMessageOptions): void {\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        let logHeader: string;\n        if (!StringUtils.isEmpty(options.correlationId)) {\n            logHeader = `[${timestamp}] : [${options.correlationId}]`;\n        } else if (!StringUtils.isEmpty(this.correlationId)) {\n            logHeader = `[${timestamp}] : [${this.correlationId}]`;\n        } else {\n            logHeader = `[${timestamp}]`;\n        }\n\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level: LogLevel, message: string, containsPii: boolean): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * Logs error messages.\n     */\n    error(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs warning messages.\n     */\n    warning(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs info messages.\n     */\n    info(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs trace messages.\n     */\n    trace(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING\n        });\n    }\n\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled || false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Authority types supported by MSAL.\n */\nexport enum AuthorityType {\n    Default,\n    Adfs\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ApplicationTelemetry } from \"../../config/ClientConfiguration\";\nimport { Logger } from \"../../logger/Logger\";\nimport { InProgressPerformanceEvent, IPerformanceClient, PerformanceCallbackFunction } from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceEvent, PerformanceEvents, PerformanceEventStatus } from \"./PerformanceEvent\";\n\nexport abstract class PerformanceClient implements IPerformanceClient {\n    protected authority: string;\n    protected libraryName: string;\n    protected libraryVersion: string;\n    protected applicationTelemetry: ApplicationTelemetry;\n    protected clientId: string;\n    protected logger: Logger;\n    protected callbacks: Map<string, PerformanceCallbackFunction>;\n\n    /**\n     * Multiple events with the same correlation id.\n     * Double keyed by correlation id and event id.\n     * @protected\n     * @type {Map<string, Map<string, PerformanceEvent>>}\n     */\n    protected eventsByCorrelationId: Map<string, Map<string, PerformanceEvent>>;\n\n    /**\n     * Underlying performance measurements for each operation\n     *\n     * @protected\n     * @type {Map<string, IPerformanceMeasurement>}\n     */\n    protected measurementsById: Map<string, IPerformanceMeasurement>;\n\n    /**\n     * Creates an instance of PerformanceClient, \n     * an abstract class containing core performance telemetry logic.\n     *\n     * @constructor\n     * @param {string} clientId Client ID of the application\n     * @param {string} authority Authority used by the application\n     * @param {Logger} logger Logger used by the application\n     * @param {string} libraryName Name of the library\n     * @param {string} libraryVersion Version of the library\n     */\n    constructor(clientId: string, authority: string, logger: Logger, libraryName: string, libraryVersion: string, applicationTelemetry: ApplicationTelemetry) {\n        this.authority = authority;\n        this.libraryName = libraryName;\n        this.libraryVersion = libraryVersion;\n        this.applicationTelemetry = applicationTelemetry;\n        this.clientId = clientId;\n        this.logger = logger;\n        this.callbacks = new Map();\n        this.eventsByCorrelationId = new Map();\n        this.measurementsById = new Map();\n    }\n\n    /**\n     * Starts and returns an platform-specific implementation of IPerformanceMeasurement.\n     *\n     * @abstract\n     * @param {string} measureName\n     * @param {string} correlationId\n     * @returns {IPerformanceMeasurement}\n     */\n    abstract startPerformanceMeasuremeant(measureName: string, correlationId: string): IPerformanceMeasurement;\n\n    /**\n     * Generates and returns a unique id, typically a guid.\n     *\n     * @abstract\n     * @returns {string}\n     */\n    abstract generateId(): string;\n\n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {InProgressPerformanceEvent}\n     */\n    startMeasurement(measureName: PerformanceEvents, correlationId?: string): InProgressPerformanceEvent {\n        // Generate a placeholder correlation if the request does not provide one\n        const eventCorrelationId = correlationId || this.generateId();\n        if (!correlationId) {\n            this.logger.info(`PerformanceClient: No correlation id provided for ${measureName}, generating`, eventCorrelationId);\n        }\n\n        this.logger.trace(`PerformanceClient: Performance measurement started for ${measureName}`, eventCorrelationId);\n        const performanceMeasurement = this.startPerformanceMeasuremeant(measureName, eventCorrelationId);\n        performanceMeasurement.startMeasurement();\n\n        const inProgressEvent: PerformanceEvent = {\n            eventId: this.generateId(),\n            status: PerformanceEventStatus.InProgress,\n            authority: this.authority,\n            libraryName: this.libraryName,\n            libraryVersion: this.libraryVersion,\n            appName: this.applicationTelemetry?.appName,\n            appVersion: this.applicationTelemetry?.appVersion,\n            clientId: this.clientId,\n            name: measureName,\n            startTimeMs: Date.now(),\n            correlationId: eventCorrelationId,\n        };\n\n        // Store in progress events so they can be discarded if not ended properly\n        this.cacheEventByCorrelationId(inProgressEvent);\n        this.cacheMeasurement(inProgressEvent, performanceMeasurement);\n\n        // Return the event and functions the caller can use to properly end/flush the measurement\n        return {\n            endMeasurement: (event?: Partial<PerformanceEvent>): PerformanceEvent | null => {\n                const completedEvent = this.endMeasurement({\n                    // Initial set of event properties\n                    ...inProgressEvent,\n                    // Properties set when event ends\n                    ...event\n                });\n\n                if (completedEvent) {\n                    // Cache event so that submeasurements can be added downstream\n                    this.cacheEventByCorrelationId(completedEvent);\n                }\n\n                return completedEvent;\n            },\n            flushMeasurement: () => {\n                return this.flushMeasurements(inProgressEvent.name, inProgressEvent.correlationId);\n            },\n            discardMeasurement: () => {\n                return this.discardMeasurements(inProgressEvent.correlationId);\n            },\n            measurement: performanceMeasurement,\n            event: inProgressEvent\n        };\n\n    }\n\n    /**\n     * Stops measuring the performance for an operation. Should only be called directly by PerformanceClient classes,\n     * as consumers should instead use the function returned by startMeasurement.\n     *\n     * @param {PerformanceEvent} event\n     * @returns {(PerformanceEvent | null)}\n     */\n    endMeasurement(event: PerformanceEvent): PerformanceEvent | null {\n        const performanceMeasurement = this.measurementsById.get(event.eventId);\n        if (performanceMeasurement) {\n            // Immediately delete so that the same event isnt ended twice\n            this.measurementsById.delete(event.eventId);\n            performanceMeasurement.endMeasurement();\n            const durationMs = performanceMeasurement.flushMeasurement();\n            // null indicates no measurement was taken (e.g. needed performance APIs not present)\n            if (durationMs !== null) {\n                this.logger.trace(`PerformanceClient: Performance measurement ended for ${event.name}: ${durationMs} ms`, event.correlationId);\n\n                const completedEvent: PerformanceEvent = {\n                    // Allow duration to be overwritten when event ends (e.g. testing), but not status\n                    durationMs: Math.round(durationMs),\n                    ...event,\n                    status: PerformanceEventStatus.Completed,\n                };\n\n                return completedEvent;\n            } else {\n                this.logger.trace(\"PerformanceClient: Performance measurement not taken\", event.correlationId);\n            }\n        } else {\n            this.logger.trace(`PerformanceClient: Measurement not found for ${event.eventId}`, event.correlationId);\n        }\n\n        return null;\n    }\n\n    /**\n     * Upserts event into event cache.\n     * First key is the correlation id, second key is the event id.\n     * Allows for events to be grouped by correlation id,\n     * and to easily allow for properties on them to be updated.\n     *\n     * @private\n     * @param {PerformanceEvent} event\n     */\n    private cacheEventByCorrelationId(event: PerformanceEvent) {\n        const existingEvents = this.eventsByCorrelationId.get(event.correlationId);\n        if (existingEvents) {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} added/updated`, event.correlationId);\n            existingEvents.set(event.eventId, event);\n        } else {\n            this.logger.trace(`PerformanceClient: Performance measurement for ${event.name} started`, event.correlationId);\n            this.eventsByCorrelationId.set(event.correlationId, new Map().set(event.eventId, event));\n        }\n    }\n\n    /**\n     * Cache measurements by their id.\n     *\n     * @private\n     * @param {PerformanceEvent} event\n     * @param {IPerformanceMeasurement} measurement\n     */\n    private cacheMeasurement(event: PerformanceEvent, measurement: IPerformanceMeasurement) {\n        this.measurementsById.set(event.eventId, measurement);\n    }\n\n    /**\n     * Gathers and emits performance events for measurements taked for the given top-level API and correlation ID.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {string} correlationId\n     */\n    flushMeasurements(measureName: PerformanceEvents, correlationId: string): void {\n        this.logger.trace(`PerformanceClient: Performance measurements flushed for ${measureName}`, correlationId);\n        const eventsForCorrelationId = this.eventsByCorrelationId.get(correlationId);\n        if (eventsForCorrelationId) {\n            this.discardMeasurements(correlationId);\n\n            /*\n             * Manually end incomplete submeasurements to ensure there arent orphaned/never ending events.\n             * Incomplete submeasurements are likely an instrumentation bug that should be fixed.\n             * IE only supports Map.forEach.\n             */\n            const completedEvents: PerformanceEvent[] = [];\n            eventsForCorrelationId.forEach(event => {\n                if (event.name !== measureName && event.status !== PerformanceEventStatus.Completed) {\n                    this.logger.trace(`PerformanceClient: Incomplete submeasurement ${event.name} found for ${measureName}`, correlationId);\n\n                    const completedEvent = this.endMeasurement(event);\n                    if (completedEvent) {\n                        completedEvents.push(completedEvent);\n                    }\n                }\n\n                completedEvents.push(event);\n            });\n\n            // Sort events by start time (earliest first)\n            const sortedCompletedEvents = completedEvents.sort((eventA, eventB) => eventA.startTimeMs - eventB.startTimeMs);\n\n            // Take completed top level event and add completed submeasurements durations as properties\n            const topLevelEvents = sortedCompletedEvents.filter(event => event.name === measureName && event.status === PerformanceEventStatus.Completed);\n            if (topLevelEvents.length > 0) {\n                /*\n                 * Only take the first top-level event if there are multiple events with the same correlation id.\n                 * This greatly simplifies logic for submeasurements.\n                 */\n                if (topLevelEvents.length > 1) {\n                    this.logger.verbose(\"PerformanceClient: Multiple distinct top-level performance events found, using the first\", correlationId);\n                }\n                const topLevelEvent = topLevelEvents[0];\n\n                this.logger.verbose(`PerformanceClient: Measurement found for ${measureName}`, correlationId);\n\n                // Build event object with top level and sub measurements\n                const eventToEmit = sortedCompletedEvents.reduce((previous, current) => {\n                    if (current.name !== measureName) {\n                        this.logger.trace(`PerformanceClient: Complete submeasurement found for ${current.name}`, correlationId);\n                        // TODO: Emit additional properties for each subMeasurement\n                        const subMeasurementName = `${current.name}DurationMs`;\n                        /*\n                         * Some code paths, such as resolving an authority, can occur multiple times.\n                         * Only take the first measurement, since the second could be read from the cache,\n                         * or due to the same correlation id being used for two distinct requests.\n                         */\n                        if (!previous[subMeasurementName]) {\n                            previous[subMeasurementName] = current.durationMs;\n                        } else {\n                            this.logger.verbose(`PerformanceClient: Submeasurement for ${measureName} already exists for ${current.name}, ignoring`, correlationId);\n                        }\n                        if (current.accessTokenSize) {\n                            previous.accessTokenSize = current.accessTokenSize;\n                        }\n                        if (current.idTokenSize) {\n                            previous.idTokenSize = current.idTokenSize;\n                        }\n                    }\n\n                    return previous;\n                }, topLevelEvent);\n\n                this.emitEvents([eventToEmit], eventToEmit.correlationId);\n            } else {\n                this.logger.verbose(`PerformanceClient: No completed top-level measurements found for ${measureName}`, correlationId);\n            }\n        } else {\n            this.logger.verbose(\"PerformanceClient: No measurements found\", correlationId);\n        }\n    }\n\n    /**\n     * Removes measurements for a given correlation id.\n     *\n     * @param {string} correlationId\n     */\n    discardMeasurements(correlationId: string): void {\n        this.logger.trace(\"PerformanceClient: Performance measurements discarded\", correlationId);\n        this.eventsByCorrelationId.delete(correlationId);\n    }\n\n    /**\n     * Registers a callback function to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        const callbackId = this.generateId();\n        this.callbacks.set(callbackId, callback);\n        this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${callbackId}`);\n\n        return callbackId;\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        const result = this.callbacks.delete(callbackId);\n\n        if (result) {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} removed.`);\n        } else {\n            this.logger.verbose(`PerformanceClient: Performance callback ${callbackId} not removed.`);\n        }\n\n        return result;\n    }\n\n    /**\n     * Emits events to all registered callbacks.\n     *\n     * @param {PerformanceEvent[]} events\n     * @param {?string} [correlationId]\n     */\n    emitEvents(events: PerformanceEvent[], correlationId: string): void {\n        this.logger.verbose(\"PerformanceClient: Emitting performance events\", correlationId);\n\n        this.callbacks.forEach((callback: PerformanceCallbackFunction, callbackId: string) => {\n            this.logger.trace(`PerformanceClient: Emitting event to callback ${callbackId}`, correlationId);\n            callback.apply(null, [events]);\n        });\n    }\n\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceClient } from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceClient } from \"./PerformanceClient\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    startMeasurement(): void { }\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    endMeasurement(): void { }\n    flushMeasurement(): number | null {\n        return null;\n    }\n    \n}\n\nexport class StubPerformanceClient extends PerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n    \n    startPerformanceMeasuremeant(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"../error/AuthError\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { SignedHttpRequest } from \"./SignedHttpRequest\";\n\n/**\n * The PkceCodes type describes the structure\n * of objects that contain PKCE code\n * challenge and verifier pairs\n */\nexport type PkceCodes = {\n    verifier: string,\n    challenge: string\n};\n\nexport type SignedHttpRequestParameters = Pick<BaseAuthRequest, \"resourceRequestMethod\" | \"resourceRequestUri\" | \"shrClaims\" | \"shrNonce\" > & {\n    correlationId?: string\n};\n\n/**\n * Interface for crypto functions used by library\n */\nexport interface ICrypto {\n    /**\n     * Creates a guid randomly.\n     */\n    createNewGuid(): string;\n    /**\n     * base64 Encode string\n     * @param input \n     */\n    base64Encode(input: string): string;\n    /**\n     * base64 decode string\n     * @param input \n     */\n    base64Decode(input: string): string;\n    /**\n     * Generate PKCE codes for OAuth. See RFC here: https://tools.ietf.org/html/rfc7636\n     */\n    generatePkceCodes(): Promise<PkceCodes>;\n    /**\n     * Generates an JWK RSA S256 Thumbprint\n     * @param request\n     */\n    getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string>;\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid \n     */\n    removeTokenBindingKey(kid: string): Promise<boolean>;\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    clearKeystore(): Promise<boolean>;\n    /** \n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\n     * @param accessToken \n     */\n    signJwt(payload: SignedHttpRequest, kid: string, correlationId?: string): Promise<string>;\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    hashString(plainText: string): Promise<string>;\n}\n\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\n    createNewGuid: (): string => {\n        const notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Decode: (): string => {\n        const notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Encode: (): string => {\n        const notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async generatePkceCodes(): Promise<PkceCodes> {\n        const notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async getPublicKeyThumbprint(): Promise<string> {\n        const notImplErr = \"Crypto interface - getPublicKeyThumbprint() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async removeTokenBindingKey(): Promise<boolean> {\n        const notImplErr = \"Crypto interface - removeTokenBindingKey() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async clearKeystore(): Promise<boolean> {\n        const notImplErr = \"Crypto interface - clearKeystore() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async signJwt(): Promise<string> {\n        const notImplErr = \"Crypto interface - signJwt() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async hashString(): Promise<string> {\n        const notImplErr = \"Crypto interface - hashString() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    \"interaction_required\",\n    \"consent_required\",\n    \"login_required\"\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\"\n];\n\n/**\n * Interaction required errors defined by the SDK\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No refresh token found in the cache. Please sign-in.\"\n    },\n    native_account_unavailable: {\n        code: \"native_account_unavailable\",\n        desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n    }\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"InteractionRequiredAuthError\";\n\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n    }\n\n    /**\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\n     * @param errorCode \n     * @param errorString \n     * @param subError \n     */\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string) : boolean {\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n    }\n\n    /**\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\n     */\n    static createNoTokensFoundError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\n     * @returns \n     */\n    static createNativeAccountUnavailableError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nexport class ServerError extends AuthError {\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Separators, Constants } from \"../utils/Constants\";\n\n/**\n * Client info object which consists of two IDs. Need to add more info here.\n */\nexport type ClientInfo = {\n    uid: string,\n    utid: string\n};\n\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nexport function buildClientInfo(rawClientInfo: string, crypto: ICrypto): ClientInfo {\n    if (StringUtils.isEmpty(rawClientInfo)) {\n        throw ClientAuthError.createClientInfoEmptyError();\n    }\n\n    try {\n        const decodedClientInfo: string = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo) as ClientInfo;\n    } catch (e) {\n        throw ClientAuthError.createClientInfoDecodingError(e);\n    }\n}\n\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId \n */\nexport function buildClientInfoFromHomeAccountId(homeAccountId: string): ClientInfo {\n    if (StringUtils.isEmpty(homeAccountId)) {\n        throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\n    }\n    const clientInfoParts: string[] = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Separators,\n    CacheAccountType,\n    CacheType,\n    Constants,\n} from \"../../utils/Constants\";\nimport { Authority } from \"../../authority/Authority\";\nimport { AuthToken } from \"../../account/AuthToken\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { buildClientInfo } from \"../../account/ClientInfo\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { AccountInfo } from \"../../account/AccountInfo\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\nimport { AuthorityType } from \"../../authority/AuthorityType\";\nimport { Logger } from \"../../logger/Logger\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\n\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      clientInfo: Full base64 encoded client info received from ESTS\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      idTokenClaims: Object containing claims parsed from ID token\n *      nativeAccountId: Account identifier on the native device\n * }\n */\nexport class AccountEntity {\n    homeAccountId: string;\n    environment: string;\n    realm: string;\n    localAccountId: string;\n    username: string;\n    authorityType: string;\n    name?: string;\n    clientInfo?: string;\n    lastModificationTime?: string;\n    lastModificationApp?: string;\n    cloudGraphHostName?: string;\n    msGraphHost?: string;\n    idTokenClaims?: TokenClaims;\n    nativeAccountId?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey(): string {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId\n        });\n    }\n\n    /**\n     * returns the type of the cache (in this case account)\n     */\n    generateType(): number {\n        switch (this.authorityType) {\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\n                return CacheType.ADFS;\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\n                return CacheType.MSA;\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\n                return CacheType.MSSTS;\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\n                return CacheType.GENERIC;\n            default: {\n                throw ClientAuthError.createUnexpectedAccountTypeError();\n            }\n        }\n    }\n\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo(): AccountInfo {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            idTokenClaims: this.idTokenClaims,\n            nativeAccountId: this.nativeAccountId\n        };\n    }\n\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || Constants.EMPTY_STRING,\n            accountInterface.tenantId || Constants.EMPTY_STRING,\n        ];\n\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param clientInfo\n     * @param authority\n     * @param idToken\n     * @param policy\n     */\n    static createAccount(\n        clientInfo: string,\n        homeAccountId: string,\n        idToken: AuthToken,\n        authority?: Authority,\n        cloudGraphHostName?: string,\n        msGraphHost?: string,\n        environment?: string,\n        nativeAccountId?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        account.clientInfo = clientInfo;\n        account.homeAccountId = homeAccountId;\n        account.nativeAccountId = nativeAccountId;\n\n        const env = environment || (authority && authority.getPreferredCache());\n\n        if (!env) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm = idToken?.claims?.tid || Constants.EMPTY_STRING;\n\n        if (idToken) {\n            account.idTokenClaims = idToken.claims;\n\n            // How do you account for MSA CID here?\n            account.localAccountId = idToken?.claims?.oid || idToken?.claims?.sub || Constants.EMPTY_STRING;\n\n            /*\n             * In B2C scenarios the emails claim is used instead of preferred_username and it is an array. In most cases it will contain a single email.\n             * This field should not be relied upon if a custom policy is configured to return more than 1 email.\n             */\n            account.username = idToken?.claims?.preferred_username || (idToken?.claims?.emails? idToken.claims.emails[0]: Constants.EMPTY_STRING);\n            account.name = idToken?.claims?.name;\n        }\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        return account;\n    }\n\n    /**\n     * Builds non-AAD/ADFS account.\n     * @param authority\n     * @param idToken\n     */\n    static createGenericAccount(\n        homeAccountId: string,\n        idToken: AuthToken,\n        authority?: Authority,\n        cloudGraphHostName?: string,\n        msGraphHost?: string,\n        environment?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType = (authority && authority.authorityType === AuthorityType.Adfs) ? CacheAccountType.ADFS_ACCOUNT_TYPE : CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = homeAccountId;\n        // non AAD scenarios can have empty realm\n        account.realm = Constants.EMPTY_STRING;\n\n        const env = environment || authority && authority.getPreferredCache();\n\n        if (!env) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        if (idToken) {\n            // How do you account for MSA CID here?\n            account.localAccountId = idToken?.claims?.oid || idToken?.claims?.sub || Constants.EMPTY_STRING;\n            // upn claim for most ADFS scenarios\n            account.username = idToken?.claims?.upn || Constants.EMPTY_STRING;\n            account.name = idToken?.claims?.name || Constants.EMPTY_STRING;\n            account.idTokenClaims = idToken?.claims;\n        }\n\n        account.environment = env;\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        /*\n         * add uniqueName to claims\n         * account.name = idToken.claims.uniqueName;\n         */\n\n        return account;\n    }\n\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(serverClientInfo: string, authType: AuthorityType, logger: Logger, cryptoObj: ICrypto, idToken?: AuthToken): string {\n\n        const accountId = idToken?.claims?.sub ? idToken.claims.sub : Constants.EMPTY_STRING;\n\n        // since ADFS does not have tid and does not set client_info\n        if (authType === AuthorityType.Adfs) {\n            return accountId;\n        }\n\n        // for cases where there is clientInfo\n        if (serverClientInfo) {\n            try {\n                const clientInfo = buildClientInfo(serverClientInfo, cryptoObj);\n                if (!StringUtils.isEmpty(clientInfo.uid) && !StringUtils.isEmpty(clientInfo.utid)) {\n                    return `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`;\n                }\n            } catch (e) {}\n        }\n\n        // default to \"sub\" claim\n        logger.verbose(\"No client info in response\");\n        return accountId;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\")\n        );\n    }\n\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(accountA: AccountInfo | null, accountB: AccountInfo | null, compareClaims?: boolean): boolean {\n        if (!accountA || !accountB) {\n            return false;\n        }\n\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims || {}) as TokenClaims;\n            const accountBClaims = (accountB.idTokenClaims || {}) as TokenClaims;\n\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch = (accountAClaims.iat === accountBClaims.iat) &&\n            (accountAClaims.nonce === accountBClaims.nonce);\n        }\n\n        return (accountA.homeAccountId === accountB.homeAccountId) &&\n            (accountA.localAccountId === accountB.localAccountId) &&\n            (accountA.username === accountB.username) &&\n            (accountA.tenantId === accountB.tenantId) &&\n            (accountA.environment === accountB.environment) &&\n            (accountA.nativeAccountId === accountB.nativeAccountId) &&\n            claimsMatch;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type CcsCredential = {\n    credential: string,\n    type: CcsCredentialType\n};\n\nexport enum CcsCredentialType {\n    HOME_ACCOUNT_ID = \"home_account_id\",\n    UPN = \"UPN\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Separators, CredentialType, CacheType, Constants, AuthenticationScheme } from \"../../utils/Constants\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\n\n/**\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\n *\n * Key:Value Schema:\n *\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>-<requestedClaims*>-<scheme*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      tokenType: Matches the authentication scheme for which the token was issued (i.e. Bearer or pop)\n *      requestedClaimsHash: Matches the SHA 256 hash of the claims object included in the token request\n *      userAssertionHash: Matches the SHA 256 hash of the obo_assertion for the OBO flow\n * }\n */\nexport class CredentialEntity {\n    homeAccountId: string;\n    environment: string;\n    credentialType: CredentialType;\n    clientId: string;\n    secret: string;\n    familyId?: string;\n    realm?: string;\n    target?: string;\n    userAssertionHash?: string;\n    tokenType?: AuthenticationScheme;\n    keyId?: string;\n    requestedClaimsHash?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\n    }\n\n    /**\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n     */\n    generateCredentialId(): string {\n        return CredentialEntity.generateCredentialIdForCacheKey(\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.familyId\n        );\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    generateTarget(): string {\n        return CredentialEntity.generateTargetForCacheKey(this.target);\n    }\n\n    /**\n     * generates credential key\n     */\n    generateCredentialKey(): string {\n        return CredentialEntity.generateCredentialCacheKey(\n            this.homeAccountId,\n            this.environment,\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.target,\n            this.familyId,\n            this.tokenType,\n            this.requestedClaimsHash,\n        );\n    }\n\n    /**\n     * returns the type of the cache (in this case credential)\n     */\n    generateType(): number {\n        switch (this.credentialType) {\n            case CredentialType.ID_TOKEN:\n                return CacheType.ID_TOKEN;\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                return CacheType.ACCESS_TOKEN;\n            case CredentialType.REFRESH_TOKEN:\n                return CacheType.REFRESH_TOKEN;\n            default: {\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\n            }\n        }\n    }\n\n    /**\n     * helper function to return `CredentialType`\n     * @param key\n     */\n    static getCredentialType(key: string): string {\n        // First keyword search will match all \"AccessToken\" and \"AccessToken_With_AuthScheme\" credentials\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\n            // Perform second search to differentiate between \"AccessToken\" and \"AccessToken_With_AuthScheme\" credential types\n            if (key.indexOf(CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) !== -1) {\n                return CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            }\n            return CredentialType.ACCESS_TOKEN;\n        } else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\n            return CredentialType.ID_TOKEN;\n        } else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\n            return CredentialType.REFRESH_TOKEN;\n        }\n\n        return Constants.NOT_DEFINED;\n    }\n\n    /**\n     * generates credential key\n     * <home_account_id*>-\\<environment>-<credential_type>-<client_id>-<realm\\*>-<target\\*>-<scheme\\*>\n     */\n    static generateCredentialCacheKey(\n        homeAccountId: string,\n        environment: string,\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        target?: string,\n        familyId?: string,\n        tokenType?: AuthenticationScheme,\n        requestedClaimsHash?: string\n    ): string {\n        const credentialKey = [\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\n            this.generateTargetForCacheKey(target),\n            this.generateClaimsHashForCacheKey(requestedClaimsHash),\n            this.generateSchemeForCacheKey(tokenType)\n        ];\n\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * generates Account Id for keys\n     * @param homeAccountId\n     * @param environment\n     */\n    private static generateAccountIdForCacheKey(\n        homeAccountId: string,\n        environment: string\n    ): string {\n        const accountId: Array<string> = [homeAccountId, environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generates Credential Id for keys\n     * @param credentialType\n     * @param realm\n     * @param clientId\n     * @param familyId\n     */\n    private static generateCredentialIdForCacheKey(\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        familyId?: string\n    ): string {\n        const clientOrFamilyId =\n            credentialType === CredentialType.REFRESH_TOKEN\n                ? familyId || clientId\n                : clientId;\n        const credentialId: Array<string> = [\n            credentialType,\n            clientOrFamilyId,\n            realm || Constants.EMPTY_STRING,\n        ];\n\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    private static generateTargetForCacheKey(scopes?: string): string {\n        return (scopes || Constants.EMPTY_STRING).toLowerCase();\n    }\n\n    /**\n     * Generate requested claims key component as per schema: <requestedClaims>\n     */\n    private static generateClaimsHashForCacheKey(requestedClaimsHash?: string): string {\n        return(requestedClaimsHash || Constants.EMPTY_STRING).toLowerCase();\n    }\n\n    /**\n     * Generate scheme key componenet as per schema: <scheme>\n     */\n    private static generateSchemeForCacheKey(tokenType?: string): string {\n        /*\n         * PoP Tokens and SSH certs include scheme in cache key\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        return (tokenType && tokenType.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase()) ? tokenType.toLowerCase() : Constants.EMPTY_STRING;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"./ClientAuthError\";\n\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n */\nexport const ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    claimsRequestParsingError: {\n        code: \"claims_request_parsing_error\",\n        desc: \"Could not parse the given claims request object.\"\n    },\n    authorityUriInsecure: {\n        code: \"authority_uri_insecure\",\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\n    },\n    urlParseError: {\n        code: \"url_parse_error\",\n        desc: \"URL could not be parsed into appropriate segments.\"\n    },\n    urlEmptyError: {\n        code: \"empty_url_error\",\n        desc: \"URL was empty or null.\"\n    },\n    emptyScopesError: {\n        code: \"empty_input_scopes_error\",\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\n    },\n    nonArrayScopesError: {\n        code: \"nonarray_input_scopes_error\",\n        desc: \"Scopes cannot be passed as non-array.\"\n    },\n    clientIdSingleScopeError: {\n        code: \"clientid_input_scopes_error\",\n        desc: \"Client ID can only be provided as a single scope.\"\n    },\n    invalidPrompt: {\n        code: \"invalid_prompt_value\",\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create' and 'none'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    },\n    invalidClaimsRequest: {\n        code: \"invalid_claims\",\n        desc: \"Given claims parameter must be a stringified JSON object.\"\n    },\n    tokenRequestEmptyError: {\n        code: \"token_request_empty\",\n        desc: \"Token request was empty and not found in cache.\"\n    },\n    logoutRequestEmptyError: {\n        code: \"logout_request_empty\",\n        desc: \"The logout request was null or undefined.\"\n    },\n    invalidCodeChallengeMethod: {\n        code: \"invalid_code_challenge_method\",\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\n    },\n    invalidCodeChallengeParams: {\n        code: \"pkce_params_missing\",\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: \"invalid_cloud_discovery_metadata\",\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\"\n    },\n    invalidAuthorityMetadata: {\n        code: \"invalid_authority_metadata\",\n        desc: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\"\n    },\n    untrustedAuthority: {\n        code: \"untrusted_authority\",\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\n    },\n    invalidAzureCloudInstance: {\n        code: \"invalid_azure_cloud_instance\",\n        desc: \"Invalid AzureCloudInstance provided. Please refer MSAL JS docs: aks.ms/msaljs/azure_cloud_instance for valid values\"\n    },\n    missingSshJwk: {\n        code: \"missing_ssh_jwk\",\n        desc: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\"\n    },\n    missingSshKid: {\n        code: \"missing_ssh_kid\",\n        desc: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\"\n    },\n    missingNonceAuthenticationHeader: {\n        code: \"missing_nonce_authentication_header\",\n        desc: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\"\n    },\n    invalidAuthenticationHeader: {\n        code: \"invalid_authentication_header\",\n        desc: \"Invalid authentication header provided\"\n    }\n};\n\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nexport class ClientConfigurationError extends ClientAuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code,\n            ClientConfigurationErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code,\n            ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the claims request could not be successfully parsed\n     */\n    static createClaimsRequestParsingError(claimsRequestParseError: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code,\n            `${ClientConfigurationErrorMessage.claimsRequestParsingError.desc} Given value: ${claimsRequestParseError}`);\n    }\n\n    /**\n     * Creates an error thrown if authority uri is given an insecure protocol.\n     * @param urlString\n     */\n    static createInsecureAuthorityUriError(urlString: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code,\n            `${ClientConfigurationErrorMessage.authorityUriInsecure.desc} Given URI: ${urlString}`);\n    }\n\n    /**\n     * Creates an error thrown if URL string does not parse into separate segments.\n     * @param urlString\n     */\n    static createUrlParseError(urlParseError: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code,\n            `${ClientConfigurationErrorMessage.urlParseError.desc} Given Error: ${urlParseError}`);\n    }\n\n    /**\n     * Creates an error thrown if URL string is empty or null.\n     * @param urlString\n     */\n    static createUrlEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code,\n            ClientConfigurationErrorMessage.urlEmptyError.desc);\n    }\n\n    /**\n     * Error thrown when scopes are empty.\n     * @param scopesValue\n     */\n    static createEmptyScopesArrayError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code,\n            `${ClientConfigurationErrorMessage.emptyScopesError.desc}`);\n    }\n\n    /**\n     * Error thrown when client id scope is not provided as single scope.\n     * @param inputScopes\n     */\n    static createClientIdSingleScopeError(inputScopes: Array<string>): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code,\n            `${ClientConfigurationErrorMessage.clientIdSingleScopeError.desc} Given Scopes: ${inputScopes}`);\n    }\n\n    /**\n     * Error thrown when prompt is not an allowed type.\n     * @param promptValue\n     */\n    static createInvalidPromptError(promptValue: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code,\n            `${ClientConfigurationErrorMessage.invalidPrompt.desc} Given value: ${promptValue}`);\n    }\n\n    /**\n     * Creates error thrown when claims parameter is not a stringified JSON object\n     */\n    static createInvalidClaimsRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code,\n            ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\n    }\n\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyLogoutRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.logoutRequestEmptyError.code,\n            ClientConfigurationErrorMessage.logoutRequestEmptyError.desc\n        );\n    }\n\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyTokenRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.tokenRequestEmptyError.code,\n            ClientConfigurationErrorMessage.tokenRequestEmptyError.desc\n        );\n    }\n\n    /**\n     * Throws error when an invalid code_challenge_method is passed by the user\n     */\n    static createInvalidCodeChallengeMethodError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code,\n            ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc\n        );\n    }\n\n    /**\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\n     */\n    static createInvalidCodeChallengeParamsError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.invalidCodeChallengeParams.code,\n            ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc\n        );\n    }\n\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidCloudDiscoveryMetadataError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code,\n            ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\n    }\n\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidAuthorityMetadataError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code,\n            ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\n    }\n\n    /**\n     * Throws error when provided authority is not a member of the trusted host list\n     */\n    static createUntrustedAuthorityError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code,\n            ClientConfigurationErrorMessage.untrustedAuthority.desc);\n    }\n\n    /**\n     * Throws error when the AzureCloudInstance is set to an invalid value\n     */\n    static createInvalidAzureCloudInstanceError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAzureCloudInstance.code,\n            ClientConfigurationErrorMessage.invalidAzureCloudInstance.desc);\n    }\n\n    /**\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key is omitted from the request\n     */\n    static createMissingSshJwkError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshJwk.code,\n            ClientConfigurationErrorMessage.missingSshJwk.desc);\n    }\n\n    /**\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key ID is omitted from the request\n     */\n    static createMissingSshKidError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshKid.code,\n            ClientConfigurationErrorMessage.missingSshKid.desc);\n    }\n\n    /**\n     * Throws error when provided headers don't contain a header that a server nonce can be extracted from\n     */\n    static createMissingNonceAuthenticationHeadersError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.code,\n            ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.desc);\n    }\n\n    /**\n     * Throws error when a provided header is invalid in any way\n     */\n    static createInvalidAuthenticationHeaderError(invalidHeaderName: string, details: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthenticationHeader.code,\n            `${ClientConfigurationErrorMessage.invalidAuthenticationHeader.desc}. Invalid header: ${invalidHeaderName}. Details: ${details}`);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { Constants, OIDC_SCOPES } from \"../utils/Constants\";\n\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nexport class ScopeSet {\n    // Scopes as a Set of strings\n    private scopes: Set<string>;\n\n    constructor(inputScopes: Array<string>) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes ? StringUtils.trimArrayEntries([...inputScopes]) : [];\n        const filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\n\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach(scope => this.scopes.add(scope));\n    }\n\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString: string): ScopeSet {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes: Array<string> = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    private validateInputScopes(inputScopes: Array<string>): void {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw ClientConfigurationError.createEmptyScopesArrayError();\n        }\n    }\n\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope: string): boolean {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return !StringUtils.isEmpty(scope) ? lowerCaseScopesSet.scopes.has(scope.toLowerCase()) : false;\n    }\n\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet: ScopeSet): boolean {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(scope => this.containsScope(scope)));\n    }\n\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes(): boolean {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n\n        return this.scopes.size === defaultScopeCount;\n    }\n\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope: string): void {\n        if (!StringUtils.isEmpty(newScope)) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes: Array<string>): void {\n        try {\n            newScopes.forEach(newScope => this.appendScope(newScope));\n        } catch (e) {\n            throw ClientAuthError.createAppendScopeSetError(e);\n        }\n    }\n\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope: string): void {\n        if (StringUtils.isEmpty(scope)) {\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\n        }\n        this.scopes.delete(scope.trim());\n    }\n\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes(): void {\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\n        if (!otherScopes) {\n            throw ClientAuthError.createEmptyInputScopeSetError();\n        }\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach(scope => unionScopes.add(scope.toLowerCase()));\n        this.scopes.forEach(scope => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\n        if (!otherScopes) {\n            throw ClientAuthError.createEmptyInputScopeSetError();\n        }\n        \n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\n    }\n\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount(): number {\n        return this.scopes.size;\n    }\n\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray(): Array<string> {\n        const array: Array<string> = [];\n        this.scopes.forEach(val => array.push(val));\n        return array;\n    }\n\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes(): string {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase(): string {\n        return this.printScopes().toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims\";\nimport { DecodedAuthToken } from \"./DecodedAuthToken\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ICrypto } from \"../crypto/ICrypto\";\n\n/**\n * JWT Token representation class. Parses token string and generates claims object.\n */\nexport class AuthToken {\n\n    // Raw Token string\n    rawToken: string;\n    // Claims inside token\n    claims: TokenClaims;\n    constructor(rawToken: string, crypto: ICrypto) {\n        if (StringUtils.isEmpty(rawToken)) {\n            throw ClientAuthError.createTokenNullOrEmptyError(rawToken);\n        }\n\n        this.rawToken = rawToken;\n        this.claims = AuthToken.extractTokenClaims(rawToken, crypto);\n    }\n\n    /**\n     * Extract token by decoding the rawToken\n     *\n     * @param encodedToken\n     */\n    static extractTokenClaims(encodedToken: string, crypto: ICrypto): TokenClaims {\n\n        const decodedToken: DecodedAuthToken = StringUtils.decodeAuthToken(encodedToken);\n\n        // token will be decoded to get the username\n        try {\n            const base64TokenPayload = decodedToken.JWSPayload;\n\n            // base64Decode() should throw an error if there is an issue\n            const base64Decoded = crypto.base64Decode(base64TokenPayload);\n            return JSON.parse(base64Decoded) as TokenClaims;\n        } catch (err) {\n            throw ClientAuthError.createTokenParsingError(err);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountCache, AccountFilter, CredentialFilter, CredentialCache, ValidCredentialType, AppMetadataFilter, AppMetadataCache } from \"./utils/CacheTypes\";\nimport { CacheRecord } from \"./entities/CacheRecord\";\nimport { CacheSchemaType, CredentialType, Constants, APP_METADATA, THE_FAMILY_ID, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme } from \"../utils/Constants\";\nimport { CredentialEntity } from \"./entities/CredentialEntity\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AccountEntity } from \"./entities/AccountEntity\";\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity\";\nimport { IdTokenEntity } from \"./entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity\";\nimport { AuthError } from \"../error/AuthError\";\nimport { ICacheManager } from \"./interface/ICacheManager\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity\";\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity\";\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n */\nexport abstract class CacheManager implements ICacheManager {\n    protected clientId: string;\n    protected cryptoImpl: ICrypto;\n\n    constructor(clientId: string, cryptoImpl: ICrypto) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     *  @param accountKey\n     */\n    abstract getAccount(accountKey: string): AccountEntity | null;\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    abstract setAccount(account: AccountEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param idTokenKey\n     */\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param idToken\n     */\n    abstract setIdTokenCredential(idToken: IdTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param accessTokenKey\n     */\n    abstract getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param accessToken\n     */\n    abstract setAccessTokenCredential(accessToken: AccessTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param refreshTokenKey\n     */\n    abstract getRefreshTokenCredential(refreshTokenKey: string): RefreshTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param refreshToken\n     */\n    abstract setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void;\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    abstract getServerTelemetry(serverTelemetryKey: string): ServerTelemetryEntity | null;\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    abstract setServerTelemetry(serverTelemetryKey: string, serverTelemetry: ServerTelemetryEntity): void;\n\n    /**\n     * fetch cloud discovery metadata entity from the platform cache\n     * @param key\n     */\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\n\n    /**\n     *\n     */\n    abstract getAuthorityMetadataKeys(): Array<string>;\n\n    /**\n     * set cloud discovery metadata entity to the platform cache\n     * @param key\n     * @param value\n     */\n    abstract setAuthorityMetadata(key: string, value: AuthorityMetadataEntity): void;\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    abstract getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null;\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    abstract setThrottlingCache(throttlingCacheKey: string, throttlingCache: ThrottlingEntity): void;;\n\n    /**\n     * Function to remove an item from cache given its key.\n     * @param key\n     */\n    abstract removeItem(key: string, type?: string): boolean;\n\n    /**\n     * Function which returns boolean whether cache contains a specific key.\n     * @param key\n     */\n    abstract containsKey(key: string, type?: string): boolean;\n\n    /**\n     * Function which retrieves all current keys from the cache.\n     */\n    abstract getKeys(): string[];\n\n    /**\n     * Function which clears cache.\n     */\n    abstract clear(): Promise<void>;\n\n    /**\n     * Function which updates an outdated credential cache key\n     */\n    abstract updateCredentialCacheKey(currentCacheKey: string, credential: ValidCredentialType): string;\n\n    /**\n     * Returns all accounts in cache\n     */\n    getAllAccounts(): AccountInfo[] {\n        const currentAccounts: AccountCache = this.getAccountsFilteredBy();\n        const accountValues: AccountEntity[] = Object.keys(currentAccounts).map(accountKey => currentAccounts[accountKey]);\n        const numAccounts = accountValues.length;\n        if (numAccounts < 1) {\n            return [];\n        } else {\n            const allAccounts = accountValues.map<AccountInfo>((value) => {\n                const accountEntity = CacheManager.toObject<AccountEntity>(new AccountEntity(), value);\n                const accountInfo = accountEntity.getAccountInfo();\n                const idToken = this.readIdTokenFromCache(this.clientId, accountInfo);\n                if (idToken && !accountInfo.idTokenClaims) {\n                    accountInfo.idTokenClaims = new AuthToken(idToken.secret, this.cryptoImpl).claims;\n                }\n\n                return accountInfo;\n\n            });\n            return allAccounts;\n        }\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(cacheRecord: CacheRecord): Promise<void> {\n        if (!cacheRecord) {\n            throw ClientAuthError.createNullOrUndefinedCacheRecord();\n        }\n\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n\n        if (!!cacheRecord.idToken) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n\n        if (!!cacheRecord.accessToken) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n\n        if (!!cacheRecord.refreshToken) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    private async saveAccessToken(credential: AccessTokenEntity): Promise<void> {\n        const currentTokenCache = this.getCredentialsFilteredBy({\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash\n        });\n\n        const currentScopes = ScopeSet.fromString(credential.target);\n        const currentAccessTokens: AccessTokenEntity[] = Object.keys(currentTokenCache.accessTokens).map(key => currentTokenCache.accessTokens[key]);\n\n        if (currentAccessTokens) {\n            const removedAccessTokens: Array<Promise<boolean>> = [];\n            currentAccessTokens.forEach((tokenEntity) => {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeCredential(tokenEntity));\n                }\n            });\n            await Promise.all(removedAccessTokens);\n        }\n        this.setAccessTokenCredential(credential);\n    }\n\n    /**\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param homeAccountId\n     * @param environment\n     * @param realm\n     */\n    getAccountsFilteredBy(accountFilter?: AccountFilter): AccountCache {\n        return this.getAccountsFilteredByInternal(\n            accountFilter ? accountFilter.homeAccountId : Constants.EMPTY_STRING,\n            accountFilter ? accountFilter.environment : Constants.EMPTY_STRING,\n            accountFilter ? accountFilter.realm : Constants.EMPTY_STRING,\n            accountFilter ? accountFilter.nativeAccountId: Constants.EMPTY_STRING,\n        );\n    }\n\n    /**\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param homeAccountId\n     * @param environment\n     * @param realm\n     */\n    private getAccountsFilteredByInternal(\n        homeAccountId?: string,\n        environment?: string,\n        realm?: string,\n        nativeAccountId?: string,\n    ): AccountCache {\n        const allCacheKeys = this.getKeys();\n        const matchingAccounts: AccountCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            const entity: AccountEntity | null = this.getAccount(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!homeAccountId && !this.matchHomeAccountId(entity, homeAccountId)) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!realm && !this.matchRealm(entity, realm)) {\n                return;\n            }\n\n            if (!!nativeAccountId && !this.matchNativeAccountId(entity, nativeAccountId)) {\n                return;\n            }\n\n            matchingAccounts[cacheKey] = entity;\n        });\n\n        return matchingAccounts;\n    }\n\n    /**\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\n     * @param homeAccountId\n     * @param environment\n     * @param credentialType\n     * @param clientId\n     * @param realm\n     * @param target\n     */\n    getCredentialsFilteredBy(filter: CredentialFilter): CredentialCache {\n        return this.getCredentialsFilteredByInternal(\n            filter.homeAccountId,\n            filter.environment,\n            filter.credentialType,\n            filter.clientId,\n            filter.familyId,\n            filter.realm,\n            filter.target,\n            filter.userAssertionHash,\n            filter.tokenType,\n            filter.keyId,\n            filter.requestedClaimsHash\n        );\n    }\n\n    /**\n     * Support function to help match credentials\n     * @param homeAccountId\n     * @param environment\n     * @param credentialType\n     * @param clientId\n     * @param realm\n     * @param target\n     * @param userAssertionHash\n     * @param tokenType\n     */\n    private getCredentialsFilteredByInternal(\n        homeAccountId?: string,\n        environment?: string,\n        credentialType?: string,\n        clientId?: string,\n        familyId?: string,\n        realm?: string,\n        target?: string,\n        userAssertionHash?: string,\n        tokenType?: AuthenticationScheme,\n        keyId?: string,\n        requestedClaimsHash?: string\n    ): CredentialCache {\n        const allCacheKeys = this.getKeys();\n        const matchingCredentials: CredentialCache = {\n            idTokens: {},\n            accessTokens: {},\n            refreshTokens: {},\n        };\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-credential type cache entities\n            const credType = CredentialEntity.getCredentialType(cacheKey);\n\n            if (credType === Constants.NOT_DEFINED) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getSpecificCredential(cacheKey, credType);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!userAssertionHash && !this.matchUserAssertionHash(entity, userAssertionHash)) {\n                return;\n            }\n\n            if (!!homeAccountId && !this.matchHomeAccountId(entity, homeAccountId)) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!realm && !this.matchRealm(entity, realm)) {\n                return;\n            }\n\n            if (!!credentialType && !this.matchCredentialType(entity, credentialType)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            if (!!familyId && !this.matchFamilyId(entity, familyId)) {\n                return;\n            }\n\n            /*\n             * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n             * Resource specific refresh tokens case will be added when the support is deemed necessary\n             */\n            if (!!target && !this.matchTarget(entity, target)) {\n                return;\n            }\n\n            // If request OR cached entity has requested Claims Hash, check if they match\n            if (requestedClaimsHash || entity.requestedClaimsHash) {\n                // Don't match if either is undefined or they are different\n                if (entity.requestedClaimsHash !== requestedClaimsHash) {\n                    return;\n                }\n            }\n\n            // Access Token with Auth Scheme specific matching\n            if (credentialType === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\n                if(!!tokenType && !this.matchTokenType(entity, tokenType)) {\n                    return;\n                }\n\n                // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n                if (tokenType === AuthenticationScheme.SSH) {\n                    if(keyId && !this.matchKeyId(entity, keyId)) {\n                        return;\n                    }\n                }\n            }\n\n            // At this point, the entity matches the request, update cache key if key schema has changed\n            const updatedCacheKey = this.updateCredentialCacheKey(cacheKey, entity);\n\n            switch (credType) {\n                case CredentialType.ID_TOKEN:\n                    matchingCredentials.idTokens[updatedCacheKey] = entity as IdTokenEntity;\n                    break;\n                case CredentialType.ACCESS_TOKEN:\n                case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                    matchingCredentials.accessTokens[updatedCacheKey] = entity as AccessTokenEntity;\n                    break;\n                case CredentialType.REFRESH_TOKEN:\n                    matchingCredentials.refreshTokens[updatedCacheKey] = entity as RefreshTokenEntity;\n                    break;\n            }\n        });\n\n        return matchingCredentials;\n    }\n\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\n        return this.getAppMetadataFilteredByInternal(\n            filter.environment,\n            filter.clientId,\n        );\n    }\n\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    private getAppMetadataFilteredByInternal(\n        environment?: string,\n        clientId?: string\n    ): AppMetadataCache {\n\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata: AppMetadataCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            matchingAppMetadata[cacheKey] = entity;\n\n        });\n\n        return matchingAppMetadata;\n    }\n\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (!this.isAuthorityMetadata(cacheKey) || cacheKey.indexOf(this.clientId) === -1) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n\n            matchedEntity = entity;\n\n        });\n\n        return matchedEntity;\n    }\n\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts(): Promise<boolean> {\n        const allCacheKeys = this.getKeys();\n        const removedAccounts: Array<Promise<boolean>> = [];\n\n        allCacheKeys.forEach((cacheKey) => {\n            const entity = this.getAccount(cacheKey);\n            if (!entity) {\n                return;\n            }\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n\n        await Promise.all(removedAccounts);\n        return true;\n    }\n\n    /**\n     * returns a boolean if the given account is removed\n     * @param account\n     */\n    async removeAccount(accountKey: string): Promise<boolean> {\n        const account = this.getAccount(accountKey);\n        if (!account) {\n            throw ClientAuthError.createNoAccountFoundError();\n        }\n        return (await this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT));\n    }\n\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<boolean> {\n        const allCacheKeys = this.getKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials: Array<Promise<boolean>> = [];\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-credential type cache entities\n            const credType = CredentialEntity.getCredentialType(cacheKey);\n            if (credType === Constants.NOT_DEFINED) {\n                return;\n            }\n\n            const cacheEntity = this.getSpecificCredential(cacheKey, credType);\n            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\n                removedCredentials.push(this.removeCredential(cacheEntity));\n            }\n        });\n\n        await Promise.all(removedCredentials);\n        return true;\n    }\n\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeCredential(credential: CredentialEntity): Promise<boolean> {\n        const key = credential.generateCredentialKey();\n\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (credential.credentialType.toLowerCase() === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\n            if(credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity = credential as AccessTokenEntity;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    } catch (error) {\n                        throw ClientAuthError.createBindingKeyNotRemovedError();\n                    }\n                }\n            }\n        }\n\n        return this.removeItem(key, CacheSchemaType.CREDENTIAL);\n    }\n\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata(): boolean {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey, CacheSchemaType.APP_METADATA);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Retrieve the cached credentials into a cacherecord\n     * @param account\n     * @param clientId\n     * @param scopes\n     * @param environment\n     * @param authScheme\n     */\n    readCacheRecord(account: AccountInfo, clientId: string, request: BaseAuthRequest, environment: string): CacheRecord {\n\n        const cachedAccount = this.readAccountFromCache(account);\n        const cachedIdToken = this.readIdTokenFromCache(clientId, account);\n        const cachedAccessToken = this.readAccessTokenFromCache(clientId, account, request);\n        const cachedRefreshToken = this.readRefreshTokenFromCache(clientId, account, false);\n        const cachedAppMetadata = this.readAppMetadataFromCache(environment, clientId);\n\n        if (cachedAccount && cachedIdToken) {\n            cachedAccount.idTokenClaims = new AuthToken(cachedIdToken.secret, this.cryptoImpl).claims;\n        }\n\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\n        const accountKey: string = AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey);\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param nativeAccountId\n     * @returns AccountEntity or Null\n     */\n    readAccountFromCacheWithNativeAccountId(nativeAccountId: string): AccountEntity | null {\n        // fetch account from memory\n        const accountFilter: AccountFilter = {\n            nativeAccountId\n        };\n        const accountCache: AccountCache = this.getAccountsFilteredBy(accountFilter);\n        const accounts = Object.keys(accountCache).map((key) => accountCache[key]);\n\n        if (accounts.length < 1) {\n            return null;\n        } else if (accounts.length > 1) {\n            throw ClientAuthError.createMultipleMatchingAccountsInCacheError();\n        }\n\n        return accountCache[0];\n    }\n\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param inputRealm\n     */\n    readIdTokenFromCache(clientId: string, account: AccountInfo): IdTokenEntity | null {\n        const idTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: clientId,\n            realm: account.tenantId,\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(idTokenFilter);\n        const idTokens = Object.keys(credentialCache.idTokens).map((key) => credentialCache.idTokens[key]);\n        const numIdTokens = idTokens.length;\n\n        if (numIdTokens < 1) {\n            return null;\n        } else if (numIdTokens > 1) {\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\n        }\n\n        return idTokens[0] as IdTokenEntity;\n    }\n\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param scopes\n     * @param authScheme\n     */\n    readAccessTokenFromCache(clientId: string, account: AccountInfo, request: BaseAuthRequest): AccessTokenEntity | null {\n        const scopes =  new ScopeSet(request.scopes || []);\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType = (authScheme && authScheme.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase()) ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME : CredentialType.ACCESS_TOKEN;\n\n        const accessTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId,\n            realm: account.tenantId,\n            target: scopes.printScopesLowerCase(),\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(accessTokenFilter);\n\n        const accessTokens = Object.keys(credentialCache.accessTokens).map((key) => credentialCache.accessTokens[key]);\n\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            return null;\n        } else if (numAccessTokens > 1) {\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\n        }\n\n        return accessTokens[0] as AccessTokenEntity;\n    }\n\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param clientId\n     * @param account\n     * @param familyRT\n     */\n    readRefreshTokenFromCache(clientId: string, account: AccountInfo, familyRT: boolean): RefreshTokenEntity | null {\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: clientId,\n            familyId: id,\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(refreshTokenFilter);\n        const refreshTokens = Object.keys(credentialCache.refreshTokens).map((key) => credentialCache.refreshTokens[key]);\n\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n\n        return refreshTokens[0] as RefreshTokenEntity;\n    }\n\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment: string, clientId: string): AppMetadataEntity | null {\n        const appMetadataFilter: AppMetadataFilter = {\n            environment,\n            clientId,\n        };\n\n        const appMetadata: AppMetadataCache = this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(appMetadata).map((key) => appMetadata[key]);\n\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        } else if (numAppMetadata > 1) {\n            throw ClientAuthError.createMultipleMatchingAppMetadataInCacheError();\n        }\n\n        return appMetadataEntries[0] as AppMetadataEntity;\n    }\n\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment: string, clientId: string): boolean {\n        const appMetadata = this.readAppMetadataFromCache(environment, clientId);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    private matchHomeAccountId(entity: AccountEntity | CredentialEntity, homeAccountId: string): boolean {\n        return !!(entity.homeAccountId && homeAccountId === entity.homeAccountId);\n    }\n\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    private matchUserAssertionHash(entity: CredentialEntity, userAssertionHash: string): boolean {\n        return !!(entity.userAssertionHash && userAssertionHash === entity.userAssertionHash);\n    }\n\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    private matchEnvironment(entity: AccountEntity | CredentialEntity | AppMetadataEntity, environment: string): boolean {\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (cloudMetadata && cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    private matchCredentialType(entity: CredentialEntity, credentialType: string): boolean {\n        return (entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase());\n    }\n\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    private matchClientId(entity: CredentialEntity | AppMetadataEntity, clientId: string): boolean {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    private matchFamilyId(entity: CredentialEntity | AppMetadataEntity, familyId: string): boolean {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    private matchRealm(entity: AccountEntity | CredentialEntity, realm: string): boolean {\n        return !!(entity.realm && realm === entity.realm);\n    }\n\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    private matchNativeAccountId(entity: AccountEntity, nativeAccountId: string): boolean {\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\n    }\n\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    private matchTarget(entity: CredentialEntity, target: string): boolean {\n        const isNotAccessTokenCredential = (entity.credentialType !== CredentialType.ACCESS_TOKEN && entity.credentialType !== CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME);\n\n        if ( isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\n        const requestTargetScopeSet: ScopeSet = ScopeSet.fromString(target);\n\n        if (!requestTargetScopeSet.containsOnlyOIDCScopes()) {\n            requestTargetScopeSet.removeOIDCScopes(); // ignore OIDC scopes\n        } else {\n            requestTargetScopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\n    }\n\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchTokenType(entity: CredentialEntity, tokenType: AuthenticationScheme): boolean {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    private isAppMetadata(key: string): boolean {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    protected isAuthorityMetadata(key: string): boolean {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority: string): string {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n\n    /**\n     * Returns the specific credential (IdToken/AccessToken/RefreshToken) from the cache\n     * @param key\n     * @param credType\n     */\n    private getSpecificCredential(key: string, credType: string): ValidCredentialType | null {\n        switch (credType) {\n            case CredentialType.ID_TOKEN: {\n                return this.getIdTokenCredential(key);\n            }\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME: {\n                return this.getAccessTokenCredential(key);\n            }\n            case CredentialType.REFRESH_TOKEN: {\n                return this.getRefreshTokenCredential(key);\n            }\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject<T>(obj: T, json: object): T {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n\nexport class DefaultStorageClass extends CacheManager {\n    setAccount(): void {\n        const notImplErr = \"Storage interface - setAccount() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccount(): AccountEntity {\n        const notImplErr = \"Storage interface - getAccount() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setIdTokenCredential(): void {\n        const notImplErr = \"Storage interface - setIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getIdTokenCredential(): IdTokenEntity {\n        const notImplErr = \"Storage interface - getIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAccessTokenCredential(): void {\n        const notImplErr = \"Storage interface - setAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccessTokenCredential(): AccessTokenEntity {\n        const notImplErr = \"Storage interface - getAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setRefreshTokenCredential(): void {\n        const notImplErr = \"Storage interface - setRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getRefreshTokenCredential(): RefreshTokenEntity {\n        const notImplErr = \"Storage interface - getRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAppMetadata(): void {\n        const notImplErr = \"Storage interface - setAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAppMetadata(): AppMetadataEntity {\n        const notImplErr = \"Storage interface - getAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setServerTelemetry(): void {\n        const notImplErr = \"Storage interface - setServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getServerTelemetry(): ServerTelemetryEntity {\n        const notImplErr = \"Storage interface - getServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAuthorityMetadata(): void {\n        const notImplErr = \"Storage interface - setAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\n        const notImplErr = \"Storage interface - getAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadataKeys(): Array<string> {\n        const notImplErr = \"Storage interface - getAuthorityMetadataKeys() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setThrottlingCache(): void {\n        const notImplErr = \"Storage interface - setThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getThrottlingCache(): ThrottlingEntity {\n        const notImplErr = \"Storage interface - getThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    removeItem(): boolean {\n        const notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    containsKey(): boolean {\n        const notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getKeys(): string[] {\n        const notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    async clear(): Promise<void> {\n        const notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    updateCredentialCacheKey(): string {\n        const notImplErr = \"Storage interface - updateCredentialCacheKey() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * ID_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      realm: Full tenant or organizational identifier that the account belongs to\n * }\n */\nexport class IdTokenEntity extends CredentialEntity {\n    realm: string;\n\n    /**\n     * Create IdTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createIdTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        idToken: string,\n        clientId: string,\n        tenantId: string,\n    ): IdTokenEntity {\n        const idTokenEntity = new IdTokenEntity();\n\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n        idTokenEntity.homeAccountId = homeAccountId;\n        idTokenEntity.environment = environment;\n        idTokenEntity.clientId = clientId;\n        idTokenEntity.secret = idToken;\n        idTokenEntity.realm = tenantId;\n\n        return idTokenEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isIdTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.ID_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nexport class TimeUtils {\n\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds(): number {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n    \n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn: string, offset: number): boolean {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return (offsetCurrentTimeSec > expirationSec);\n    }\n\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt \n     * @param offset \n     */\n    static wasClockTurnedBack(cachedAt: string): boolean {\n        const cachedAtSec = Number(cachedAt);\n\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay<T>(t: number, value?: T): Promise<T | void> {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType, AuthenticationScheme } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport { AuthToken } from \"../../account/AuthToken\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\n\n/**\n * ACCESS_TOKEN Credential Type\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      cachedAt: Absolute device time when entry was created in the cache.\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\n *      keyId: used for POP and SSH tokenTypes\n *      tokenType: Type of the token issued. Usually \"Bearer\"\n * }\n */\nexport class AccessTokenEntity extends CredentialEntity {\n    realm: string;\n    target: string;\n    cachedAt: string;\n    expiresOn: string;\n    extendedExpiresOn?: string;\n    refreshOn?: string;\n    keyId?: string; // for POP and SSH tokenTypes\n    tokenType?: AuthenticationScheme;\n    requestedClaims?: string;\n    requestedClaimsHash?: string;\n\n    /**\n     * Create AccessTokenEntity\n     * @param homeAccountId\n     * @param environment\n     * @param accessToken\n     * @param clientId\n     * @param tenantId\n     * @param scopes\n     * @param expiresOn\n     * @param extExpiresOn\n     */\n    static createAccessTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        accessToken: string,\n        clientId: string,\n        tenantId: string,\n        scopes: string,\n        expiresOn: number,\n        extExpiresOn: number,\n        cryptoUtils: ICrypto,\n        refreshOn?: number,\n        tokenType?: AuthenticationScheme,\n        userAssertionHash?:string,\n        keyId?: string,\n        requestedClaims?: string,\n        requestedClaimsHash?: string\n    ): AccessTokenEntity {\n        const atEntity: AccessTokenEntity = new AccessTokenEntity();\n\n        atEntity.homeAccountId = homeAccountId;\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\n        atEntity.secret = accessToken;\n\n        const currentTime = TimeUtils.nowSeconds();\n        atEntity.cachedAt = currentTime.toString();\n\n        /*\n         * Token expiry time.\n         * This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\n         */\n        atEntity.expiresOn = expiresOn.toString();\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\n        if (refreshOn) {\n            atEntity.refreshOn = refreshOn.toString();\n        }\n\n        atEntity.environment = environment;\n        atEntity.clientId = clientId;\n        atEntity.realm = tenantId;\n        atEntity.target = scopes;\n        atEntity.userAssertionHash = userAssertionHash;\n\n        atEntity.tokenType = StringUtils.isEmpty(tokenType) ? AuthenticationScheme.BEARER : tokenType;\n\n        if (requestedClaims) {\n            atEntity.requestedClaims = requestedClaims;\n            atEntity.requestedClaimsHash = requestedClaimsHash;\n        }\n\n        /*\n         * Create Access Token With Auth Scheme instead of regular access token\n         * Cast to lower to handle \"bearer\" from ADFS\n         */\n        if (atEntity.tokenType?.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase()) {\n            atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            switch (atEntity.tokenType) {\n                case AuthenticationScheme.POP:\n                    // Make sure keyId is present and add it to credential\n                    const tokenClaims: TokenClaims | null = AuthToken.extractTokenClaims(accessToken, cryptoUtils);\n                    if (!tokenClaims?.cnf?.kid) {\n                        throw ClientAuthError.createTokenClaimsRequiredError();\n                    }\n                    atEntity.keyId = tokenClaims.cnf.kid;\n                    break;\n                case AuthenticationScheme.SSH:\n                    atEntity.keyId = keyId;\n            }\n        }\n\n        return atEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccessTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity.hasOwnProperty(\"target\") &&\n            (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN || entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * REFRESH_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\n *\n * Value:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n * }\n */\nexport class RefreshTokenEntity extends CredentialEntity {\n    familyId?: string;\n\n    /**\n     * Create RefreshTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createRefreshTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        refreshToken: string,\n        clientId: string,\n        familyId?: string,\n        userAssertionHash?: string\n    ): RefreshTokenEntity {\n        const rtEntity = new RefreshTokenEntity();\n\n        rtEntity.clientId = clientId;\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\n        rtEntity.environment = environment;\n        rtEntity.homeAccountId = homeAccountId;\n        rtEntity.secret = refreshToken;\n        rtEntity.userAssertionHash = userAssertionHash;\n\n        if (familyId)\n            rtEntity.familyId = familyId;\n\n        return rtEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isRefreshTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\n\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nexport class AppMetadataEntity {\n    clientId: string;\n    environment: string;\n    familyId?: string;\n\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey(): string {\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n    }\n\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(environment: string, clientId: string): string {\n        const appMetaDataKeyArray: Array<string> = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(clientId: string, environment: string, familyId?: string): AppMetadataEntity {\n        const appMetadata = new AppMetadataEntity();\n\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n\n        return appMetadata;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS } from \"../../utils/Constants\";\n\nexport class ServerTelemetryEntity {\n    failedRequests: Array<string|number>;\n    errors: string[];\n    cacheHits: number;\n\n    constructor() {\n        this.failedRequests = [];\n        this.errors = [];\n        this.cacheHits = 0;\n    }\n\n    /**\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isServerTelemetryEntity(key: string, entity?: object): boolean {\n\n        const validateKey: boolean = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n        let validateEntity: boolean = true;\n\n        if (entity) {\n            validateEntity =\n                entity.hasOwnProperty(\"failedRequests\") &&\n                entity.hasOwnProperty(\"errors\") &&\n                entity.hasOwnProperty(\"cacheHits\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport { AUTHORITY_METADATA_CONSTANTS } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\n\nexport class AuthorityMetadataEntity {\n    aliases: Array<string>;\n    preferred_cache: string;\n    preferred_network: string;\n    canonical_authority: string;\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    aliasesFromNetwork: boolean;\n    endpointsFromNetwork: boolean;\n    expiresAt: number;\n    jwks_uri: string;\n\n    constructor() {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateCloudDiscoveryMetadata(metadata: CloudDiscoveryMetadata, fromNetwork: boolean): void {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Update the entity with new endpoints\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateEndpointMetadata(metadata: OpenIdConfigResponse, fromNetwork: boolean): void {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority \n     */\n    updateCanonicalAuthority(authority: string): void {\n        this.canonical_authority = authority;\n    }\n\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt(): void {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired(): boolean {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ThrottlingConstants } from \"../../utils/Constants\";\n\nexport class ThrottlingEntity {\n    // Unix-time value representing the expiration of the throttle\n    throttleTime: number;\n    // Information provided by the server\n    error?: string;\n    errorCodes?: Array<string>;\n    errorMessage?: string;\n    subError?: string;\n\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key: string, entity?: object): boolean {\n        \n        let validateKey: boolean = false;\n        if (key) {\n            validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n        \n        let validateEntity: boolean = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"./StringUtils\";\nimport { Constants } from \"./Constants\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * Type which defines the object that is stringified, encoded and sent in the state value.\n * Contains the following:\n * - id - unique identifier for this request\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\n * - platformState - string value sent from the platform.\n */\nexport type LibraryStateObject = {\n    id: string,\n    meta?: Record<string, string>\n};\n\n/**\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\n */\nexport type RequestStateObject = {\n    userRequestState: string,\n    libraryState: LibraryStateObject\n};\n\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nexport class ProtocolUtils {\n\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState \n     * @param randomGuid \n     */\n    static setRequestState(cryptoObj: ICrypto, userState?: string, meta?: Record<string, string>): string {\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n        return !StringUtils.isEmpty(userState) ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}` : libraryState;\n    }\n\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid \n     * @param cryptoObj \n     */\n    static generateLibraryState(cryptoObj: ICrypto, meta?: Record<string, string>): string {\n        if (!cryptoObj) {\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\n        }\n\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj: LibraryStateObject = {\n            id: cryptoObj.createNewGuid()\n        };\n\n        if (meta) {\n            stateObj.meta = meta;\n        }\n\n        const stateString = JSON.stringify(stateObj);\n\n        return cryptoObj.base64Encode(stateString);\n    }\n\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state \n     * @param cryptoObj \n     */\n    static parseRequestState(cryptoObj: ICrypto, state: string): RequestStateObject {\n        if (!cryptoObj) {\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\n        }\n\n        if (StringUtils.isEmpty(state)) {\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\n        }\n\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(libraryStateString) as LibraryStateObject;\n            return {\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : Constants.EMPTY_STRING,\n                libraryState: libraryStateObj\n            };\n        } catch(e) {\n            throw ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport enum ProtocolMode {\n    AAD = \"AAD\",\n    OIDC = \"OIDC\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration\";\n\nexport type AuthorityOptions = {\n    protocolMode: ProtocolMode;\n    knownAuthorities: Array<string>;\n    cloudDiscoveryMetadata: string;\n    authorityMetadata: string;\n    skipAuthorityMetadataCache?: boolean;\n    azureRegionConfiguration?: AzureRegionConfiguration;\n};\n\nexport enum AzureCloudInstance {\n    // AzureCloudInstance is not specified.\n    None,\n\n    // Microsoft Azure public cloud\n    AzurePublic = \"https://login.microsoftonline.com\",\n\n    // Microsoft PPE\n    AzurePpe = \"https://login.windows-ppe.net\",\n\n    // Microsoft Chinese national cloud\n    AzureChina = \"https://login.chinacloudapi.cn\",\n\n    // Microsoft German national cloud (\"Black Forest\")\n    AzureGermany = \"https://login.microsoftonline.de\",\n\n    // US Government cloud\n    AzureUsGovernment = \"https://login.microsoftonline.us\",\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation \n     */\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code,\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n    }\n\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class BrowserStorage implements IWindowStorage<string> {\n\n    private windowStorage: Storage;\n\n    constructor(cacheLocation: string) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n\n    private validateWindowStorage(cacheLocation: string): void {\n        if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n        const storageSupported = !!window[cacheLocation];\n        if (!storageSupported) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n    }\n\n    getItem(key: string): string | null {\n        return this.windowStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        this.windowStorage.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.windowStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { IUri } from \"./IUri\";\nimport { AADAuthorityConstants, Constants } from \"../utils/Constants\";\n\n/**\n * Url object class which can perform various transformations on url strings.\n */\nexport class UrlString {\n\n    // internal url string field\n    private _urlString: string;\n    public get urlString(): string {\n        return this._urlString;\n    }\n\n    constructor(url: string) {\n        this._urlString = url;\n        if (StringUtils.isEmpty(this._urlString)) {\n            // Throws error if url is empty\n            throw ClientConfigurationError.createUrlEmptyError();\n        }\n\n        if (StringUtils.isEmpty(this.getHash())) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri(): void {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        } catch (e) {\n            throw ClientConfigurationError.createUrlParseError(e);\n        }\n\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n\n        // Throw error if uri is insecure.\n        if(!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\n        }\n    }\n\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url: string, queryString: string): string {\n        if (StringUtils.isEmpty(queryString)) {\n            return url;\n        }\n\n        return url.indexOf(\"?\") < 0 ? `${url}?${queryString}` : `${url}&${queryString}`;\n    }\n\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url: string): string {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId: string): UrlString {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n\n    /**\n     * Returns the anchor part(#) of the URL\n     */\n    getHash(): string {\n        return UrlString.parseHash(this.urlString);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents(): IUri {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7]\n        } as IUri;\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (!StringUtils.isEmpty(urlComponents.QueryString) && urlComponents.QueryString.endsWith(\"/\")) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length-1);\n        }\n        return urlComponents;\n    }\n\n    static getDomainFromUrl(url: string): string {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n\n        const match = url.match(regEx);\n\n        if (!match) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${url}`);\n        }\n\n        return match[2];\n    }\n\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n\n            return baseComponents.Protocol + \"//\" + baseComponents.HostNameAndPort + relativeUrl;\n        }\n\n        return relativeUrl;\n    }\n\n    /**\n     * Parses hash string from given string. Returns empty string if no hash symbol is found.\n     * @param hashString\n     */\n    static parseHash(hashString: string): string {\n        const hashIndex1 = hashString.indexOf(\"#\");\n        const hashIndex2 = hashString.indexOf(\"#/\");\n        if (hashIndex2 > -1) {\n            return hashString.substring(hashIndex2 + 2);\n        } else if (hashIndex1 > -1) {\n            return hashString.substring(hashIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\n    }\n\n    /**\n     * Returns URL hash as server auth code response object.\n     */\n    static getDeserializedHash(hash: string): ServerAuthorizationCodeResponse {\n        // Check if given hash is empty\n        if (StringUtils.isEmpty(hash)) {\n            return {};\n        }\n        // Strip the # symbol if present\n        const parsedHash = UrlString.parseHash(hash);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash: ServerAuthorizationCodeResponse = StringUtils.queryStringToObject<ServerAuthorizationCodeResponse>(StringUtils.isEmpty(parsedHash) ? hash : parsedHash);\n        // Check if deserialization didn't work\n        if (!deserializedHash) {\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\n        }\n        return deserializedHash;\n    }\n\n    /**\n     * Check if the hash of the URL string contains known properties\n     */\n    static hashContainsKnownProperties(hash: string): boolean {\n        if (StringUtils.isEmpty(hash) || hash.indexOf(\"=\") < 0) {\n            // Hash doesn't contain key/value pairs\n            return false;\n        }\n\n        const parameters: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n        return !!(\n            parameters.code ||\n            parameters.error_description ||\n            parameters.error ||\n            parameters.state\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InteractionType } from \"./BrowserConstants\";\nimport { StringUtils, ClientAuthError, ICrypto, RequestStateObject, ProtocolUtils, ServerAuthorizationCodeResponse, UrlString } from \"@azure/msal-common\";\n\nexport type BrowserStateObject = {\n    interactionType: InteractionType\n};\n\nexport class BrowserProtocolUtils {\n\n    /**\n     * Extracts the BrowserStateObject from the state string.\n     * @param browserCrypto \n     * @param state \n     */\n    static extractBrowserRequestState(browserCrypto: ICrypto, state: string): BrowserStateObject | null {\n        if (StringUtils.isEmpty(state)) {\n            return null;\n        }\n\n        try {\n            const requestStateObj: RequestStateObject = ProtocolUtils.parseRequestState(browserCrypto, state);\n            return requestStateObj.libraryState.meta as BrowserStateObject;\n        } catch (e) {\n            throw ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n\n    /**\n     * Parses properties of server response from url hash\n     * @param locationHash Hash from url\n     */\n    static parseServerResponseFromHash(locationHash: string): ServerAuthorizationCodeResponse {\n        if (!locationHash) {\n            return {};\n        }\n        \n        const hashUrlString = new UrlString(locationHash);\n        return UrlString.getDeserializedHash(hashUrlString.getHash());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, PersistentCacheKeys, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AccountEntity, IdTokenEntity, AccessTokenEntity, RefreshTokenEntity, AppMetadataEntity, CacheManager, ServerTelemetryEntity, ThrottlingEntity, ProtocolUtils, Logger, AuthorityMetadataEntity, DEFAULT_CRYPTO_IMPLEMENTATION, AccountInfo, ActiveAccountFilters, CcsCredential, CcsCredentialType, IdToken, ValidCredentialType, ClientAuthError } from \"@azure/msal-common\";\nimport { CacheOptions } from \"../config/Configuration\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserCacheLocation, InteractionType, TemporaryCacheKeys, InMemoryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserStorage } from \"./BrowserStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\nimport { IWindowStorage } from \"./IWindowStorage\";\nimport { BrowserProtocolUtils } from \"../utils/BrowserProtocolUtils\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nexport class BrowserCacheManager extends CacheManager {\n\n    // Cache configuration, either set by user or default values.\n    protected cacheConfig: Required<CacheOptions>;\n    // Window storage object (either local or sessionStorage)\n    protected browserStorage: IWindowStorage<string>;\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\n    protected internalStorage: MemoryStorage<string>;\n    // Temporary cache\n    protected temporaryCacheStorage: IWindowStorage<string>;\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\n    protected logger: Logger;\n\n    // Cookie life calculation (hours * minutes * seconds * ms)\n    protected readonly COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\n    constructor(clientId: string, cacheConfig: Required<CacheOptions>, cryptoImpl: ICrypto, logger: Logger) {\n        super(clientId, cryptoImpl);\n\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.cacheLocation);\n\n        // Migrate any cache entries from older versions of MSAL.\n        this.migrateCacheEntries();\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    protected setupBrowserStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(cacheLocation);\n                } catch (e) {\n                    this.logger.verbose(e);\n                    break;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                break;\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n\n    /**\n     *\n     * @param cacheLocation\n     */\n    protected setupTemporaryCacheStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(BrowserCacheLocation.SessionStorage);\n                } catch (e) {\n                    this.logger.verbose(e);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntries(): void {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\n\n        keysToMigrate.forEach((cacheKey:string, index: number) => this.migrateCacheEntry(cacheKey, values[index]));\n    }\n\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntry(newKey: string, value: string|null): void {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    protected validateAndParseJson(jsonValue: string): object | null {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return (parsedJson && typeof parsedJson === \"object\") ? parsedJson : null;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key: string): string | null {\n        return this.browserStorage.getItem(key);\n    }\n\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key: string, value: string): void {\n        this.browserStorage.setItem(key, value);\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey: string): AccountEntity | null {\n        const account = this.getItem(accountKey);\n        if (!account) {\n            return null;\n        }\n\n        const parsedAccount = this.validateAndParseJson(account);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            return null;\n        }\n\n        return CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedAccount);\n    }\n\n    /**\n     * set account entity in the platform cache\n     * @param key\n     * @param value\n     */\n    setAccount(account: AccountEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n    }\n\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !IdTokenEntity.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\n        return CacheManager.toObject(new IdTokenEntity(), parsedIdToken);\n    }\n\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken: IdTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = idToken.generateCredentialKey();\n\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n    }\n\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (!parsedAccessToken || !AccessTokenEntity.isAccessTokenEntity(parsedAccessToken)) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\n        return CacheManager.toObject(new AccessTokenEntity(), parsedAccessToken);\n    }\n\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken: AccessTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\n        const accessTokenKey = accessToken.generateCredentialKey();\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n    }\n\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(refreshTokenKey: string): RefreshTokenEntity | null {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (!parsedRefreshToken || !RefreshTokenEntity.isRefreshTokenEntity(parsedRefreshToken)) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\n        return CacheManager.toObject(new RefreshTokenEntity(), parsedRefreshToken);\n    }\n\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\n        const refreshTokenKey = refreshToken.generateCredentialKey();\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n    }\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata || !AppMetadataEntity.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return CacheManager.toObject(new AppMetadataEntity(), parsedMetadata);\n    }\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(serverTelemetryKey: string): ServerTelemetryEntity | null {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata || !ServerTelemetryEntity.isServerTelemetryEntity(serverTelemetryKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return CacheManager.toObject(new ServerTelemetryEntity(), parsedMetadata);\n    }\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(serverTelemetryKey: string, serverTelemetry: ServerTelemetryEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadata(key: string) : AuthorityMetadataEntity | null {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (parsedMetadata && AuthorityMetadataEntity.isAuthorityMetadataEntity(key, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\n            return CacheManager.toObject(new AuthorityMetadataEntity(), parsedMetadata);\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadataKeys(): Array<string> {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\n    }\n\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata(): [string, string] {\n        const sku = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) || Constants.EMPTY_STRING;\n        const version = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) || Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n\n    /**\n     * Gets the active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        const activeAccountKeyFilters = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\n        if (!activeAccountValueFilters) { \n            // if new active account cache type isn't found, it's an old version, so look for that instead\n            this.logger.trace(\"No active account filters cache schema found, looking for legacy schema\");\n            const activeAccountKeyLocal = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\n            if(!activeAccountValueLocal) {\n                this.logger.trace(\"No active account found\");\n                return null;\n            }\n            const activeAccount = this.getAccountInfoByFilter({localAccountId: activeAccountValueLocal})[0] || null;\n            if(activeAccount) {\n                this.logger.trace(\"Legacy active account cache schema found\");\n                this.logger.trace(\"Adding active account filters cache schema\");\n                this.setActiveAccount(activeAccount);\n                return activeAccount;\n            }\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(activeAccountValueFilters) as AccountInfo;\n        if(activeAccountValueObj) {\n            this.logger.trace(\"Active account filters schema found\");\n            return this.getAccountInfoByFilter({\n                homeAccountId: activeAccountValueObj.homeAccountId,\n                localAccountId: activeAccountValueObj.localAccountId\n            })[0] || null;\n        }\n        this.logger.trace(\"No active account found\");\n        return null;\n    }\n\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        const activeAccountKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountKeyLocal = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue: ActiveAccountFilters = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId\n            };\n            this.browserStorage.setItem(activeAccountKey, JSON.stringify(activeAccountValue));\n            this.browserStorage.setItem(activeAccountKeyLocal, account.localAccountId);\n        } else {\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\n            this.browserStorage.removeItem(activeAccountKey);\n            this.browserStorage.removeItem(activeAccountKeyLocal);\n        }\n    }\n\n    /**\n     * Gets a list of accounts that match all of the filters provided\n     * @param account\n     */\n    getAccountInfoByFilter(accountFilter: Partial<Omit<AccountInfo, \"idTokenClaims\"|\"name\">>): AccountInfo[] {\n        const allAccounts = this.getAllAccounts();\n        return allAccounts.filter((accountObj) => {\n            if (accountFilter.username && accountFilter.username.toLowerCase() !== accountObj.username.toLowerCase()) {\n                return false;\n            }\n\n            if (accountFilter.homeAccountId && accountFilter.homeAccountId !== accountObj.homeAccountId) {\n                return false;\n            }\n\n            if (accountFilter.localAccountId && accountFilter.localAccountId !== accountObj.localAccountId) {\n                return false;\n            }\n\n            if (accountFilter.tenantId && accountFilter.tenantId !== accountObj.tenantId) {\n                return false;\n            }\n\n            if (accountFilter.environment && accountFilter.environment !== accountObj.environment) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * Checks the cache for accounts matching loginHint or SID\n     * @param loginHint\n     * @param sid\n     */\n    getAccountInfoByHints(loginHint?: string, sid?: string): AccountInfo | null {\n        const matchingAccounts = this.getAllAccounts().filter((accountInfo) => {\n            if (sid) {\n                const accountSid = accountInfo.idTokenClaims && accountInfo.idTokenClaims[\"sid\"];\n                return sid === accountSid;\n            }\n\n            if (loginHint) {\n                return loginHint === accountInfo.username;\n            }\n\n            return false;\n        });\n\n        if (matchingAccounts.length === 1) {\n            return matchingAccounts[0];\n        } else if (matchingAccounts.length > 1) {\n            throw ClientAuthError.createMultipleMatchingAccountsInCacheError();\n        }\n\n        return null;\n    }\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (!parsedThrottlingCache || !ThrottlingEntity.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return CacheManager.toObject(new ThrottlingEntity(), parsedThrottlingCache);\n    }\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(throttlingCacheKey: string, throttlingCache: ThrottlingEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\n                return itemCookie;\n            }\n        }\n\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (this.cacheConfig.cacheLocation === BrowserCacheLocation.LocalStorage) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\n                    return item;\n                }\n            }\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\n        return value;\n    }\n\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(cacheKey: string, value: string, generateKey?: boolean): void {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\n            this.setItemCookie(key, value);\n        }\n    }\n\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key: string): boolean {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\n            this.clearItemCookie(key);\n        }\n        return true;\n    }\n\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key: string): boolean {\n        return this.browserStorage.containsKey(key) || this.temporaryCacheStorage.containsKey(key);\n    }\n\n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys()\n        ];\n    }\n\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear(): Promise<void> {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey: string) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if ((this.browserStorage.containsKey(cacheKey) || this.temporaryCacheStorage.containsKey(cacheKey)) && ((cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1) || (cacheKey.indexOf(this.clientId) !== -1))) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        this.internalStorage.clear();\n    }\n\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName: string): string {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i: number = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\n            }\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies(): void {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie: string): void => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName: string): void {\n        this.setItemCookie(cookieName, Constants.EMPTY_STRING, -1);\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\n        return expr.toUTCString();\n    }\n\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache(): object {\n        return this.browserStorage;\n    }\n\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache(): void {\n        // sets nothing\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key: string): string {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n\n        return JSON.stringify(key);\n    }\n\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString: string): string {\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(`${TemporaryCacheKeys.AUTHORITY}.${stateId}`);\n    }\n\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString: string): string {\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(`${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\n    }\n\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString: string): string {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\n    }\n\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState: string): string | null {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(state: string, nonce: string, authorityInstance: string, loginHint: string, account: AccountInfo|null): void {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n\n        if (account) {\n            const ccsCredential: CcsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        } else if (!StringUtils.isEmpty(loginHint)) {\n            const ccsCredential: CcsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n    }\n\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state: string): void {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (!StringUtils.isEmpty(state)) {\n            this.getKeys().forEach(key => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n        }\n\n        // delete generic interactive request parameters\n        if (state) {\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n        this.setInteractionInProgress(false);\n    }\n\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString\n     */\n    cleanRequestByState(stateString: string): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType\n     */\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n\n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = BrowserProtocolUtils.extractBrowserRequestState(this.cryptoImpl, stateValue);\n            if (parsedState && parsedState.interactionType === interactionType) {\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest, browserCrypto: ICrypto): void {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n\n        const encodedValue = browserCrypto.base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\n    }\n\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state: string, browserCrypto: ICrypto): CommonAuthorizationCodeRequest {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, true);\n        if (!encodedTokenRequest) {\n            throw BrowserAuthError.createNoTokenRequestCacheError();\n        }\n\n        const parsedRequest = this.validateAndParseJson(browserCrypto.base64Decode(encodedTokenRequest)) as CommonAuthorizationCodeRequest;\n        if (!parsedRequest) {\n            throw BrowserAuthError.createUnableToParseTokenRequestCacheError();\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n\n        // Get cached authority and use if no authority is cached with request.\n        if (StringUtils.isEmpty(parsedRequest.authority)) {\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw BrowserAuthError.createNoCachedAuthorityError();\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n\n        return parsedRequest;\n    }\n\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest(): NativeTokenRequest | null {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, true);\n        if (!cachedRequest) {\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\n            return null;\n        }\n\n        const parsedRequest = this.validateAndParseJson(cachedRequest) as NativeTokenRequest;\n        if (!parsedRequest) {\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\n            return null;\n        }\n\n        return parsedRequest;\n    }\n\n    isInteractionInProgress(matchClientId?: boolean): boolean {\n        const clientId = this.getInteractionInProgress();\n\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    getInteractionInProgress(): string | null {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n\n    setInteractionInProgress(inProgress: boolean): void {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw BrowserAuthError.createInteractionInProgressError();\n            } else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        } else if (!inProgress && this.getInteractionInProgress() === this.clientId) {\n            this.removeItem(key);\n        }\n    }\n\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     */\n    getLegacyLoginHint(): string | null {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ADAL_ID_TOKEN);\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ID_TOKEN, true);\n        if (msalIdTokenString) {\n            this.removeItem(this.generateCacheKey(PersistentCacheKeys.ID_TOKEN));\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const cachedIdToken = new IdToken(cachedIdTokenString, this.cryptoImpl);\n            if (cachedIdToken.claims && cachedIdToken.claims.preferred_username) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\n                return cachedIdToken.claims.preferred_username;\n            }\n            else if (cachedIdToken.claims && cachedIdToken.claims.upn) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\n                return cachedIdToken.claims.upn;\n            }\n            else {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(currentCacheKey: string, credential: ValidCredentialType): string {\n        const updatedCacheKey = credential.generateCredentialKey();\n\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\n                return updatedCacheKey;\n            } else {\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\n            }\n        }\n\n        return currentCacheKey;\n    }\n}\n\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (clientId: string, logger: Logger): BrowserCacheManager => {\n    const cacheOptions = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false\n    };\n    return new BrowserCacheManager(clientId, cacheOptions, DEFAULT_CRYPTO_IMPLEMENTATION, logger);\n};\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-common\";\nexport const version = \"7.3.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto\";\nimport { AuthError } from \"../error/AuthError\";\nimport { ILoggerCallback, LogLevel } from \"../logger/Logger\";\nimport { Constants } from \"../utils/Constants\";\nimport { version } from \"../packageMetadata\";\nimport { Authority } from \"../authority/Authority\";\nimport { AzureCloudInstance } from \"../authority/AuthorityOptions\";\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { ClientCredentials } from \"../account/ClientCredentials\";\n\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n/**\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - authOptions                - Authentication for application\n * - cryptoInterface            - Implementation of crypto functions\n * - libraryInfo                - Library metadata\n * - telemetry                  - Telemetry options and data\n * - loggerOptions              - Logging for application\n * - networkInterface           - Network implementation\n * - storageInterface           - Storage implementation\n * - systemOptions              - Additional library options\n * - clientCredentials          - Credentials options for confidential clients\n */\nexport type ClientConfiguration = {\n    authOptions: AuthOptions,\n    systemOptions?: SystemOptions,\n    loggerOptions?: LoggerOptions,\n    storageInterface?: CacheManager,\n    networkInterface?: INetworkModule,\n    cryptoInterface?: ICrypto,\n    clientCredentials?: ClientCredentials,\n    libraryInfo?: LibraryInfo\n    telemetry?: TelemetryOptions,\n    serverTelemetryManager?: ServerTelemetryManager | null,\n    persistencePlugin?: ICachePlugin | null,\n    serializableCache?: ISerializableTokenCache | null,        \n};\n\nexport type CommonClientConfiguration = {\n    authOptions: Required<AuthOptions>,\n    systemOptions: Required<SystemOptions>,\n    loggerOptions : Required<LoggerOptions>,\n    storageInterface: CacheManager,\n    networkInterface : INetworkModule,\n    cryptoInterface : Required<ICrypto>,\n    libraryInfo : LibraryInfo,\n    telemetry: Required<TelemetryOptions>,\n    serverTelemetryManager: ServerTelemetryManager | null,\n    clientCredentials: ClientCredentials,\n    persistencePlugin: ICachePlugin | null,\n    serializableCache: ISerializableTokenCache | null,     \n};\n\n/**\n * Use this to configure the auth options in the ClientConfiguration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n * - skipAuthorityMetadataCache      - A flag to choose whether to use or not use the local metadata cache during authority initialization. Defaults to false.\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority: Authority;\n    clientCapabilities?: Array<string>;\n    azureCloudOptions?: AzureCloudOptions;\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/**\n * Use this to configure token renewal info in the Configuration object\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n */\nexport type SystemOptions = {\n    tokenRenewalOffsetSeconds?: number;\n    preventCorsPreflight?: boolean;\n    proxyUrl?: string;\n};\n\n/**\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\n *\n * - loggerCallback                - Callback for logger\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\n * - logLevel                      - Sets the level at which logging happens\n * - correlationId                 - Sets the correlationId printed by the logger\n */\nexport type LoggerOptions = {\n    loggerCallback?: ILoggerCallback,\n    piiLoggingEnabled?: boolean,\n    logLevel?: LogLevel,\n    correlationId?: string\n};\n\n/**\n * Library-specific options\n */\nexport type LibraryInfo = {\n    sku: string,\n    version: string,\n    cpu: string,\n    os: string\n};\n\n/**\n * AzureCloudInstance specific options\n *\n * - azureCloudInstance             - string enum providing short notation for soverign and public cloud authorities\n * - tenant                         - provision to provide the tenant info\n */\nexport type AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance;\n    tenant?: string,\n};\n\nexport type TelemetryOptions = {\n    application: ApplicationTelemetry;\n};\n\n/**\n * Telemetry information sent on request\n * - appName: Unique string name of an application\n * - appVersion: Version of the application using MSAL\n */\nexport type ApplicationTelemetry = {\n    appName: string;\n    appVersion: string;\n};\n\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n    proxyUrl: Constants.EMPTY_STRING\n};\n\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING\n};\n\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\n    async sendGetRequestAsync<T>(): Promise<T> {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async sendPostRequestAsync<T>(): Promise<T> {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n};\n\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING\n};\n\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined\n};\n\nconst DEFAULT_AZURE_CLOUD_OPTIONS: AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`\n};\n\nconst DEFAULT_TELEMETRY_OPTIONS: Required<TelemetryOptions> = {\n    application: {\n        appName: \"\",\n        appVersion: \"\"\n    }\n};\n\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nexport function buildClientConfiguration(\n    {\n        authOptions: userAuthOptions,\n        systemOptions: userSystemOptions,\n        loggerOptions: userLoggerOption,\n        storageInterface: storageImplementation,\n        networkInterface: networkImplementation,\n        cryptoInterface: cryptoImplementation,\n        clientCredentials: clientCredentials,\n        libraryInfo: libraryInfo,\n        telemetry: telemetry,\n        serverTelemetryManager: serverTelemetryManager,\n        persistencePlugin: persistencePlugin,\n        serializableCache: serializableCache,                 \n    }: ClientConfiguration): CommonClientConfiguration {\n\n    const loggerOptions = { ...DEFAULT_LOGGER_IMPLEMENTATION, ...userLoggerOption };\n\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION),\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,              \n    };\n}\n\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"../error/AuthError\";\nimport { NetworkResponse } from \"./NetworkManager\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>,\n    body?: string;\n    proxyUrl?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions, cancellationToken?: number): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\n    },\n    sendPostRequestAsync: () => {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options)\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw BrowserAuthError.createGetRequestFailedError(e, url);\n            } else {\n                throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: await response.json() as T,\n                status: response.status\n            };\n        } catch (e) {\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        const reqBody = (options && options.body) || Constants.EMPTY_STRING;\n\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw BrowserAuthError.createPostRequestFailedError(e, url);\n            } else {\n                throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: await response.json() as T,\n                status: response.status\n            };\n        } catch (e) {\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders \n     */\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n\n    private getHeaderDict(headers: Headers): Record<string, string> {\n        const headerDict: Record<string, string> = {};\n        headers.forEach((value: string, key: string) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This client implements the XMLHttpRequest class to send GET and POST requests.\n */\nexport class XhrClient implements INetworkModule {\n\n    /**\n     * XhrClient for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\n    }\n\n    /**\n     * XhrClient for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\n    }\n\n    /**\n     * Helper for XhrClient requests.\n     * @param url \n     * @param method \n     * @param options \n     */\n    private sendRequestAsync<T>(url: string, method: HTTP_REQUEST_TYPE, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return new Promise<NetworkResponse<T>>((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, /* async: */ true);\n            this.setXhrHeaders(xhr, options);\n            xhr.onload = (): void => {\n                if (xhr.status < 200 || xhr.status >= 300) {\n                    if (method === HTTP_REQUEST_TYPE.POST) {\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    } else {\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                }\n                try {\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\n                    const networkResponse: NetworkResponse<T> = {\n                        headers: this.getHeaderDict(xhr),\n                        body: jsonResponse,\n                        status: xhr.status\n                    };\n                    resolve(networkResponse);\n                } catch (e) {\n                    reject(BrowserAuthError.createFailedToParseNetworkResponseError(url));\n                }\n            };\n\n            xhr.onerror = (): void => {\n                if (window.navigator.onLine) {\n                    if (method === HTTP_REQUEST_TYPE.POST) {\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    } else {\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                } else {\n                    reject(BrowserAuthError.createNoNetworkConnectivityError());\n                }\n            };\n\n            if (method === HTTP_REQUEST_TYPE.POST && options && options.body) {\n                xhr.send(options.body);\n            } else if (method === HTTP_REQUEST_TYPE.GET) {\n                xhr.send();\n            } else {\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\n            }\n        });\n    }\n\n    /**\n     * Helper to set XHR headers for request.\n     * @param xhr \n     * @param options \n     */\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\n        if (options && options.headers) {\n            const headers = options.headers;\n            Object.keys(headers).forEach((key: string) => {\n                xhr.setRequestHeader(key, headers[key]);\n            });\n        }\n    }\n\n    /**\n     * Gets a string map of the headers received in the response.\n     * \n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\n     * @param xhr \n     */\n    private getHeaderDict(xhr: XMLHttpRequest): Record<string, string> {\n        const headerString = xhr.getAllResponseHeaders();\n        const headerArr = headerString.trim().split(/[\\r\\n]+/);\n        const headerDict: Record<string, string> = {};\n        headerArr.forEach((value: string) => {\n            const parts = value.split(\": \");\n            const headerName = parts.shift();\n            const headerVal = parts.join(\": \");\n            if (headerName && headerVal) {\n                headerDict[headerName] = headerVal;\n            }\n        });\n\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, INetworkModule, UrlString } from \"@azure/msal-common\";\nimport { FetchClient } from \"../network/FetchClient\";\nimport { XhrClient } from \"../network/XhrClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, BrowserConstants } from \"./BrowserConstants\";\n\n/**\n * Utility class for browser specific functions\n */\nexport class BrowserUtils {\n\n    // #region Window Navigation and URL management\n\n    /**\n     * Clears hash from window url.\n     */\n    static clearHash(contentWindow: Window): void {\n        // Office.js sets history.replaceState to null\n        contentWindow.location.hash = Constants.EMPTY_STRING;\n        if (typeof contentWindow.history.replaceState === \"function\") {\n            // Full removes \"#\" from url\n            contentWindow.history.replaceState(null, Constants.EMPTY_STRING, `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\n        }\n    }\n\n    /**\n     * Replaces current hash with hash from provided url\n     */\n    static replaceHash(url: string): void {\n        const urlParts = url.split(\"#\");\n        urlParts.shift(); // Remove part before the hash\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Returns boolean of whether the current window is in an iframe or not.\n     */\n    static isInIframe(): boolean {\n        return window.parent !== window;\n    }\n\n    /**\n     * Returns boolean of whether or not the current window is a popup opened by msal\n     */\n    static isInPopup(): boolean {\n        return typeof window !== \"undefined\" && !!window.opener && \n            window.opener !== window && \n            typeof window.name === \"string\" && \n            window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0;\n    }\n\n    // #endregion\n\n    /**\n     * Returns current window URL as redirect uri\n     */\n    static getCurrentUri(): string {\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\n    }\n\n    /**\n     * Gets the homepage url for the current window location.\n     */\n    static getHomepage(): string {\n        const currentUrl = new UrlString(window.location.href);\n        const urlComponents = currentUrl.getUrlComponents();\n        return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n    }\n\n    /**\n     * Returns best compatible network client object. \n     */\n    static getBrowserNetworkClient(): INetworkModule {\n        if (window.fetch && window.Headers) {\n            return new FetchClient();\n        } else {\n            return new XhrClient();\n        }\n    }\n\n    /**\n     * Throws error if we have completed an auth and are \n     * attempting another auth request inside an iframe.\n     */\n    static blockReloadInHiddenIframes(): void {\n        const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\n        // return an error if called from the hidden iframe created by the msal js silent calls\n        if (isResponseHash && BrowserUtils.isInIframe()) {\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\n        }\n    }\n\n    /**\n     * Block redirect operations in iframes unless explicitly allowed\n     * @param interactionType Interaction type for the request\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n     */\n    static blockRedirectInIframe(interactionType: InteractionType, allowRedirectInIframe: boolean): void {\n        const isIframedApp = BrowserUtils.isInIframe();\n        if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n            throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\n        }\n    }\n\n    /**\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\n     */\n    static blockAcquireTokenInPopups(): void {\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n        if (BrowserUtils.isInPopup()) {\n            throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\n        }\n    }\n\n    /**\n     * Throws error if token requests are made in non-browser environment\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\n     */\n    static blockNonBrowserEnvironment(isBrowserEnvironment: boolean): void {\n        if (!isBrowserEnvironment) {\n            throw BrowserAuthError.createNonBrowserEnvironmentError();\n        }\n    }\n\n    /**\n     * Throws error if native brokering is enabled but initialize hasn't been called\n     * @param allowNativeBroker \n     * @param initialized \n     */\n    static blockNativeBrokerCalledBeforeInitialized(allowNativeBroker: boolean, initialized: boolean): void {\n        if (allowNativeBroker && !initialized) {\n            throw BrowserAuthError.createNativeBrokerCalledBeforeInitialize();\n        }\n    }\n\n    /**\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\n     */\n    static detectIEOrEdge(): boolean {\n        const ua = window.navigator.userAgent;\n        const msie = ua.indexOf(\"MSIE \");\n        const msie11 = ua.indexOf(\"Trident/\");\n        const msedge = ua.indexOf(\"Edge/\");\n        const isIE = msie > 0 || msie11 > 0;\n        const isEdge = msedge > 0;\n        return isIE || isEdge;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url \n     * @param options \n     */\n    navigateInternal(url: string, options: NavigationOptions): Promise<boolean>{\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url \n     * @param options \n     */\n    navigateExternal(url: string, options: NavigationOptions): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url \n     * @param options \n     */\n    private static defaultNavigateWindow(url: string, options: NavigationOptions): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SystemOptions, LoggerOptions, INetworkModule, DEFAULT_SYSTEM_OPTIONS, Constants, ProtocolMode, LogLevel, StubbedNetworkModule, AzureCloudInstance, AzureCloudOptions, ApplicationTelemetry } from \"@azure/msal-common\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationClient } from \"../navigation/NavigationClient\";\n\n// Default timeout for popup windows and iframes in milliseconds\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nexport const DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n\n/**\n * Use this to configure the auth options in the Configuration object\n */\nexport type BrowserAuthOptions = {\n    /**\n     * Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n     */\n    clientId: string;\n    /**\n     * You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n     */\n    authority?: string;\n    /**\n     * An array of URIs that are known to be valid. Used in B2C scenarios.\n     */\n    knownAuthorities?: Array<string>;\n    /**\n     * A string containing the cloud discovery response. Used in AAD scenarios.\n     */\n    cloudDiscoveryMetadata?: string;\n    /**\n     * A string containing the .well-known/openid-configuration endpoint response\n     */\n    authorityMetadata?: string;\n    /**\n     * The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n     */\n    redirectUri?: string;\n    /**\n     * The redirect URI where the window navigates after a successful logout.\n     */\n    postLogoutRedirectUri?: string | null;\n    /**\n     * Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\n     */\n    navigateToLoginRequestUrl?: boolean;\n    /**\n     * Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n     */\n    clientCapabilities?: Array<string>;\n    /**\n     * Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n     */\n    protocolMode?: ProtocolMode;\n    /**\n     * Enum that represents the Azure Cloud to use.\n     */\n    azureCloudOptions?: AzureCloudOptions;\n    /**\n     * Flag of whether to use the local metadata cache\n     */\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n */\nexport type CacheOptions = {\n    /**\n     * Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\n     */\n    cacheLocation?: BrowserCacheLocation | string;\n    /**\n     * If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n     */\n    storeAuthStateInCookie?: boolean;\n    /**\n     * If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to false.\n     */\n    secureCookies?: boolean;\n};\n\nexport type BrowserSystemOptions = SystemOptions & {\n    /**\n     * Used to initialize the Logger object (See ClientConfiguration.ts)\n     */\n    loggerOptions?: LoggerOptions;\n    /**\n     * Network interface implementation\n     */\n    networkClient?: INetworkModule;\n    /**\n     * Override the methods used to navigate to other webpages. Particularly useful if you are using a client-side router\n     */\n    navigationClient?: INavigationClient;\n    /**\n     * Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\n     */\n    windowHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\n     */\n    iframeHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe or popup\n     */\n    loadFrameTimeout?: number;\n    /**\n     * Maximum time the library should wait for a frame to load\n     */\n    navigateFrameWait?: number;\n    /**\n     * Time to wait for redirection to occur before resolving promise\n     */\n    redirectNavigationTimeout?: number;\n    /**\n     * Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\n     */\n    asyncPopups?: boolean;\n    /**\n     * Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\n     */\n    allowRedirectInIframe?: boolean;\n    /**\n     * Flag to enable native broker support (e.g. acquiring tokens from WAM on Windows)\n     */\n    allowNativeBroker?: boolean;\n    /**\n     * Sets the timeout for waiting for the native broker handshake to resolve\n     */\n    nativeBrokerHandshakeTimeout?: number;\n};\n\n/**\n * Telemetry Options\n */\nexport type BrowserTelemetryOptions = {\n    /**\n     * Telemetry information sent on request\n     * - appName: Unique string name of an application\n     * - appVersion: Version of the application using MSAL\n     */\n    application?: ApplicationTelemetry;\n};\n\n/**\n * This object allows you to configure important elements of MSAL functionality and is passed into the constructor of PublicClientApplication\n */\nexport type Configuration = {\n    /**\n     * This is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n     */\n    auth: BrowserAuthOptions,\n    /**\n     * This is where you configure cache location and whether to store cache in cookies\n     */\n    cache?: CacheOptions,\n    /**\n     * This is where you can configure the network client, logger, token renewal offset\n     */\n    system?: BrowserSystemOptions,\n    /**\n     * This is where you can configure telemetry data and options\n     */\n    telemetry?: BrowserTelemetryOptions\n};\n\nexport type BrowserConfiguration = {\n    auth: Required<BrowserAuthOptions>,\n    cache: Required<CacheOptions>,\n    system: Required<BrowserSystemOptions>,\n    telemetry: Required<BrowserTelemetryOptions>\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nexport function buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry }: Configuration, isBrowserEnvironment: boolean): BrowserConfiguration {\n\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS: Required<BrowserAuthOptions> = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri: Constants.EMPTY_STRING,\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING\n        },\n        skipAuthorityMetadataCache: false,\n    };\n\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false\n    };\n\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: (): void => {},\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false\n    };\n\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment ? BrowserUtils.getBrowserNetworkClient() : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: isBrowserEnvironment && BrowserUtils.detectIEOrEdge() ? 500 : 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout || DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS\n    };\n\n    const DEFAULT_TELEMETRY_OPTIONS: Required<BrowserTelemetryOptions> = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING\n        }\n    };\n\n    const overlayedConfig: BrowserConfiguration = {\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...userInputAuth },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: { ...DEFAULT_BROWSER_SYSTEM_OPTIONS, ...userInputSystem },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry }\n    };\n    return overlayedConfig;\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport enum EventType {\n    INITIALIZE_START = \"msal:initializeStart\",\n    INITIALIZE_END = \"msal:initializeEnd\",\n    ACCOUNT_ADDED = \"msal:accountAdded\",\n    ACCOUNT_REMOVED = \"msal:accountRemoved\",\n    LOGIN_START = \"msal:loginStart\",\n    LOGIN_SUCCESS = \"msal:loginSuccess\",\n    LOGIN_FAILURE = \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START = \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS = \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE = \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START = \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START = \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS = \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE = \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START = \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS = \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE = \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START = \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END = \"msal:handleRedirectEnd\",\n    POPUP_OPENED = \"msal:popupOpened\",\n    LOGOUT_START = \"msal:logoutStart\",\n    LOGOUT_SUCCESS = \"msal:logoutSuccess\",\n    LOGOUT_FAILURE = \"msal:logoutFailure\",\n    LOGOUT_END = \"msal:logoutEnd\"\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-browser\";\nexport const version = \"2.28.1\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nexport type ReqCnfData = {\n    kid: string;\n    reqCnfString: string;\n    reqCnfHash: string;\n};\n\nenum KeyLocation {\n    SW = \"sw\",\n    UHW = \"uhw\"\n}\n\nexport class PopTokenGenerator {\n\n    private cryptoUtils: ICrypto;\n\n    constructor(cryptoUtils: ICrypto) {\n        this.cryptoUtils = cryptoUtils;\n    }\n\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(request: SignedHttpRequestParameters): Promise<ReqCnfData> {\n        const reqCnf = await this.generateKid(request);\n        const reqCnfString: string = this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n\n        return {\n            kid: reqCnf.kid,\n            reqCnfString, \n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString) \n        };\n    }\n\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW\n        };\n    }\n\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(accessToken: string, keyId: string, request: SignedHttpRequestParameters): Promise<string> {\n        return this.signPayload(accessToken, keyId, request);\n    }\n\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(payload: string, keyId: string, request: SignedHttpRequestParameters, claims?: object): Promise<string> {\n\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce } = request;\n\n        const resourceUrlString = (resourceRequestUri) ? new UrlString(resourceRequestUri) : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return await this.cryptoUtils.signJwt({\n            at: payload,\n            ts: TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: (resourceUrlComponents?.QueryString) ? [[], resourceUrlComponents.QueryString] : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims\n        }, keyId, request.correlationId);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, Logger, AccountEntity, CacheManager } from \"@azure/msal-common\";\nimport { InteractionType } from \"../utils/BrowserConstants\";\nimport { EventCallbackFunction, EventError, EventMessage, EventPayload } from \"./EventMessage\";\nimport { EventType } from \"./EventType\";\n\nexport class EventHandler {\n    // Callback for subscribing to events\n    private eventCallbacks: Map<string, EventCallbackFunction>;\n    private logger: Logger;\n    private browserCrypto: ICrypto;\n    private listeningToStorageEvents: boolean;\n\n    constructor(logger: Logger, browserCrypto: ICrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange = this.handleAccountCacheChange.bind(this);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        if (typeof window !== \"undefined\") {\n            const callbackId = this.browserCrypto.createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n    \n            return callbackId;\n        }\n        \n        return null;\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        } else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n            this.listeningToStorageEvents = false;\n        } else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(eventType: EventType, interactionType?: InteractionType, payload?: EventPayload, error?: EventError): void {\n        if (typeof window !== \"undefined\") {\n            const message: EventMessage = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now()\n            };\n\n            this.logger.info(`Emitting event: ${eventType}`);\n\n            this.eventCallbacks.forEach((callback: EventCallbackFunction, callbackId: string) => {\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n                callback.apply(null, [message]);\n            });\n        }\n    }\n\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    private handleAccountCacheChange(e: StorageEvent): void {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (typeof parsedValue !== \"object\" || !AccountEntity.isAccountEntity(parsedValue)) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedValue);\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\"Account was added to cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            } else if (!e.newValue && e.oldValue) {\n                this.logger.info(\"Account was removed from cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n            }\n        } catch (e) {\n            return;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkResponse } from \"./NetworkManager\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { HeaderNames, CacheSchemaType, ThrottlingConstants, Constants } from \"../utils/Constants\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerError } from \"../error/ServerError\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\nexport class ThrottlingUtils {\n\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\n    }\n\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(cacheManager: CacheManager, thumbprint: RequestThumbprint): void {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\n                return;\n            }\n            throw new ServerError(value.errorCodes?.join(\" \") || Constants.EMPTY_STRING, value.errorMessage, value.subError);\n        }\n    }\n\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(cacheManager: CacheManager, thumbprint: RequestThumbprint, response: NetworkResponse<ServerAuthorizationTokenResponse>): void {\n        if (ThrottlingUtils.checkResponseStatus(response) || ThrottlingUtils.checkResponseForRetryAfter(response)) {\n            const thumbprintValue: ThrottlingEntity = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror\n            };\n            cacheManager.setThrottlingCache(\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\n                thumbprintValue\n            );\n        }\n    }\n\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(response: NetworkResponse<ServerAuthorizationTokenResponse>): boolean {\n        return response.status === 429 || response.status >= 500 && response.status < 600;\n    }\n\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(response: NetworkResponse<ServerAuthorizationTokenResponse>): boolean {\n        if (response.headers) {\n            return response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) && (response.status < 200 || response.status >= 300);\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime: number): number {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(Math.min(\n            currentSeconds + (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\n            currentSeconds + ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\n        ) * 1000);\n    }\n\n    static removeThrottle(cacheManager: CacheManager, clientId: string, request: BaseAuthRequest, homeAccountIdentifier?: string): boolean {\n        const thumbprint: RequestThumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        return cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions } from \"./INetworkModule\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingUtils } from \"./ThrottlingUtils\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { AuthError } from \"../error/AuthError\";\n\nexport type NetworkResponse<T> = {\n    headers: Record<string, string>;\n    body: T;\n    status: number;\n};\n\nexport class NetworkManager {\n    private networkClient: INetworkModule;\n    private cacheManager: CacheManager;\n\n    constructor(networkClient: INetworkModule, cacheManager: CacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest<T>(thumbprint: RequestThumbprint, tokenEndpoint: string, options: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync<T>(tokenEndpoint, options);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw ClientAuthError.createNetworkError(tokenEndpoint, e);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfiguration, buildClientConfiguration, CommonClientConfiguration } from \"../config/ClientConfiguration\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkManager, NetworkResponse } from \"../network/NetworkManager\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Authority } from \"../authority/Authority\";\nimport { Logger } from \"../logger/Logger\";\nimport { Constants, HeaderNames } from \"../utils/Constants\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { version, name } from \"../packageMetadata\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\n\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n */\nexport abstract class BaseClient {\n    // Logger object\n    public logger: Logger;\n\n    // Application config\n    protected config: CommonClientConfiguration;\n\n    // Crypto Interface\n    protected cryptoUtils: ICrypto;\n\n    // Storage Interface\n    protected cacheManager: CacheManager;\n\n    // Network Interface\n    protected networkClient: INetworkModule;\n\n    // Server Telemetry Manager\n    protected serverTelemetryManager: ServerTelemetryManager | null;\n\n    // Network Manager\n    protected networkManager: NetworkManager;\n\n    // Default authority object\n    public authority: Authority;\n\n    // Performance telemetry client\n    protected performanceClient?: IPerformanceClient;\n\n    protected constructor(configuration: ClientConfiguration, performanceClient?: IPerformanceClient) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(this.networkClient, this.cacheManager);\n\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    protected createTokenRequestHeaders(ccsCred?: CcsCredential): Record<string, string> {        \n        const headers: Record<string, string> = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }        \n        return headers;\n    }\n\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    protected async executePostToTokenEndpoint(tokenEndpoint: string, queryString: string, headers: Record<string, string>, thumbprint: RequestThumbprint): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        const response = await this.networkManager.sendPostRequest<ServerAuthorizationTokenResponse>(\n            thumbprint,\n            tokenEndpoint,\n            { body: queryString, headers: headers, proxyUrl: this.config.systemOptions.proxyUrl }\n        );\n\n        if (this.config.serverTelemetryManager && response.status < 500 && response.status !== 429) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n\n        return response;\n    }\n\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    updateAuthority(updatedAuthority: Authority): void {\n        if (!updatedAuthority.discoveryComplete()) {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Updated authority has not completed endpoint discovery.\");\n        }\n        this.authority = updatedAuthority;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { PromptValue, CodeChallengeMethodValues} from \"../utils/Constants\";\nimport { StringDict } from \"../utils/MsalTypes\";\n\n/**\n * Validates server consumable params from the \"request\" objects\n */\nexport class RequestValidator {\n\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri: string) : void {\n        if (StringUtils.isEmpty(redirectUri)) {\n            throw ClientConfigurationError.createRedirectUriEmptyError();\n        }\n    }\n\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt: string) : void {\n        const promptValues = [];\n\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n\n        if (promptValues.indexOf(prompt) < 0) {\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\n        }\n    }\n\n    static validateClaims(claims: string) : void {\n        try {\n            JSON.parse(claims);\n        } catch(e) {\n            throw ClientConfigurationError.createInvalidClaimsRequestError();\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(codeChallenge: string, codeChallengeMethod: string) : void  {\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        } else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod: string) : void {\n        if (\n            [\n                CodeChallengeMethodValues.PLAIN,\n                CodeChallengeMethodValues.S256\n            ].indexOf(codeChallengeMethod) < 0\n        ) {\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\n        }\n    }\n\n    /**\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(eQParams: StringDict, queryParams: Map<string, string>) : StringDict {\n        if (!eQParams) {\n            return {};\n        }\n\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n\n        return eQParams;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AADServerParamKeys, Constants, ResponseMode, SSOTypes, CLIENT_INFO, AuthenticationScheme, ClaimsRequestKeys, PasswordGrantConstants, OIDC_DEFAULT_SCOPES, ThrottlingConstants, HeaderNames} from \"../utils/Constants\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { StringDict } from \"../utils/MsalTypes\";\nimport { RequestValidator } from \"./RequestValidator\";\nimport { ApplicationTelemetry, LibraryInfo } from \"../config/ClientConfiguration\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ClientInfo } from \"../account/ClientInfo\";\n\nexport class RequestParameterBuilder {\n\n    private parameters: Map<string, string>;\n\n    constructor() {\n        this.parameters = new Map<string, string>();\n    }\n\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE)\n        );\n    }\n\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(`${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`)\n        );\n    }\n\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode?: ResponseMode): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_MODE,\n            encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY)\n        );\n    }\n\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker(): void {\n        this.parameters.set(\n            AADServerParamKeys.NATIVE_BROKER,\n            encodeURIComponent(\"1\")\n        );\n    }\n\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(scopes: string[], addOidcScopes: boolean = true): void {\n        const requestScopes = addOidcScopes ? [...scopes || [], ...OIDC_DEFAULT_SCOPES] : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\n    }\n\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\n    }\n\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\n    }\n\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\n    }\n\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint: string): void {\n        this.parameters.set(AADServerParamKeys.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\n    }\n\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint: string): void {\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\n    }\n\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint: string): void {\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint: string): void {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo: ClientInfo): void {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\n    }\n\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid: string): void {\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\n    }\n\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims?: string, clientCapabilities?: Array<string>): void {\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(mergedClaims));\n    }\n\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n    }\n\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo: LibraryInfo): void {\n        // Telemetry Info\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\n        if (libraryInfo.os) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\n        }\n    }\n\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry: ApplicationTelemetry): void {\n        if (appTelemetry?.appName) {\n            this.parameters.set(AADServerParamKeys.X_APP_NAME, appTelemetry.appName);\n        }\n\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(AADServerParamKeys.X_APP_VER, appTelemetry.appVersion);\n        }\n    }\n\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt: string): void {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(`${AADServerParamKeys.PROMPT}`, encodeURIComponent(prompt));\n    }\n\n    /**\n     * add state\n     * @param state\n     */\n    addState(state: string): void {\n        if (!StringUtils.isEmpty(state)) {\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\n        }\n    }\n\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce: string): void {\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\n    }\n\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n        } else {\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        }\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken: string): void {\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\n    }\n\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier: string): void {\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\n    }\n\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\n    }\n\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion: string): void {\n        if (!StringUtils.isEmpty(clientAssertion)) {\n            this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\n        }\n    }\n\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType: string): void {\n        if (!StringUtils.isEmpty(clientAssertionType)) {\n            this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\n        }\n    }\n\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion: string): void {\n        this.parameters.set(AADServerParamKeys.OBO_ASSERTION, encodeURIComponent(oboAssertion));\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse: string): void {\n        this.parameters.set(AADServerParamKeys.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType: string): void {\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\n    }\n\n    /**\n     * add client info\n     *\n     */\n    addClientInfo(): void {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n\n    /**\n     * add extraQueryParams\n     * @param eQparams\n     */\n    addExtraQueryParameters(eQparams: StringDict): void {\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\n        Object.keys(eQparams).forEach((key) => {\n            this.parameters.set(key, eQparams[key]);\n        });\n    }\n\n    addClientCapabilitiesToClaims(claims?: string, clientCapabilities?: Array<string>): string {\n        let mergedClaims: object;\n\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        } else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            } catch(e) {\n                throw ClientConfigurationError.createInvalidClaimsRequestError();\n            }\n        }\n\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)){\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {\n                values: clientCapabilities\n            };\n        }\n\n        return JSON.stringify(mergedClaims);\n    }\n\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username: string): void {\n        this.parameters.set(PasswordGrantConstants.username, encodeURIComponent(username));\n    }\n\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password: string): void {\n        this.parameters.set(PasswordGrantConstants.password, encodeURIComponent(password));\n    }\n\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString: string): void {\n        if (!StringUtils.isEmpty(cnfString)) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.POP);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(cnfString));\n        }\n    }\n\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString: string): void {\n        if(!StringUtils.isEmpty(sshJwkString)) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.SSH);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(sshJwkString));\n        }\n    }\n\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager: ServerTelemetryManager): void {\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\n        this.parameters.set(AADServerParamKeys.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\n    }\n\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling(): void {\n        this.parameters.set(AADServerParamKeys.X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\n    }\n\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint: string): void {\n        this.parameters.set(AADServerParamKeys.LOGOUT_HINT, encodeURIComponent(logoutHint));\n    }\n\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString(): string {\n        const queryParameterArray: Array<string> = new Array<string>();\n\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n\n        return queryParameterArray.join(\"&\");\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IdTokenEntity } from \"./IdTokenEntity\";\nimport { AccessTokenEntity } from \"./AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"./RefreshTokenEntity\";\nimport { AccountEntity } from \"./AccountEntity\";\nimport { AppMetadataEntity } from \"./AppMetadataEntity\";\n\nexport class CacheRecord {\n    account: AccountEntity | null;\n    idToken: IdTokenEntity | null;\n    accessToken: AccessTokenEntity | null;\n    refreshToken: RefreshTokenEntity | null;\n    appMetadata: AppMetadataEntity | null;\n\n    constructor(accountEntity?: AccountEntity | null, idTokenEntity?: IdTokenEntity | null, accessTokenEntity?: AccessTokenEntity | null, refreshTokenEntity?: RefreshTokenEntity | null, appMetadataEntity?: AppMetadataEntity | null) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse\";\nimport { buildClientInfo} from \"../account/ClientInfo\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ServerAuthorizationCodeResponse } from \"./ServerAuthorizationCodeResponse\";\nimport { Logger } from \"../logger/Logger\";\nimport { ServerError } from \"../error/ServerError\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AuthenticationResult } from \"./AuthenticationResult\";\nimport { AccountEntity } from \"../cache/entities/AccountEntity\";\nimport { Authority } from \"../authority/Authority\";\nimport { AuthorityType } from \"../authority/AuthorityType\";\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity\";\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity\";\nimport { InteractionRequiredAuthError } from \"../error/InteractionRequiredAuthError\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils\";\nimport { AuthenticationScheme, Constants, THE_FAMILY_ID } from \"../utils/Constants\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/**\n * Class that handles response parsing.\n */\nexport class ResponseHandler {\n    private clientId: string;\n    private cacheStorage: CacheManager;\n    private cryptoObj: ICrypto;\n    private logger: Logger;\n    private homeAccountIdentifier: string;\n    private serializableCache: ISerializableTokenCache | null;\n    private persistencePlugin: ICachePlugin | null;\n\n    constructor(clientId: string, cacheStorage: CacheManager, cryptoObj: ICrypto, logger: Logger, serializableCache: ISerializableTokenCache | null, persistencePlugin: ICachePlugin | null) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n    }\n\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param cachedState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(serverResponseHash: ServerAuthorizationCodeResponse, cachedState: string, cryptoObj: ICrypto): void {\n\n        if (!serverResponseHash.state || !cachedState) {\n            throw !serverResponseHash.state ? ClientAuthError.createStateNotFoundError(\"Server State\") : ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n\n        if (decodeURIComponent(serverResponseHash.state) !== decodeURIComponent(cachedState)) {\n            throw ClientAuthError.createStateMismatchError();\n        }\n\n        // Check for error\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n            }\n\n            throw new ServerError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n        }\n\n        if (serverResponseHash.client_info) {\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\n        }\n    }\n\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     */\n    validateTokenResponse(serverResponse: ServerAuthorizationTokenResponse): void {\n        // Check for error\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\n            }\n\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            throw new ServerError(serverResponse.error, errString, serverResponse.suberror);\n        }\n    }\n\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        authCodePayload?: AuthorizationCodePayload,\n        userAssertionHash?: string,\n        handlingRefreshTokenResponse?: boolean,\n        forceCacheRefreshTokenResponse?: boolean): Promise<AuthenticationResult> {\n\n        // create an idToken object (not entity)\n        let idTokenObj: AuthToken | undefined;\n        if (serverTokenResponse.id_token) {\n            idTokenObj = new AuthToken(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj);\n\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && !StringUtils.isEmpty(authCodePayload.nonce)) {\n                if (idTokenObj.claims.nonce !== authCodePayload.nonce) {\n                    throw ClientAuthError.createNonceMismatchError();\n                }\n            }\n        }\n\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenObj);\n\n        // save the response tokens\n        let requestStateObj: RequestStateObject | undefined;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\n        }\n\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id = serverTokenResponse.key_id || request.sshKid || undefined;\n\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenObj, userAssertionHash, authCodePayload);\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\n                cacheContext = new TokenCacheContext(this.serializableCache, true);\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (handlingRefreshTokenResponse && !forceCacheRefreshTokenResponse && cacheRecord.account) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\n                    return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj, undefined);\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(cacheRecord);\n        } finally {\n            if (this.persistencePlugin && this.serializableCache && cacheContext) {\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj, serverTokenResponse.spa_code);\n    }\n\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    private generateCacheRecord(serverTokenResponse: ServerAuthorizationTokenResponse, authority: Authority, reqTimestamp: number, request: BaseAuthRequest, idTokenObj?: AuthToken, userAssertionHash?: string, authCodePayload?: AuthorizationCodePayload): CacheRecord {\n        const env = authority.getPreferredCache();\n        if (StringUtils.isEmpty(env)) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken: IdTokenEntity | undefined;\n        let cachedAccount: AccountEntity | undefined;\n        if (!StringUtils.isEmpty(serverTokenResponse.id_token) && !!idTokenObj) {\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\n                this.clientId,\n                idTokenObj.claims.tid || Constants.EMPTY_STRING,\n            );\n\n            cachedAccount = this.generateAccountEntity(\n                serverTokenResponse,\n                idTokenObj,\n                authority,\n                authCodePayload\n            );\n        }\n\n        // AccessToken\n        let cachedAccessToken: AccessTokenEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\n\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope ? ScopeSet.fromString(serverTokenResponse.scope) : new ScopeSet(request.scopes || []);\n\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn: number = (typeof serverTokenResponse.expires_in === \"string\" ? parseInt(serverTokenResponse.expires_in, 10) : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn: number = (typeof serverTokenResponse.ext_expires_in === \"string\" ? parseInt(serverTokenResponse.ext_expires_in, 10) : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn: number | undefined = (typeof serverTokenResponse.refresh_in === \"string\" ? parseInt(serverTokenResponse.refresh_in, 10) : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds = refreshIn && refreshIn > 0 ? reqTimestamp + refreshIn : undefined;\n\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.access_token || Constants.EMPTY_STRING,\n                this.clientId,\n                idTokenObj ? idTokenObj.claims.tid || Constants.EMPTY_STRING : authority.tenant,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                extendedTokenExpirationSeconds,\n                this.cryptoObj,\n                refreshOnSeconds,\n                serverTokenResponse.token_type,\n                userAssertionHash,\n                serverTokenResponse.key_id,\n                request.claims,\n                request.requestedClaimsHash\n            );\n        }\n\n        // refreshToken\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.refresh_token || Constants.EMPTY_STRING,\n                this.clientId,\n                serverTokenResponse.foci,\n                userAssertionHash\n            );\n        }\n\n        // appMetadata\n        let cachedAppMetadata: AppMetadataEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.foci)) {\n            cachedAppMetadata = AppMetadataEntity.createAppMetadataEntity(this.clientId, env, serverTokenResponse.foci);\n        }\n\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken, cachedAppMetadata);\n    }\n\n    /**\n     * Generate Account\n     * @param serverTokenResponse\n     * @param idToken\n     * @param authority\n     */\n    private generateAccountEntity(serverTokenResponse: ServerAuthorizationTokenResponse, idToken: AuthToken, authority: Authority, authCodePayload?: AuthorizationCodePayload): AccountEntity {\n        const authorityType = authority.authorityType;\n        const cloudGraphHostName = authCodePayload ? authCodePayload.cloud_graph_host_name : Constants.EMPTY_STRING;\n        const msGraphhost = authCodePayload ? authCodePayload.msgraph_host : Constants.EMPTY_STRING;\n\n        // ADFS does not require client_info in the response\n        if (authorityType === AuthorityType.Adfs) {\n            this.logger.verbose(\"Authority type is ADFS, creating ADFS account\");\n            return AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, cloudGraphHostName, msGraphhost);\n        }\n\n        // This fallback applies to B2C as well as they fall under an AAD account type.\n        if (StringUtils.isEmpty(serverTokenResponse.client_info) && authority.protocolMode === \"AAD\") {\n            throw ClientAuthError.createClientInfoEmptyError();\n        }\n\n        return serverTokenResponse.client_info ?\n            AccountEntity.createAccount(serverTokenResponse.client_info, this.homeAccountIdentifier, idToken, authority, cloudGraphHostName, msGraphhost) :\n            AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, cloudGraphHostName, msGraphhost);\n    }\n\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(\n        cryptoObj: ICrypto,\n        authority: Authority,\n        cacheRecord: CacheRecord,\n        fromTokenCache: boolean,\n        request: BaseAuthRequest,\n        idTokenObj?: AuthToken,\n        requestState?: RequestStateObject,\n        code?: string,\n    ): Promise<AuthenticationResult> {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n        let familyId: string = Constants.EMPTY_STRING;\n\n        if (cacheRecord.accessToken) {\n            if (cacheRecord.accessToken.tokenType === AuthenticationScheme.POP) {\n                const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n\n                if (!keyId) {\n                    throw ClientAuthError.createKeyIdMissingError();\n                }\n\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\n            } else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n        }\n\n        if (cacheRecord.appMetadata) {\n            familyId = cacheRecord.appMetadata.familyId === THE_FAMILY_ID ? THE_FAMILY_ID : Constants.EMPTY_STRING;\n        }\n        const uid = idTokenObj?.claims.oid || idTokenObj?.claims.sub || Constants.EMPTY_STRING;\n        const tid = idTokenObj?.claims.tid || Constants.EMPTY_STRING;\n\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: cacheRecord.account ? cacheRecord.account.getAccountInfo() : null,\n            idToken: idTokenObj ? idTokenObj.rawToken : Constants.EMPTY_STRING,\n            idTokenClaims: idTokenObj ? idTokenObj.claims : {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId,\n            extExpiresOn: extExpiresOn,\n            familyId: familyId,\n            tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState ? requestState.userRequestState : Constants.EMPTY_STRING,\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName || Constants.EMPTY_STRING,\n            msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code,\n            fromNativeBroker: false\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest\";\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { GrantType, AuthenticationScheme, PromptValue, Separators, AADServerParamKeys } from \"../utils/Constants\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { buildClientInfoFromHomeAccountId, buildClientInfo } from \"../account/ClientInfo\";\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { RequestValidator } from \"../request/RequestValidator\";\n\n/**\n * Oauth2.0 Authorization Code client\n */\nexport class AuthorizationCodeClient extends BaseClient {\n    // Flag to indicate if client is for hybrid spa auth code redemption\n    protected includeRedirectUri: boolean = true;\n\n    constructor(configuration: ClientConfiguration) {\n        super(configuration);\n    }\n\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(request: CommonAuthorizationUrlRequest): Promise<string> {\n        const queryString = await this.createAuthCodeUrlQueryString(request);\n\n        return UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\n    }\n\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(request: CommonAuthorizationCodeRequest, authCodePayload?: AuthorizationCodePayload): Promise<AuthenticationResult> {\n        this.logger.info(\"in acquireToken call\");\n        if (!request || StringUtils.isEmpty(request.code)) {\n            throw ClientAuthError.createTokenRequestCannotBeMadeError();\n        }\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await this.executeTokenRequest(this.authority, request);\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        return await responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, authCodePayload);\n    }\n\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(hashFragment: string, cachedState: string): AuthorizationCodePayload {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\n\n        // Deserialize hash fragment response parameters.\n        const hashUrlString = new UrlString(hashFragment);\n        // Deserialize hash fragment response parameters.\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hashUrlString.getHash());\n\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\n\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw ClientAuthError.createNoAuthCodeInServerResponseError();\n        }\n        return {\n            ...serverParams,\n            // Code param is optional in ServerAuthorizationCodeResponse but required in AuthorizationCodePaylod\n            code: serverParams.code\n        };\n    }\n\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n\n        // Construct logout URI\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\n    }\n\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    private async executeTokenRequest(authority: Authority, request: CommonAuthorizationCodeRequest): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n\n        const requestBody = await this.createTokenRequestBody(request);\n        const queryParameters = this.createTokenQueryParameters(request);\n        let ccsCredential: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID\n                };\n            } catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        const headers: Record<string, string> = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\n        const endpoint = StringUtils.isEmpty(queryParameters) ? authority.tokenEndpoint : `${authority.tokenEndpoint}?${queryParameters}`;\n\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint);\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    private createTokenQueryParameters(request: CommonAuthorizationCodeRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    private async createTokenRequestBody(request: CommonAuthorizationCodeRequest): Promise<string> {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        } else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(request.scopes);\n\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n            const reqCnfData = await popTokenGenerator.generateCnf(request);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if(request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        let ccsCred: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID\n                };\n            } catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        } else {\n            ccsCred = request.ccsCredential;\n        }\n\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n\n        // Add hybrid spa parameters if not already provided\n        if (request.enableSpaAuthorizationCode && (!request.tokenBodyParameters || !request.tokenBodyParameters[AADServerParamKeys.RETURN_SPA_CODE])) {\n            parameterBuilder.addExtraQueryParameters({\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\"\n            });\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    private async createAuthCodeUrlQueryString(request: CommonAuthorizationUrlRequest): Promise<string> {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        const requestScopes = [...request.scopes || [], ...request.extraScopesToConsent || []];\n        parameterBuilder.addScopes(requestScopes);\n\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n\n        // generate the correlationId if not set by the user and add\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n        }\n\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\n                parameterBuilder.addSid(request.sid);\n            } else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                const accountLoginHintClaim = this.extractLoginHint(request.account);\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                } else if (accountSid && request.prompt === PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                } else if (request.loginHint) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                } else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n            } else if (request.loginHint) {\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        } else {\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\n        }\n\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (!StringUtils.isEmpty(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n                // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n                const reqCnfData = await popTokenGenerator.generateCnf(request);\n                parameterBuilder.addPopToken(reqCnfData.reqCnfHash);\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    private createLogoutUrlQueryString(request: CommonEndSessionRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\n        }\n\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n\n        if(request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    private extractAccountSid(account: AccountInfo): string | null {\n        return account.idTokenClaims?.sid || null;\n    }\n\n    private extractLoginHint(account: AccountInfo): string | null {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\n */\nexport type OpenIdConfigResponse = {\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    jwks_uri: string;\n};\n\nexport function isOpenIdConfigResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") && \n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const rawMetdataJSON = {\"endpointMetadata\":{\"https://login.microsoftonline.com/common/\":{\"token_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.com/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.com/common/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.com\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pas.windows.net\"},\"https://login.chinacloudapi.cn/common/\":{\"token_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.chinacloudapi.cn/common/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\"authorization_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.chinacloudapi.cn/common/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"partner.microsoftonline.cn\",\"cloud_graph_host_name\":\"graph.chinacloudapi.cn\",\"msgraph_host\":\"microsoftgraph.chinacloudapi.cn\",\"rbac_url\":\"https://pas.chinacloudapi.cn\"},\"https://login.microsoftonline.us/common/\":{\"token_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.us/common/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.us/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.us/common/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.us/common/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.us\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pasff.usgovcloudapi.net\"},\"https://login.microsoftonline.com/consumers/\":{\"token_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.com/consumers/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.com/consumers/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.com\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pas.windows.net\"},\"https://login.chinacloudapi.cn/consumers/\":{\"token_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\"authorization_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.chinacloudapi.cn/consumers/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"partner.microsoftonline.cn\",\"cloud_graph_host_name\":\"graph.chinacloudapi.cn\",\"msgraph_host\":\"microsoftgraph.chinacloudapi.cn\",\"rbac_url\":\"https://pas.chinacloudapi.cn\"},\"https://login.microsoftonline.us/consumers/\":{\"token_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.us/consumers/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.us/consumers/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.us\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pasff.usgovcloudapi.net\"},\"https://login.microsoftonline.com/organizations/\":{\"token_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.com/organizations/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.com/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.com/organizations/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.com\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pas.windows.net\"},\"https://login.chinacloudapi.cn/organizations/\":{\"token_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\"authorization_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.chinacloudapi.cn/organizations/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"partner.microsoftonline.cn\",\"cloud_graph_host_name\":\"graph.chinacloudapi.cn\",\"msgraph_host\":\"microsoftgraph.chinacloudapi.cn\",\"rbac_url\":\"https://pas.chinacloudapi.cn\"},\"https://login.microsoftonline.us/organizations/\":{\"token_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.us/organizations/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.us/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.us/organizations/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.us\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pasff.usgovcloudapi.net\"}},\"instanceDiscoveryMetadata\":{\"https://login.microsoftonline.com/common/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.chinacloudapi.cn/common/\":{\"tenant_discovery_endpoint\":\"https://login.chinacloudapi.cn/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.us/common/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.us/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.com/consumers/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.chinacloudapi.cn/consumers/\":{\"tenant_discovery_endpoint\":\"https://login.chinacloudapi.cn/consumers/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.us/consumers/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.us/consumers/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.com/organizations/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.chinacloudapi.cn/organizations/\":{\"tenant_discovery_endpoint\":\"https://login.chinacloudapi.cn/organizations/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]},\"https://login.microsoftonline.us/organizations/\":{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.us/organizations/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]}}};\n\nexport const EndpointMetadata = rawMetdataJSON.endpointMetadata;\nexport const InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse\";\nimport { Constants, RegionDiscoverySources, ResponseCodes } from \"../utils/Constants\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\n\nexport class RegionDiscovery {\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Options for the IMDS endpoint request\n    protected static IMDS_OPTIONS: ImdsOptions = {\n        headers: {\n            Metadata: \"true\",\n        },\n    };\n\n    constructor(networkInterface: INetworkModule) {\n        this.networkInterface = networkInterface;\n    }\n\n    /**\n     * Detect the region from the application's environment.\n     * \n     * @returns Promise<string | null>\n     */\n    public async detectRegion(environmentRegion: string | undefined, regionDiscoveryMetadata: RegionDiscoveryMetadata, proxyUrl: string): Promise<string | null> {\n        // Initialize auto detected region with the region from the envrionment \n        let autodetectedRegionName = environmentRegion;\n\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS \n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n            if (proxyUrl) {\n                options.proxyUrl = proxyUrl;\n            }\n\n            try {\n                const localIMDSVersionResponse = await this.getRegionFromIMDS(Constants.IMDS_VERSION, options);\n                if (localIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\n                } \n                \n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry. \n                if (localIMDSVersionResponse.status === ResponseCodes.httpBadRequest) {\n                    const currentIMDSVersion = await this.getCurrentVersion(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n\n                    const currentIMDSVersionResponse = await this.getRegionFromIMDS(currentIMDSVersion, options);\n                    if (currentIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\n                        autodetectedRegionName = currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\n                    }\n                }\n            } catch(e) {\n                regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            } \n        } else {\n            regionDiscoveryMetadata.region_source = RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n\n        return autodetectedRegionName || null;\n    }\n\n    /**\n     * Make the call to the IMDS endpoint\n     * \n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    private async getRegionFromIMDS(version: string, options: ImdsOptions): Promise<NetworkResponse<string>> {\n        return this.networkInterface.sendGetRequestAsync<string>(`${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, Constants.IMDS_TIMEOUT);\n    }\n\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *  \n     * @returns Promise<string | null>\n     */\n    private async getCurrentVersion(options: ImdsOptions): Promise<string | null> {\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(`${Constants.IMDS_ENDPOINT}?format=json`, options);\n\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (response.status === ResponseCodes.httpBadRequest && response.body && response.body[\"newest-versions\"] && response.body[\"newest-versions\"].length > 0) {\n                return response.body[\"newest-versions\"][0];\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, InteractionRequiredAuthError } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"./BrowserAuthError\";\n\nexport type OSError = {\n    error: number;\n    protocol_error: string;\n    properties: object;\n    status: string;\n    retryable?: boolean;\n};\n\nexport enum NativeStatusCode {\n    USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\",\n    USER_CANCEL = \"USER_CANCEL\",\n    NO_NETWORK = \"NO_NETWORK\",\n    TRANSIENT_ERROR = \"TRANSIENT_ERROR\",\n    PERSISTENT_ERROR = \"PERSISTENT_ERROR\",\n    DISABLED = \"DISABLED\",\n    ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\"\n}\n\nexport const NativeAuthErrorMessage = {\n    extensionError: {\n        code: \"ContentError\"\n    },\n    userSwitch: {\n        code: \"user_switch\",\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n    },\n    tokensNotFoundInCache: {\n        code: \"tokens_not_found_in_internal_memory_cache\",\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n    }\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n\n    /**\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\n     */\n    isFatal(): boolean {\n        if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n            return true;\n        }\n\n        switch (this.errorCode) {\n            case NativeAuthErrorMessage.extensionError.code:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Create the appropriate error object based on the WAM status code.\n     * @param code\n     * @param description\n     * @param ext\n     * @returns\n     */\n    static createError(code: string, description: string, ext?: OSError): AuthError {\n        if (ext && ext.status) {\n            switch (ext.status) {\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(code, description);\n                case NativeStatusCode.USER_CANCEL:\n                    return BrowserAuthError.createUserCancelledError();\n                case NativeStatusCode.NO_NETWORK:\n                    return BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        return new NativeAuthError(code, description, ext);\n    }\n\n    /**\n     * Creates user switch error when the user chooses a different account in the native broker prompt\n     * @returns\n     */\n    static createUserSwitchError(): NativeAuthError {\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n    }\n\n    /**\n     * Creates a tokens not found error when the internal cache look up fails\n     * @returns NativeAuthError: tokensNotFoundInCache\n     */\n    static createTokensNotFoundInCacheError(): NativeAuthError {\n        return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorityType } from \"./AuthorityType\";\nimport { isOpenIdConfigResponse, OpenIdConfigResponse } from \"./OpenIdConfigResponse\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IUri } from \"../url/IUri\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { AuthorityMetadataSource, Constants, RegionDiscoveryOutcomes } from \"../utils/Constants\";\nimport { EndpointMetadata, InstanceDiscoveryMetadata } from \"./AuthorityMetadata\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity\";\nimport { AuthorityOptions , AzureCloudInstance } from \"./AuthorityOptions\";\nimport { CloudInstanceDiscoveryResponse, isCloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\nimport { RegionDiscovery } from \"./RegionDiscovery\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { AzureCloudOptions } from \"../config/ClientConfiguration\";\n\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n */\nexport class Authority {\n\n    // Canonical authority url string\n    private _canonicalAuthority: UrlString;\n    // Canonicaly authority url components\n    private _canonicalAuthorityUrlComponents: IUri | null;\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Cache Manager to cache network responses\n    protected cacheManager: ICacheManager;\n    // Protocol mode to construct endpoints\n    private authorityOptions: AuthorityOptions;\n    // Authority metadata\n    private metadata: AuthorityMetadataEntity;\n    // Region discovery service\n    private regionDiscovery: RegionDiscovery;\n    // Region discovery metadata\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\n    // Proxy url string\n    private proxyUrl: string;\n\n    constructor(authority: string, networkInterface: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions, proxyUrl?: string) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscovery = new RegionDiscovery(networkInterface);\n        this.regionDiscoveryMetadata = { region_used: undefined, region_source: undefined, region_outcome: undefined };\n        this.proxyUrl = proxyUrl || Constants.EMPTY_STRING;\n    }\n\n    // See above for AuthorityType\n    public get authorityType(): AuthorityType {\n        const pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\n\n        if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\n            return AuthorityType.Adfs;\n        }\n\n        return AuthorityType.Default;\n    }\n\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    public get protocolMode(): ProtocolMode {\n        return this.authorityOptions.protocolMode;\n    }\n\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    public get options(): AuthorityOptions {\n        return this.authorityOptions;\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get canonicalAuthority(): string {\n        return this._canonicalAuthority.urlString;\n    }\n\n    /**\n     * Sets canonical authority.\n     */\n    public set canonicalAuthority(url: string) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n\n    /**\n     * Get authority components.\n     */\n    public get canonicalAuthorityUrlComponents(): IUri {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\n        }\n\n        return this._canonicalAuthorityUrlComponents;\n    }\n\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    public get hostnameAndPort(): string {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n\n    /**\n     * Get tenant for authority.\n     */\n    public get tenant(): string {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    public get authorizationEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.authorization_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth /token endpoint for requests\n     */\n    public get tokenEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.token_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    public get deviceCodeEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth logout endpoint for requests\n     */\n    public get endSessionEndpoint(): string {\n        if(this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw ClientAuthError.createLogoutNotSupportedError();\n            }\n            const endpoint = this.replacePath(this.metadata.end_session_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth issuer for requests\n     */\n    public get selfSignedJwtAudience(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.issuer);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Jwks_uri for token signing keys\n     */\n    public get jwksUri(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.jwks_uri);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    private replaceTenant(urlString: string): string {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    private replacePath(urlString: string): string {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\n        const cachedAuthorityParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\n\n        currentAuthorityParts.forEach((currentPart, index) => {\n            const cachedPart = cachedAuthorityParts[index];\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\n            }\n        });\n\n        return endpoint;\n    }\n\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    protected get defaultOpenIdConfigurationEndpoint(): string {\n        if (this.authorityType === AuthorityType.Adfs || this.protocolMode === ProtocolMode.OIDC) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete(): boolean {\n        return !!this.metadata;\n    }\n\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    public async resolveEndpointsAsync(): Promise<void> {\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n        if (!metadataEntity) {\n            metadataEntity = new AuthorityMetadataEntity();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cloudDiscoverySource = await this.updateCloudDiscoveryMetadata(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\n        const endpointSource = await this.updateEndpointMetadata(metadataEntity);\n\n        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE && endpointSource !== AuthorityMetadataSource.CACHE) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.resetExpiresAt();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    private async updateEndpointMetadata(metadataEntity: AuthorityMetadataEntity): Promise<AuthorityMetadataSource> {\n        let metadata = this.getEndpointMetadataFromConfig();\n        if (metadata) {\n            metadataEntity.updateEndpointMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.endpointsFromNetwork && !metadataEntity.isExpired()) {\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n\n        let harcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\n        metadata = await this.getEndpointMetadataFromNetwork();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await this.updateMetadataWithRegionalInformation(metadata);\n            }\n\n            metadataEntity.updateEndpointMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }    \n\n        if (harcodedMetadata && !this.authorityOptions.skipAuthorityMetadataCache) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                harcodedMetadata = await this.updateMetadataWithRegionalInformation(\n                    harcodedMetadata\n                );\n            }\n\n            metadataEntity.updateEndpointMetadata(harcodedMetadata, false);\n            return AuthorityMetadataSource.HARDCODED_VALUES;\n        } else {\n            throw ClientAuthError.createUnableToGetOpenidConfigError(\n                this.defaultOpenIdConfigurationEndpoint\n            );\n        }\n    }\n\n    /**\n     * Compares the number of url components after the domain to determine if the cached authority metadata can be used for the requested authority\n     * Protects against same domain different authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    private isAuthoritySameType(metadataEntity: AuthorityMetadataEntity): boolean {\n        const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n\n        return cachedParts.length === this.canonicalAuthorityUrlComponents.PathSegments.length;\n    }\n\n    /**\n     * Parse authorityMetadata config option\n     */\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(this.authorityOptions.authorityMetadata) as OpenIdConfigResponse;\n            } catch (e) {\n                throw ClientConfigurationError.createInvalidAuthorityMetadataError();\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     * \n     * @param hasHardcodedMetadata boolean\n     */\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\n        const options: ImdsOptions = {};\n        if (this.proxyUrl) {\n            options.proxyUrl = this.proxyUrl;\n        }\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's \n         * hardcoded list of metadata\n         */\n\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(this.defaultOpenIdConfigurationEndpoint, options);\n            return isOpenIdConfigResponse(response.body) ? response.body : null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    private getEndpointMetadataFromHardcodedValues(): OpenIdConfigResponse | null {\n        if (this.canonicalAuthority in EndpointMetadata) {\n            return EndpointMetadata[this.canonicalAuthority];\n        }\n\n        return null;\n    }\n\n    /**\n     * Update the retrieved metadata with regional information.\n     */\n    private async updateMetadataWithRegionalInformation(metadata: OpenIdConfigResponse): Promise<OpenIdConfigResponse> {\n        const autodetectedRegionName = await this.regionDiscovery.detectRegion(this.authorityOptions.azureRegionConfiguration?.environmentRegion, this.regionDiscoveryMetadata, this.proxyUrl);\n\n        const azureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\n            ? autodetectedRegionName\n            : this.authorityOptions.azureRegionConfiguration?.azureRegion;\n\n        if (this.authorityOptions.azureRegionConfiguration?.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\n            this.regionDiscoveryMetadata.region_outcome = autodetectedRegionName ?\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL :\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        } else {\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome = (this.authorityOptions.azureRegionConfiguration?.azureRegion === autodetectedRegionName) ?\n                    RegionDiscoveryOutcomes.CONFIGURED_MATCHES_DETECTED :\n                    RegionDiscoveryOutcomes.CONFIGURED_NOT_DETECTED;\n            } else {\n                this.regionDiscoveryMetadata.region_outcome = RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n            }\n        }\n\n        if (azureRegion) {\n            this.regionDiscoveryMetadata.region_used = azureRegion;\n            return Authority.replaceWithRegionalInformation(metadata, azureRegion);\n        }\n\n        return metadata;\n    }\n\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache and returns where the information was retrived from\n     * @param cachedMetadata\n     * @param newMetadata\n     */\n    private async updateCloudDiscoveryMetadata(metadataEntity: AuthorityMetadataEntity): Promise<AuthorityMetadataSource> {\n        let metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        // If The cached metadata came from config but that config was not passed to this instance, we must go to the network\n        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.aliasesFromNetwork && !metadataEntity.isExpired()) {\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n\n        const harcodedMetadata = this.getCloudDiscoveryMetadataFromHarcodedValues();\n        metadata = await this.getCloudDiscoveryMetadataFromNetwork();\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        } \n        \n        if (harcodedMetadata && !this.options.skipAuthorityMetadataCache) {\n            metadataEntity.updateCloudDiscoveryMetadata(harcodedMetadata, false);\n            return AuthorityMetadataSource.HARDCODED_VALUES;\n        } else {\n            // Metadata could not be obtained from config, cache or network\n            throw ClientConfigurationError.createUntrustedAuthorityError();\n        }\n    }\n\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            try {\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata) as CloudInstanceDiscoveryResponse;\n                const metadata = Authority.getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\n                if (metadata) {\n                    return metadata;\n                }\n            } catch (e) {\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\n            }\n        }\n\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n\n        return null;\n    }\n\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     * \n     * @param hasHardcodedMetadata boolean\n     */\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options: ImdsOptions = {};\n        if (this.proxyUrl) {\n            options.proxyUrl = this.proxyUrl;\n        }\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        let match = null;\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<CloudInstanceDiscoveryResponse>(\n                    instanceDiscoveryEndpoint,\n                    options\n                );\n            const metadata = isCloudInstanceDiscoveryResponse(response.body)\n                ? response.body.metadata\n                : [];\n            if (metadata.length === 0) {\n                // If no metadata is returned, authority is untrusted\n                return null;\n            }\n            match = Authority.getCloudDiscoveryMetadataFromNetworkResponse(\n                metadata,\n                this.hostnameAndPort\n            );\n        } catch (e) {\n            return null;\n        }\n\n        if (!match) {\n            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n            match = Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n        return match;\n    }\n\n    /**\n     * Get cloud discovery metadata for common authorities \n     */\n    private getCloudDiscoveryMetadataFromHarcodedValues(): CloudDiscoveryMetadata | null {\n        if (this.canonicalAuthority in InstanceDiscoveryMetadata) {\n            return InstanceDiscoveryMetadata[this.canonicalAuthority];\n        }\n\n        return null;\n    }\n\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    private isInKnownAuthorities(): boolean {\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\n            return UrlString.getDomainFromUrl(authority).toLowerCase() === this.hostnameAndPort;\n        });\n\n        return matches.length > 0;\n    }\n\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(authorityString: string, azureCloudOptions?: AzureCloudOptions): string {\n        let authorityAzureCloudInstance;\n\n        if (azureCloudOptions && azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None) {\n            const tenant = azureCloudOptions.tenant ? azureCloudOptions.tenant : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n\n        return authorityAzureCloudInstance ? authorityAzureCloudInstance : authorityString;\n    }\n\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(host: string): CloudDiscoveryMetadata {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host]\n        };\n    }\n\n    /**\n     * Searches instance discovery network response for the entry that contains the host in the aliases list\n     * @param response\n     * @param authority\n     */\n    static getCloudDiscoveryMetadataFromNetworkResponse(response: CloudDiscoveryMetadata[], authority: string): CloudDiscoveryMetadata | null {\n        for (let i = 0; i < response.length; i++) {\n            const metadata = response[i];\n            if (metadata.aliases.indexOf(authority) > -1) {\n                return metadata;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache(): string {\n        if(this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host: string): boolean {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host: string): boolean {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(host: string, region: string, queryString?: string): string {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n\n        let hostNameAndPort= `${region}.${authorityUrlParts.HostNameAndPort}`;\n\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort\n        }).urlString;\n\n        // Add the query string if a query string was provided\n        if (queryString) return `${url}?${queryString}`;\n\n        return url;\n    }\n\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(metadata: OpenIdConfigResponse, azureRegion: string): OpenIdConfigResponse {\n        metadata.authorization_endpoint = Authority.buildRegionalAuthorityString(metadata.authorization_endpoint, azureRegion);\n        // TODO: Enquire on whether we should leave the query string or remove it before releasing the feature\n        metadata.token_endpoint = Authority.buildRegionalAuthorityString(metadata.token_endpoint, azureRegion, \"allowestsrnonmsi=true\");\n\n        if (metadata.end_session_endpoint) {\n            metadata.end_session_endpoint = Authority.buildRegionalAuthorityString(metadata.end_session_endpoint, azureRegion);\n        }\n\n        return metadata;\n    }\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryResponse = {\n    tenant_discovery_endpoint: string;\n    metadata: Array<CloudDiscoveryMetadata>;\n};\n\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority } from \"./Authority\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityOptions } from \"./AuthorityOptions\";\n\nexport class AuthorityFactory {\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(authorityUri: string, networkClient: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions, proxyUrl?: string): Promise<Authority> {\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority: Authority = AuthorityFactory.createInstance(authorityUri, networkClient, cacheManager, authorityOptions, proxyUrl);\n\n        try {\n            await acquireTokenAuthority.resolveEndpointsAsync();\n            return acquireTokenAuthority;\n        } catch (e) {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(e);\n        }\n    }\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(authorityUrl: string, networkInterface: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions, proxyUrl?: string): Authority {\n        // Throw error if authority url is empty\n        if (StringUtils.isEmpty(authorityUrl)) {\n            throw ClientConfigurationError.createUrlEmptyError();\n        }\n\n        return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, proxyUrl);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS, Separators, CacheOutcome, Constants, RegionDiscoverySources, RegionDiscoveryOutcomes } from \"../../utils/Constants\";\nimport { CacheManager } from \"../../cache/CacheManager\";\nimport { AuthError } from \"../../error/AuthError\";\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest\";\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata\";\n\nexport class ServerTelemetryManager {\n    private cacheManager: CacheManager;\n    private apiId: number;\n    private correlationId: string;\n    private telemetryCacheKey: string;\n    private wrapperSKU: String;\n    private wrapperVer: String;\n    private regionUsed: string | undefined;\n    private regionSource: RegionDiscoverySources | undefined;\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\n    private cacheOutcome: CacheOutcome = CacheOutcome.NO_CACHE_HIT;\n\n    constructor(telemetryRequest: ServerTelemetryRequest, cacheManager: CacheManager) {\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n\n        this.telemetryCacheKey = SERVER_TELEM_CONSTANTS.CACHE_KEY + Separators.CACHE_KEY_SEPARATOR + telemetryRequest.clientId;\n    }\n\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue(): string {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [request, regionDiscoveryFields].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, requestWithRegionDiscoveryFields, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue(): string {\n        const lastRequests = this.getLastRequests();\n\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests.slice(0, 2*maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors.slice(0, maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n\n        // Indicate whether this header contains all data or partial data\n        const overflow = maxErrors < errorCount ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, lastRequests.cacheHits, failedRequests, errors, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error: AuthError): void {\n        const lastRequests = this.getLastRequests();\n        if (lastRequests.errors.length >= SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n        \n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n\n        if (!StringUtils.isEmpty(error.subError)) {\n            lastRequests.errors.push(error.subError);\n        } else if (!StringUtils.isEmpty(error.errorCode)) {\n            lastRequests.errors.push(error.errorCode);\n        } else if (!!error && error.toString()) {\n            lastRequests.errors.push(error.toString());\n        } else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n\n        return;\n    }\n\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits(): number {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return lastRequests.cacheHits;\n    }\n\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests(): ServerTelemetryEntity {\n        const initialValue: ServerTelemetryEntity = new ServerTelemetryEntity();\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey) as ServerTelemetryEntity;\n\n        return lastRequests || initialValue;\n    }\n\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache(): void {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        } else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = new ServerTelemetryEntity();\n            serverTelemEntity.failedRequests = lastRequests.failedRequests.slice(numErrorsFlushed*2); // failedRequests contains 2 items for each error\n            serverTelemEntity.errors = lastRequests.errors.slice(numErrorsFlushed);\n\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\n        }\n    }\n\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(serverTelemetryEntity: ServerTelemetryEntity): number {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId = serverTelemetryEntity.failedRequests[2*i] || Constants.EMPTY_STRING;\n            const correlationId = serverTelemetryEntity.failedRequests[2*i + 1] || Constants.EMPTY_STRING;\n            const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize += apiId.toString().length + correlationId.toString().length + errorCode.length + 3;\n\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            } else {\n                break;\n            }\n        }\n\n        return maxErrors;\n    }\n\n    /**\n     * Get the region discovery fields\n     * \n     * @returns string\n     */\n    getRegionDiscoveryFields(): string {\n        const regionDiscoveryFields: string[] = [];\n\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionOutcome || Constants.EMPTY_STRING);\n\n        return regionDiscoveryFields.join(\",\");\n    }\n\n    /**\n     * Update the region discovery metadata\n     * \n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata: RegionDiscoveryMetadata): void {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n\n    /**\n     * Set cache outcome \n     */\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, INetworkModule, Logger, AuthenticationResult, AccountInfo, AccountEntity, BaseAuthRequest, AuthenticationScheme, UrlString, ServerTelemetryManager, ServerTelemetryRequest, ClientConfigurationError, StringUtils, Authority, AuthorityOptions, AuthorityFactory, IPerformanceClient } from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\n\nexport abstract class BaseInteractionClient {\n\n    protected config: BrowserConfiguration;\n    protected browserStorage: BrowserCacheManager;\n    protected browserCrypto: ICrypto;\n    protected networkClient: INetworkModule;\n    protected logger: Logger;\n    protected eventHandler: EventHandler;\n    protected navigationClient: INavigationClient;\n    protected nativeMessageHandler: NativeMessageHandler | undefined;\n    protected correlationId: string;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, performanceClient: IPerformanceClient, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId = correlationId || this.browserCrypto.createNewGuid();\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\n        this.performanceClient = performanceClient;\n    }\n\n    abstract acquireToken(request: RedirectRequest|PopupRequest|SsoSilentRequest): Promise<AuthenticationResult|void>;\n\n    abstract logout(request: EndSessionRequest): Promise<void>;\n\n    protected async clearCacheOnLogout(account?: AccountInfo| null): Promise<void> {\n        if (account) {\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account));\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            } catch (error) {\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            }\n        } else {\n            try {\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            } catch(e) {\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            }\n        }\n    }\n\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    protected async initializeBaseRequest(request: Partial<BaseAuthRequest>): Promise<BaseAuthRequest> {\n        this.logger.verbose(\"Initializing BaseAuthRequest\");\n        const authority = request.authority || this.config.auth.authority;\n\n        const scopes = [...((request && request.scopes) || [])];\n\n        const validatedRequest: BaseAuthRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes\n        };\n\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!validatedRequest.authenticationScheme) {\n            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n            this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\n        } else {\n            if (validatedRequest.authenticationScheme === AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                    throw ClientConfigurationError.createMissingSshJwkError();\n                }\n                if(!request.sshKid) {\n                    throw ClientConfigurationError.createMissingSshKidError();\n                }\n            }\n            this.logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\n        }\n\n        // Set requested claims hash if claims were requested\n        if (request.claims && !StringUtils.isEmpty(request.claims)) {\n            validatedRequest.requestedClaimsHash = await this.browserCrypto.hashString(request.claims);\n        }\n\n        return validatedRequest;\n    }\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri?: string): string {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\n        return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\n    }\n\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    protected initializeServerTelemetryManager(apiId: number, forceRefresh?: boolean): ServerTelemetryManager {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload: ServerTelemetryRequest = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1]\n        };\n\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(requestAuthority?: string): Promise<Authority> {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata\n        };\n\n        if (requestAuthority) {\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return await AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions);\n        }\n\n        this.logger.verbose(\"Creating discovered authority with configured authority\");\n        return await AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerTelemetryManager, CommonAuthorizationCodeRequest, Constants, AuthorizationCodeClient, ClientConfiguration, AuthorityOptions, Authority, AuthorityFactory, ServerAuthorizationCodeResponse, UrlString, CommonEndSessionRequest, ProtocolUtils, ResponseMode, StringUtils, IdTokenClaims, AccountInfo, AzureCloudOptions, PerformanceEvents, AuthError } from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConstants, InteractionType } from \"../utils/BrowserConstants\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserProtocolUtils, BrowserStateObject } from \"../utils/BrowserProtocolUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\n\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    protected async initializeAuthorizationCodeRequest(request: AuthorizationUrlRequest): Promise<CommonAuthorizationCodeRequest> {\n        this.logger.verbose(\"initializeAuthorizationRequest called\", request.correlationId);\n        const generatedPkceParams = await this.browserCrypto.generatePkceCodes();\n\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier\n        };\n\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n\n        return authCodeRequest;\n    }\n\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    protected initializeLogoutRequest(logoutRequest?: EndSessionRequest): CommonEndSessionRequest {\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\n\n        const validLogoutRequest: CommonEndSessionRequest = {\n            correlationId: this.correlationId || this.browserCrypto.createNewGuid(),\n            ...logoutRequest\n        };\n\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if(logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\n                    if (logoutHint) {\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                } else {\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\n                }\n            } else {\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\n            }\n        } else {\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\n        }\n\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\n            } else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\n            } else {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(BrowserUtils.getCurrentUri(), BrowserUtils.getCurrentUri());\n            }\n        } else {\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\n        }\n\n        return validLogoutRequest;\n    }\n\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    protected getLogoutHintFromIdTokenClaims(account: AccountInfo): string | null {\n        const idTokenClaims: IdTokenClaims | undefined = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            } else {\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\n            }\n        } else {\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createAuthCodeClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string, requestAzureCloudOptions?: AzureCloudOptions): Promise<AuthorizationCodeClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, requestAzureCloudOptions);\n        return new AuthorizationCodeClient(clientConfig);\n    }\n\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getClientConfiguration(serverTelemetryManager: ServerTelemetryManager, requestAuthority?: string, requestAzureCloudOptions?: AzureCloudOptions): Promise<ClientConfiguration> {\n        this.logger.verbose(\"getClientConfiguration called\", this.correlationId);\n        const discoveredAuthority = await this.getDiscoveredAuthority(requestAuthority, requestAzureCloudOptions);\n\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true\n            },\n            loggerOptions: {\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled,\n                logLevel: this.config.system.loggerOptions.logLevel,\n                correlationId: this.correlationId\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING\n            },\n            telemetry: this.config.telemetry\n        };\n    }\n\n    /**\n     * @param hash\n     * @param interactionType\n     */\n    protected validateAndExtractStateFromHash(serverParams: ServerAuthorizationCodeResponse, interactionType: InteractionType, requestCorrelationId?: string): string {\n        this.logger.verbose(\"validateAndExtractStateFromHash called\", requestCorrelationId);\n        if (!serverParams.state) {\n            throw BrowserAuthError.createHashDoesNotContainStateError();\n        }\n\n        const platformStateObj = BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\n        if (!platformStateObj) {\n            throw BrowserAuthError.createUnableToParseStateError();\n        }\n\n        if (platformStateObj.interactionType !== interactionType) {\n            throw BrowserAuthError.createStateInteractionTypeMismatchError();\n        }\n\n        this.logger.verbose(\"Returning state from hash\", requestCorrelationId);\n        return serverParams.state;\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(requestAuthority?: string, requestAzureCloudOptions?: AzureCloudOptions): Promise<Authority> {\n        this.logger.verbose(\"getDiscoveredAuthority called\", this.correlationId);\n        const getAuthorityMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache\n        };\n\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority ? requestAuthority : this.config.auth.authority;\n\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority( userAuthority, requestAzureCloudOptions || this.config.auth.azureCloudOptions);\n        this.logger.verbose(\"Creating discovered authority with configured authority\", this.correlationId);\n        return await AuthorityFactory.createDiscoveredInstance(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions)\n            .then((result: Authority) => {\n                getAuthorityMeasurement.endMeasurement({\n                    success: true\n                });\n\n                return result;\n            })\n            .catch((error:AuthError) => {\n                getAuthorityMeasurement.endMeasurement({\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    success: false\n                });\n\n                throw error;\n            });\n    }\n\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    protected async initializeAuthorizationRequest(request: RedirectRequest|PopupRequest|SsoSilentRequest, interactionType: InteractionType): Promise<AuthorizationUrlRequest> {\n        this.logger.verbose(\"initializeAuthorizationRequest called\", this.correlationId);\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState: BrowserStateObject = {\n            interactionType: interactionType\n        };\n        const state = ProtocolUtils.setRequestState(\n            this.browserCrypto,\n            (request && request.state)|| Constants.EMPTY_STRING,\n            browserState\n        );\n\n        const validatedRequest: AuthorizationUrlRequest = {\n            ...await this.initializeBaseRequest(request),\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || this.browserCrypto.createNewGuid(),\n            responseMode: ResponseMode.FRAGMENT\n        };\n\n        const account = request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\n            validatedRequest.account = account;\n        }\n\n        // Check for ADAL/MSAL v1 SSO\n        if (StringUtils.isEmpty(validatedRequest.loginHint) && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { GrantType, AuthenticationScheme, Errors } from \"../utils/Constants\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { ServerError } from \"../error/ServerError\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from \"../error/InteractionRequiredAuthError\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\"; \nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\n\n/**\n * OAuth2.0 refresh token client\n */\nexport class RefreshTokenClient extends BaseClient {\n    constructor(configuration: ClientConfiguration, performanceClient?: IPerformanceClient) {\n        super(configuration,performanceClient);\n    }\n\n    public async acquireToken(request: CommonRefreshTokenRequest): Promise<AuthenticationResult> {\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await this.executeTokenRequest(request, this.authority);\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n\n        responseHandler.validateTokenResponse(response.body);\n        return responseHandler.handleServerTokenResponse(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            undefined,\n            undefined,\n            true,\n            request.forceCache\n        );\n    }\n\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    public async acquireTokenByRefreshToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment, this.config.authOptions.clientId);\n\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return this.acquireTokenWithCachedRefreshToken(request, true);\n            } catch (e) {\n                const noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\n                const clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;\n\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return this.acquireTokenWithCachedRefreshToken(request, false);\n                    // throw in all other cases\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        // fall back to application refresh token acquisition\n        return this.acquireTokenWithCachedRefreshToken(request, false);\n    }\n\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    private async acquireTokenWithCachedRefreshToken(request: CommonSilentFlowRequest, foci: boolean) {\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = this.cacheManager.readRefreshTokenFromCache(this.config.authOptions.clientId, request.account, foci);\n\n        // no refresh Token\n        if (!refreshToken) {\n            throw InteractionRequiredAuthError.createNoTokensFoundError();\n        }\n\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID\n            }\n        };\n\n        return this.acquireToken(refreshTokenRequest);\n    }\n\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    private async executeTokenRequest(request: CommonRefreshTokenRequest, authority: Authority)\n        : Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        const acquireTokenMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);    \n        const requestBody = await this.createTokenRequestBody(request);\n        const queryParameters = this.createTokenQueryParameters(request);\n        const headers: Record<string, string> = this.createTokenRequestHeaders(request.ccsCredential);\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParameters);\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint)\n            .then((result) =>{\n                acquireTokenMeasurement?.endMeasurement({\n                    success: true\n                });\n                return result;\n            })\n            .catch((error) =>{\n                acquireTokenMeasurement?.endMeasurement({\n                    success: false\n                });\n                throw error;\n            });\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    private createTokenQueryParameters(request: CommonRefreshTokenRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    private async createTokenRequestBody(request: CommonRefreshTokenRequest): Promise<string> {\n        const correlationId = request.correlationId;\n        const acquireTokenMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.BaseClientCreateTokenRequestHeaders, correlationId); \n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        parameterBuilder.addScopes(request.scopes);\n\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n\n        parameterBuilder.addClientInfo();\n\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        \n        parameterBuilder.addCorrelationId(correlationId);\n\n        parameterBuilder.addRefreshToken(request.refreshToken);\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n            const reqCnfData = await popTokenGenerator.generateCnf(request);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                acquireTokenMeasurement?.endMeasurement({\n                    success: false\n                });\n                throw ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n\n        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                    break;\n            }\n        }\n        acquireTokenMeasurement?.endMeasurement({\n            success: true\n        });\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { RefreshTokenClient } from \"./RefreshTokenClient\";\nimport { ClientAuthError, ClientAuthErrorMessage } from \"../error/ClientAuthError\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheOutcome } from \"../utils/Constants\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\n\nexport class SilentFlowClient extends BaseClient {\n    \n    constructor(configuration: ClientConfiguration, performanceClient?: IPerformanceClient) {\n        super(configuration,performanceClient);\n    }\n\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        try {\n            return await this.acquireCachedToken(request);\n        } catch (e) {\n            if (e instanceof ClientAuthError && e.errorCode === ClientAuthErrorMessage.tokenRefreshRequired.code) {\n                const refreshTokenClient = new RefreshTokenClient(this.config, this.performanceClient);\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n\n        if (request.forceRefresh) {\n            // Must refresh due to present force_refresh flag.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.FORCE_REFRESH);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Skipping cache because forceRefresh is true.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        const environment = request.authority || this.authority.getPreferredCache();\n\n        const cacheRecord = this.cacheManager.readCacheRecord(request.account, this.config.authOptions.clientId, request, environment);\n\n        if (!cacheRecord.accessToken) {\n            // Must refresh due to non-existent access_token.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        } else if (\n            TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(cacheRecord.accessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)\n        ) {\n            // Must refresh due to expired access_token.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\n            this.logger.info(`SilentFlowClient:acquireCachedToken - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`);\n            throw ClientAuthError.createRefreshRequiredError();\n        } else if (cacheRecord.accessToken.refreshOn && TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)) {\n            // Must refresh due to the refresh_in value.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.REFRESH_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        }\n\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n\n        return await this.generateResultFromCacheRecord(cacheRecord, request);\n    }\n\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    private async generateResultFromCacheRecord(cacheRecord: CacheRecord, request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        let idTokenObj: AuthToken | undefined;\n        if (cacheRecord.idToken) {\n            idTokenObj = new AuthToken(cacheRecord.idToken.secret, this.config.cryptoInterface);\n        }\n        return await ResponseHandler.generateAuthenticationResult(\n            this.cryptoUtils,\n            this.authority,\n            cacheRecord,\n            true,\n            request,\n            idTokenObj\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { CommonSilentFlowRequest, AuthenticationResult, SilentFlowClient, ServerTelemetryManager, AccountInfo, AzureCloudOptions, PerformanceEvents, AuthError} from \"@azure/msal-common\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\n\nexport class SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(silentRequest: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n\n        const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Silent auth client created\");\n\n        try {\n            const cachedToken = await silentAuthClient.acquireCachedToken(silentRequest);\n\n            acquireTokenMeasurement.endMeasurement({\n                success: true,\n                fromCache: true\n            });\n            return cachedToken;\n        } catch (error) {\n            if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code) {\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\n            }\n            acquireTokenMeasurement.endMeasurement({\n                errorCode: error instanceof AuthError && error.errorCode || undefined,\n                subErrorCode: error instanceof AuthError && error.subError || undefined,\n                success: false\n            });\n            throw error;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createSilentFlowClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string, azureCloudOptions?: AzureCloudOptions): Promise<SilentFlowClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new SilentFlowClient(clientConfig, this.performanceClient);\n    }\n\n    async initializeSilentRequest(request: SilentRequest, account: AccountInfo): Promise<CommonSilentFlowRequest> {\n        return {\n            ...request,\n            ...await this.initializeBaseRequest(request),\n            account: account,\n            forceRefresh: request.forceRefresh || false\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, Logger, ICrypto, PromptValue, AuthToken, Constants, AccountEntity, AuthorityType, ScopeSet, TimeUtils, AuthenticationScheme, UrlString, OIDC_DEFAULT_SCOPES, PopTokenGenerator, SignedHttpRequestParameters, IPerformanceClient, PerformanceEvents, IdTokenEntity, AccessTokenEntity, ClientAuthError, AuthError, CommonSilentFlowRequest, AccountInfo } from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeExtensionMethod, ApiId, TemporaryCacheKeys, NativeConstants } from \"../utils/BrowserConstants\";\nimport { NativeExtensionRequestBody, NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { MATS, NativeResponse } from \"../broker/nativeBroker/NativeResponse\";\nimport { NativeAuthError } from \"../error/NativeAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { SilentCacheClient } from \"./SilentCacheClient\";\n\nexport class NativeInteractionClient extends BaseInteractionClient {\n    protected apiId: ApiId;\n    protected accountId: string;\n    protected nativeMessageHandler: NativeMessageHandler;\n    protected silentCacheClient: SilentCacheClient;\n    protected nativeStorageManager: BrowserCacheManager;\n\n    constructor(config: BrowserConfiguration, browserStorage: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, performanceClient: IPerformanceClient, provider: NativeMessageHandler, accountId: string, nativeStorageImpl: BrowserCacheManager, correlationId?: string) {\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new SilentCacheClient(config, this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n    }\n\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(request: PopupRequest|SilentRequest|SsoSilentRequest): Promise<AuthenticationResult> {\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        // initialize native request\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        // check if the tokens can be retrieved from internal cache\n        try {\n            const result = await this.acquireTokensFromCache(this.accountId, nativeRequest);\n            nativeATMeasurement.endMeasurement({\n                success: true,\n                isNativeBroker: true,\n                fromCache: true\n            });\n            return result;\n        } catch (e) {\n            // continue with a native call for any and all errors\n            this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\n        }\n\n        // fall back to native calls\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest\n        };\n\n        const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n        const validatedResponse: NativeResponse = this.validateNativeResponse(response);\n\n        return this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\n            .then((result: AuthenticationResult) => {\n                nativeATMeasurement.endMeasurement({\n                    success: true,\n                    isNativeBroker: true\n                });\n                return result;\n            })\n            .catch((error: AuthError) => {\n                nativeATMeasurement.endMeasurement({\n                    success: false,\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    isNativeBroker: true\n                });\n                throw error;\n            });\n    }\n\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    private createSilentCacheRequest(request: NativeTokenRequest, cachedAccount: AccountInfo): CommonSilentFlowRequest {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    protected async acquireTokensFromCache(nativeAccountId: string, request: NativeTokenRequest): Promise<AuthenticationResult> {\n\n        // fetch the account from in-memory cache\n        const accountEntity = this.browserStorage.readAccountFromCacheWithNativeAccountId(nativeAccountId);\n        if (!accountEntity) {\n            throw ClientAuthError.createNoAccountFoundError();\n        }\n        const account = accountEntity.getAccountInfo();\n\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(request, account);\n            const result = await this.silentCacheClient.acquireToken(silentRequest);\n            return result;\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest\n        };\n\n        try {\n            const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        } catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError && e.isFatal()) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n\n        const navigationOptions: NavigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl ? window.location.href : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise(): Promise<AuthenticationResult | null> {\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n            return null;\n        }\n\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n            return null;\n        }\n\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: cachedRequest\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(response as NativeResponse, cachedRequest, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return result;\n        } catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout(): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    protected async handleNativeResponse(response: NativeResponse, request: NativeTokenRequest, reqTimestamp: number): Promise<AuthenticationResult> {\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw NativeAuthError.createUserSwitchError();\n        }\n\n        // create an idToken object (not entity)\n        const idTokenObj = new AuthToken(response.id_token || Constants.EMPTY_STRING, this.browserCrypto);\n\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n        const authorityPreferredCache = authority.getPreferredCache();\n\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj);\n        const accountEntity = AccountEntity.createAccount(response.client_info, homeAccountIdentifier, idTokenObj, undefined, undefined, undefined, authorityPreferredCache, response.account.id);\n        this.browserStorage.setAccount(accountEntity);\n\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\n\n        const accountProperties = response.account.properties || {};\n        const uid = accountProperties[\"UID\"] || idTokenObj.claims.oid || idTokenObj.claims.sub || Constants.EMPTY_STRING;\n        const tid = accountProperties[\"TenantId\"] || idTokenObj.claims.tid || Constants.EMPTY_STRING;\n\n        // This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT is still received, SHR is calculated locally\n        let responseAccessToken;\n        let responseTokenType: AuthenticationScheme = AuthenticationScheme.BEARER;\n        switch (request.tokenType) {\n            case AuthenticationScheme.POP: {\n                // Set the token type to POP in the response\n                responseTokenType = AuthenticationScheme.POP;\n\n                // Check if native layer returned an SHR token\n                if (response.shr) {\n                    this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n                    responseAccessToken = response.shr;\n                    break;\n                }\n\n                // Generate SHR in msal js if WAM does not compute it when POP is enabled\n                const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n                const shrParameters: SignedHttpRequestParameters = {\n                    resourceRequestMethod: request.resourceRequestMethod,\n                    resourceRequestUri: request.resourceRequestUri,\n                    shrClaims: request.shrClaims,\n                    shrNonce: request.shrNonce\n                };\n\n                /**\n                 * KeyID must be present in the native request from when the PoP key was generated in order for\n                 * PopTokenGenerator to query the full key for signing\n                 */\n                if (!request.keyId) {\n                    throw ClientAuthError.createKeyIdMissingError();\n                }\n\n                responseAccessToken = await popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\n                break;\n\n            }\n            // assign the access token to the response for all non-POP cases (Should be Bearer only today)\n            default: {\n                responseAccessToken = response.access_token;\n            }\n        }\n\n        const mats = this.getMATSFromResponse(response);\n\n        const result: AuthenticationResult = {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountEntity.getAccountInfo(),\n            idToken: response.id_token,\n            idTokenClaims: idTokenObj.claims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n            tokenType: responseTokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true\n        };\n\n        // cache idToken in inmemory storage\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(\n            homeAccountIdentifier,\n            request.authority,\n            response.id_token || Constants.EMPTY_STRING,\n            request.clientId,\n            idTokenObj.claims.tid || Constants.EMPTY_STRING,\n        );\n        this.nativeStorageManager.setIdTokenCredential(idTokenEntity);\n\n        // cache accessToken in inmemory storage\n        const expiresIn: number = (responseTokenType === AuthenticationScheme.POP)\n            ? Constants.SHR_NONCE_VALIDITY\n            : (\n                typeof response.expires_in === \"string\"\n                    ? parseInt(response.expires_in, 10)\n                    : response.expires_in\n            ) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(\n            homeAccountIdentifier,\n            request.authority,\n            responseAccessToken,\n            request.clientId,\n            tid,\n            responseScopes.printScopes(),\n            tokenExpirationSeconds,\n            0,\n            this.browserCrypto\n        );\n        this.nativeStorageManager.setAccessTokenCredential(accessTokenEntity);\n\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\n        });\n\n        return result;\n    }\n\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    private validateNativeResponse(response: object): NativeResponse {\n        if (\n            response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")\n        ) {\n            return response as NativeResponse;\n        } else {\n            throw NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\n        }\n    }\n\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    private getMATSFromResponse(response: NativeResponse): MATS|null {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            } catch (e) {\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    private isResponseFromCache(mats: MATS): boolean {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\n            return false;\n        }\n\n        return !!mats.is_cached;\n    }\n\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    protected async initializeNativeRequest(request: PopupRequest|SsoSilentRequest): Promise<NativeTokenRequest> {\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n\n        const authority = request.authority || this.config.auth.authority;\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request; \n        const scopeSet = new ScopeSet(scopes || []);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\n                    return PromptValue.NONE;\n                default:\n                    break;\n            }\n\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\n                return undefined;\n            }\n\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n                    return request.prompt;\n                default:\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\n                    throw BrowserAuthError.createNativePromptParameterNotSupportedError();\n            }\n        };\n        \n        const validatedRequest: NativeTokenRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n                telemetry: NativeConstants.MATS_TELEMETRY\n            },\n            extendedExpiryToken: false // Make this configurable?\n        };\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n\n            // add POP request type\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce\n            };\n\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const reqCnfData = await popTokenGenerator.generateCnf(shrParameters);\n\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.reqCnf = reqCnfData.reqCnfHash;\n            validatedRequest.keyId = reqCnfData.kid;\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NativeConstants, NativeExtensionMethod } from \"../../utils/BrowserConstants\";\nimport { Logger, AuthError, AuthenticationScheme } from \"@azure/msal-common\";\nimport { NativeExtensionRequest, NativeExtensionRequestBody } from \"./NativeRequest\";\nimport { NativeAuthError } from \"../../error/NativeAuthError\";\nimport { BrowserAuthError } from \"../../error/BrowserAuthError\";\nimport { BrowserConfiguration } from \"../../config/Configuration\";\n\ntype ResponseResolvers<T> = {\n    resolve: (value:T|PromiseLike<T>) => void;\n    reject: (value:AuthError|Error|PromiseLike<Error>|PromiseLike<AuthError>)  => void;\n};\n\nexport class NativeMessageHandler {\n    private extensionId: string | undefined;\n    private logger: Logger;\n    private handshakeTimeoutMs: number;\n    private responseId: number;\n    private timeoutId: number | undefined;\n    private resolvers: Map<number, ResponseResolvers<object>>;\n    private handshakeResolvers: Map<number, ResponseResolvers<void>>;\n    private messageChannel: MessageChannel;\n    private windowListener: (event: MessageEvent) => void;\n\n    constructor(logger: Logger, handshakeTimeoutMs: number, extensionId?: string) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.responseId = 0;\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n    }\n\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body \n     */\n    async sendMessage(body: NativeExtensionRequestBody): Promise<object> {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: this.responseId++,\n            body: body\n        };\n\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\n        this.messageChannel.port1.postMessage(req);\n\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, {resolve, reject});\n        });\n    }\n\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param logger \n     * @param handshakeTimeoutMs\n     */\n    static async createProvider(logger: Logger, handshakeTimeoutMs: number): Promise<NativeMessageHandler> {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, NativeConstants.PREFERRED_EXTENSION_ID);\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        } catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs);\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n\n    /**\n     * Send handshake request helper.\n     */\n    private async sendHandshakeRequest(): Promise<void> {\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: this.responseId++,\n\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest\n            }\n        };\n\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, {resolve, reject});\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\"message\", this.windowListener, false);\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                reject(BrowserAuthError.createNativeHandshakeTimeoutError());\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event \n     */\n    private onWindowMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n\n        const request = event.data;\n\n        if (!request.channel || request.channel !== NativeConstants.CHANNEL_ID) {\n            return;\n        }\n\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(request.extensionId ? `Extension with id: ${request.extensionId} not installed` : \"No extension installed\");\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n            if (handshakeResolver) {\n                handshakeResolver.reject(BrowserAuthError.createNativeExtensionNotInstalledError());\n            }\n        }\n    }\n\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event \n     */\n    private onChannelMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n        \n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n\n        try {\n            const method = request.body.method;\n            \n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\n                if (response.status !== \"Success\") {\n                    resolver.reject(NativeAuthError.createError(response.code, response.description, response.ext));\n                } else if (response.result) {\n                    if (response.result[\"code\"] && response.result[\"description\"]) {\n                        resolver.reject(NativeAuthError.createError(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\n                    } else {\n                        resolver.resolve(response.result);\n                    }\n                } else {\n                    throw AuthError.createUnexpectedError(\"Event does not contain result.\");\n                }\n                this.resolvers.delete(request.responseId);\n            } else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\n\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            } \n            // Do nothing if method is not Response or HandshakeResponse\n        } catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err.toString()}`);\n            this.logger.errorPii(`Unable to parse ${event}`);\n\n            if (resolver) {\n                resolver.reject(err as AuthError);\n            } else if (handshakeResolver) {\n                handshakeResolver.reject(err as AuthError);\n            }\n        }\n    }\n    \n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme \n     */\n    static isNativeAvailable(config: BrowserConfiguration, logger: Logger, nativeExtensionProvider?: NativeMessageHandler, authenticationScheme?: AuthenticationScheme): boolean {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\"isNativeAvailable: allowNativeBroker is not enabled, returning false\");\n            // Developer disabled WAM\n            return false;\n        }\n\n        if (!nativeExtensionProvider) {\n            logger.trace(\"isNativeAvailable: WAM extension provider is not initialized, returning false\");\n            // Extension is not available\n            return false;\n        }\n\n        if (authenticationScheme) {\n            switch(authenticationScheme) {\n                case AuthenticationScheme.BEARER:\n                case AuthenticationScheme.POP:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is supported, returning true\");\n                    return true;\n                default:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is not supported, returning false\");\n                    return false;\n            }\n        }\n\n        return true;\n    }\n} \n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizationCodePayload , StringUtils, CommonAuthorizationCodeRequest, AuthenticationResult, AuthorizationCodeClient, AuthorityFactory, Authority, INetworkModule, ClientAuthError, CcsCredential, Logger, ServerError } from \"@azure/msal-common\";\n\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\nimport { TemporaryCacheKeys } from \"../utils/BrowserConstants\";\n\nexport type InteractionParams = {};\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport class InteractionHandler {\n\n    protected authModule: AuthorizationCodeClient;\n    protected browserStorage: BrowserCacheManager;\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\n    protected logger: Logger;\n\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, logger: Logger) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n    }\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponseFromHash(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule): Promise<AuthenticationResult> {\n        this.logger.verbose(\"InteractionHandler.handleCodeResponse called\");\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        } catch (e) {\n            if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw BrowserAuthError.createUserCancelledError();\n            } else {\n                throw e;\n            }\n        }\n\n        return this.handleCodeResponseFromServer(authCodeResponse, state, authority, networkModule);\n    }\n\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse \n     * @param state \n     * @param authority \n     * @param networkModule \n     * @returns \n     */\n    async handleCodeResponseFromServer(authCodeResponse: AuthorizationCodePayload, state: string, authority: Authority, networkModule: INetworkModule, validateNonce: boolean = true): Promise<AuthenticationResult> {\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n        \n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            authCodeResponse.nonce = cachedNonce || undefined;\n        }\n        \n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n\n    /**\n     * Updates authority based on cloudInstanceHostname\n     * @param cloudInstanceHostname \n     * @param authority \n     * @param networkModule \n     */\n    protected async updateTokenEndpointAuthority(cloudInstanceHostname: string, authority: Authority, networkModule: INetworkModule): Promise<void> {\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${authority.tenant}/`;\n        const cloudInstanceAuthority = await AuthorityFactory.createDiscoveredInstance(cloudInstanceAuthorityUri, networkModule, this.browserStorage, authority.options);\n        this.authModule.updateAuthority(cloudInstanceAuthority);\n    }\n\n    /**\n     * Looks up ccs creds in the cache\n     */\n    protected checkCcsCredentials(): CcsCredential | null {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, true);\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred) as CcsCredential;\n            } catch (e) {\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, ThrottlingUtils, CommonEndSessionRequest, UrlString, AuthError, OIDC_DEFAULT_SCOPES, Constants, ProtocolUtils, ServerAuthorizationCodeResponse, PerformanceEvents, StringUtils, IPerformanceClient, Logger, ICrypto } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { EventType } from \"../event/EventType\";\nimport { InteractionType, ApiId, BrowserConstants } from \"../utils/BrowserConstants\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { InteractionHandler, InteractionParams } from \"../interaction_handler/InteractionHandler\";\nimport { PopupWindowAttributes } from \"../request/PopupWindowAttributes\";\n\nexport type PopupParams = InteractionParams & {\n    popup?: Window|null;\n    popupName: string;\n    popupWindowAttributes: PopupWindowAttributes\n};\n\nexport class PopupClient extends StandardInteractionClient {\n    private currentWindow: Window | undefined;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, performanceClient: IPerformanceClient, nativeStorageImpl: BrowserCacheManager, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request: PopupRequest): Promise<AuthenticationResult> {\n        try {\n            const popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n            } else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n            } else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n            }\n        } catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenPopupAsync(request: PopupRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, popup?: Window|null): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n        const validRequest = await this.initializeAuthorizationRequest(request, InteractionType.Popup);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n\n            const isNativeBroker = NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\n            }\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker\n            });\n\n            // Create popup interaction handler.\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\n\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters: PopupParams = {\n                popup,\n                popupName,\n                popupWindowAttributes\n            };\n            const popupWindow: Window = this.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\n\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const hash = await this.monitorPopupForHash(popupWindow);\n            // Deserialize hash fragment response parameters.\n            const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n            const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Popup, validRequest.correlationId);\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n\n            if (serverParams.accountId) {\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.endMeasurement({\n                        success: true,\n                        isNativeBroker: true\n                    });\n                }\n\n                if (!this.nativeMessageHandler) {\n                    throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n                }\n                const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\n                const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n                return nativeInteractionClient.acquireToken({\n                    ...validRequest,\n                    state: userRequestState,\n                    prompt: undefined // Server should handle the prompt, ideally native broker can do this part silently\n                }).finally(() => {\n                    this.browserStorage.cleanRequestByState(state);\n                });\n            }\n\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n\n            return result;\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    protected async logoutPopupAsync(validRequest: CommonEndSessionRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, requestAuthority?: string, popup?: Window|null, mainWindowRedirectUri?: string): Promise<void> {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n\n            // Initialize the client\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, requestAuthority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\n\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {popupName, popupWindowAttributes, popup});\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\n\n            await this.waitForLogoutPopup(popupWindow);\n\n            if (mainWindowRedirectUri) {\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\n                this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            } else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\n        // Check that request url is not empty.\n        if (!StringUtils.isEmpty(requestUrl)) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow: Window): Promise<string> {\n        return new Promise((resolve, reject) => {\n            /*\n             * Polling for popups needs to be tick-based,\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\n             */\n            const maxTicks = this.config.system.windowHashTimeout / BrowserConstants.POLL_INTERVAL_MS;\n            let ticks = 0;\n\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createUserCancelledError());\n                    return;\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                let hash: string = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                    hash = popupWindow.location.hash;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\n\n                /*\n                 * Only run clock when we are on same domain for popups\n                 * as popup operations can take a long time.\n                 */\n                ticks++;\n\n                if (hash) {\n                    this.logger.verbose(\"PopupHandler.monitorPopupForHash - found hash in url\");\n                    clearInterval(intervalId);\n                    this.cleanPopup(popupWindow);\n\n                    if (UrlString.hashContainsKnownProperties(hash)) {\n                        this.logger.verbose(\"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\");\n                        resolve(hash);\n                    } else {\n                        this.logger.error(\"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\");\n                        this.logger.errorPii(`PopupHandler.monitorPopupForHash - hash found: ${hash}`);\n                        reject(BrowserAuthError.createHashDoesNotContainKnownPropertiesError());\n                    }\n                } else if (ticks > maxTicks) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\");\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createMonitorPopupTimeoutError());\n                }\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * Waits for user interaction in logout popup window\n     * @param popupWindow\n     * @returns\n     */\n    waitForLogoutPopup(popupWindow: Window): Promise<void> {\n        return new Promise((resolve) => {\n            this.logger.verbose(\"PopupHandler.waitForLogoutPopup - polling started\");\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.waitForLogoutPopup - window closed\");\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    resolve();\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n\n                this.logger.verbose(\"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\");\n\n                clearInterval(intervalId);\n                this.cleanPopup(popupWindow);\n                resolve();\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\n                popupWindow.location.assign(urlNavigate);\n            } else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\n            }\n\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw BrowserAuthError.createEmptyWindowCreatedError();\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n\n            return popupWindow;\n        } catch (e) {\n            this.logger.error(\"error opening popup \" + (e as AuthError).message);\n            this.browserStorage.setInteractionInProgress(false);\n            throw BrowserAuthError.createPopupWindowError((e as AuthError).toString());\n        }\n    }\n\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(urlNavigate: string, popupName: string, popupWindowAttributes: PopupWindowAttributes): Window|null {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        const winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n            top = Math.max(0, ((winHeight / 2) - (BrowserConstants.POPUP_HEIGHT / 2)) + winTop);\n        }\n\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n            left = Math.max(0, ((winWidth / 2) - (BrowserConstants.POPUP_WIDTH / 2)) + winLeft);\n        }\n\n        return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow?: Window): void {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes: Array<string>, authority: string): string {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request: CommonEndSessionRequest): string {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizationCodeClient, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AuthenticationResult, Authority, INetworkModule, ClientAuthError, Logger, ServerError } from \"@azure/msal-common\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { InteractionHandler, InteractionParams } from \"./InteractionHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\n\nexport type RedirectParams = InteractionParams & {\n    navigationClient: INavigationClient;\n    redirectTimeout: number;\n    redirectStartPage: string;\n    onRedirectNavigate?: (url: string) => void | boolean;\n};\n\nexport class RedirectHandler extends InteractionHandler {\n\n    private browserCrypto: ICrypto;\n\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, logger: Logger, browserCrypto: ICrypto) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger);\n        this.browserCrypto = browserCrypto;\n    }\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(requestUrl: string, params: RedirectParams): Promise<void> {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (!StringUtils.isEmpty(requestUrl)) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            }\n\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false\n            };\n            \n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n                const navigate = params.onRedirectNavigate(requestUrl);\n\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                    return;\n                } else {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n                    return;\n                }\n            } else {\n                // Navigate window to request URL\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                return;\n            }\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponseFromHash(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule): Promise<AuthenticationResult> {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n        } catch (e) {\n            if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw BrowserAuthError.createUserCancelledError();\n            } else {\n                throw e;\n            }\n        }\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\n\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, UrlString, AuthError, ServerTelemetryManager, Constants, ProtocolUtils, ServerAuthorizationCodeResponse, ThrottlingUtils, ICrypto, Logger, IPerformanceClient } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { ApiId, InteractionType, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\n\nexport class RedirectClient extends StandardInteractionClient {\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, performanceClient: IPerformanceClient, nativeStorageImpl: BrowserCacheManager, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request: RedirectRequest): Promise<void> {\n        const validRequest = await this.initializeAuthorizationRequest(request, InteractionType.Redirect);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect);\n\n        const handleBackButton = (event: PageTransitionEvent) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\n                this.browserStorage.cleanRequestByState(validRequest.state);\n            }\n        };\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.browserCrypto);\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme)\n            });\n\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise);\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n                return null;\n            }\n\n            const responseHash = this.getRedirectResponseHash(hash || window.location.hash);\n            if (!responseHash) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\"handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache.\");\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n\n            let state: string;\n            try {\n                // Deserialize hash fragment response parameters.\n                const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(responseHash);\n                state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Redirect);\n                this.logger.verbose(\"State extracted from hash\");\n            } catch (e) {\n                this.logger.info(`handleRedirectPromise was unable to extract state due to: ${e}`);\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, true) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\n\n            if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\"Current page is loginRequestUrl, handling hash\");\n                const handleHashResult = await this.handleHash(responseHash, state, serverTelemetryManager);\n\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    BrowserUtils.replaceHash(loginRequestUrl);\n                }\n\n                return handleHashResult;\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling hash\");\n                return this.handleHash(responseHash, state, serverTelemetryManager);\n            } else if (!BrowserUtils.isInIframe() || this.config.system.allowRedirectInIframe) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.URL_HASH, responseHash, true);\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true\n                };\n\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect: boolean = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, homepage, true);\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(homepage, navigationOptions);\n                } else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\n                }\n\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return this.handleHash(responseHash, state, serverTelemetryManager);\n                }\n            }\n\n            return null;\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n            throw e;\n        }\n    }\n\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    protected getRedirectResponseHash(hash: string): string | null {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        const isResponseHash: boolean = UrlString.hashContainsKnownProperties(hash);\n\n        if (isResponseHash) {\n            BrowserUtils.clearHash(window);\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\n            return hash;\n        }\n\n        const cachedHash = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.URL_HASH, true);\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n\n        this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\n        return cachedHash;\n    }\n\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    protected async handleHash(hash: string, state: string, serverTelemetryManager: ServerTelemetryManager): Promise<AuthenticationResult> {\n        const cachedRequest = this.browserStorage.getCachedRequest(state, this.browserCrypto);\n        this.logger.verbose(\"handleHash called, retrieved cached request\");\n\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, cachedRequest.correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient.acquireToken({\n                ...cachedRequest,\n                state: userRequestState,\n                prompt: undefined // Server should handle the prompt, ideally native broker can do this part silently\n            }).finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw BrowserAuthError.createNoCachedAuthorityError();\n        }\n\n        const authClient = await this.createAuthCodeClient(serverTelemetryManager, currentAuthority);\n        this.logger.verbose(\"Auth code client created\");\n        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.browserCrypto);\n        return await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logout);\n\n        try {\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Redirect, logoutRequest);\n\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false\n            };\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, logoutRequest && logoutRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validLogoutRequest);\n\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (logoutRequest && typeof logoutRequest.onRedirectNavigate === \"function\") {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n\n                if (navigate !== false) {\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                    return;\n                } else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\n                }\n            } else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                return;\n            }\n        } catch(e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Redirect, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n    }\n\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    protected getRedirectStartPage(requestStartPage?: string): string {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(redirectStartPage, BrowserUtils.getCurrentUri());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { UrlString, StringUtils, CommonAuthorizationCodeRequest, AuthorizationCodeClient, Constants, Logger } from \"@azure/msal-common\";\nimport { InteractionHandler } from \"./InteractionHandler\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration\";\n\nexport class SilentHandler extends InteractionHandler {\n\n    private navigateFrameWait: number;\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, logger: Logger, navigateFrameWait: number) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger);\n        this.navigateFrameWait = navigateFrameWait;\n    }\n\n    /**\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\n     * @param urlNavigate\n     * @param userRequestScopes\n     */\n    async initiateAuthRequest(requestUrl: string): Promise<HTMLIFrameElement> {\n        if (StringUtils.isEmpty(requestUrl)) {\n            // Throw error if request URL is empty.\n            this.logger.info(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n\n        return this.navigateFrameWait ? await this.loadFrame(requestUrl) : this.loadFrameSync(requestUrl);\n    }\n\n    /**\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n     * @param iframe\n     * @param timeout\n     */\n    monitorIframeForHash(iframe: HTMLIFrameElement, timeout: number): Promise<string> {\n        return new Promise((resolve, reject) => {\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n                this.logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n            }\n\n            /*\n             * Polling for iframes can be purely timing based,\n             * since we don't need to account for interaction.\n             */\n            const nowMark = window.performance.now();\n            const timeoutMark = nowMark + timeout;\n\n            const intervalId = setInterval(() => {\n                if (window.performance.now() > timeoutMark) {\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createMonitorIframeTimeoutError());\n                    return;\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                const contentWindow = iframe.contentWindow;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\n                } catch (e) {}\n\n                if (StringUtils.isEmpty(href)) {\n                    return;\n                }\n\n                const contentHash = contentWindow ? contentWindow.location.hash: Constants.EMPTY_STRING;\n                if (UrlString.hashContainsKnownProperties(contentHash)) {\n                    // Success case\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    resolve(contentHash);\n                    return;\n                }\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads iframe with authorization endpoint URL\n     * @ignore\n     */\n    private loadFrame(urlNavigate: string): Promise<HTMLIFrameElement> {\n        /*\n         * This trick overcomes iframe navigation in IE\n         * IE does not load the page consistently in iframe\n         */\n\n        return new Promise((resolve, reject) => {\n            const frameHandle = this.createHiddenIframe();\n\n            setTimeout(() => {\n                if (!frameHandle) {\n                    reject(\"Unable to load iframe\");\n                    return;\n                }\n\n                frameHandle.src = urlNavigate;\n\n                resolve(frameHandle);\n            }, this.navigateFrameWait);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n     * @param urlNavigate\n     * @param frameName\n     * @param logger\n     */\n    private loadFrameSync(urlNavigate: string): HTMLIFrameElement{\n        const frameHandle = this.createHiddenIframe();\n\n        frameHandle.src = urlNavigate;\n\n        return frameHandle;\n    }\n\n    /**\n     * @hidden\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\n     * @ignore\n     */\n    private createHiddenIframe(): HTMLIFrameElement {\n        const authFrame = document.createElement(\"iframe\");\n\n        authFrame.style.visibility = \"hidden\";\n        authFrame.style.position = \"absolute\";\n        authFrame.style.width = authFrame.style.height = \"0\";\n        authFrame.style.border = \"0\";\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n\n        return authFrame;\n    }\n\n    /**\n     * @hidden\n     * Removes a hidden iframe from the page.\n     * @ignore\n     */\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\n        if (document.body === iframe.parentNode) {\n            document.body.removeChild(iframe);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, ICrypto, Logger, StringUtils, PromptValue, CommonAuthorizationCodeRequest, AuthorizationCodeClient, AuthError, Constants, UrlString, ServerAuthorizationCodeResponse, ProtocolUtils, IPerformanceClient, PerformanceEvents } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\n\nexport class SilentIframeClient extends StandardInteractionClient {\n    protected apiId: ApiId;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, performanceClient: IPerformanceClient, nativeStorageImpl: BrowserCacheManager, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none\n     * @param request\n     */\n    async acquireToken(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenByIframe called\");\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n        // Check that we have some SSO data\n        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n        }\n\n        // Check that prompt is set to none, throw error if it is set to anything else.\n        if (request.prompt && request.prompt !== PromptValue.NONE) {\n            acquireTokenMeasurement.endMeasurement({\n                success: false\n            });\n            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await this.initializeAuthorizationRequest({\n            ...request,\n            prompt: PromptValue.NONE\n        }, InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n\n        try {\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n            this.logger.verbose(\"Auth code client created\");\n\n            return await this.silentTokenHelper(authClient, silentRequest).then((result: AuthenticationResult) => {\n                acquireTokenMeasurement.endMeasurement({\n                    success: true,\n                    fromCache: false\n                });\n                return result;\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            acquireTokenMeasurement.endMeasurement({\n                errorCode: e instanceof AuthError && e.errorCode || undefined,\n                subErrorCode: e instanceof AuthError && e.subError || undefined,\n                success: false\n            });\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    protected async silentTokenHelper(authClient: AuthorizationCodeClient, silentRequest: AuthorizationUrlRequest): Promise<AuthenticationResult> {\n        // Create auth code request and generate PKCE params\n        const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\n        // Create authorize request url\n        const navigateUrl = await authClient.getAuthCodeUrl({\n            ...silentRequest,\n            nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme)\n        });\n        // Create silent handler\n        const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system.navigateFrameWait);\n        // Get the frame handle for the silent request\n        const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl);\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\n        // Deserialize hash fragment response parameters.\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n        const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, authCodeRequest.correlationId);\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, this.correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient.acquireToken({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: PromptValue.NONE\n            }).finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n\n        // Handle response from hash string\n        return silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { CommonSilentFlowRequest, AuthenticationResult, ServerTelemetryManager, RefreshTokenClient, AuthError, AzureCloudOptions, PerformanceEvents } from \"@azure/msal-common\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport class SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        const silentRequest: CommonSilentFlowRequest = {\n            ...request,\n            ...await this.initializeBaseRequest(request)\n        };\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, silentRequest.correlationId);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Refresh token client created\");\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return refreshTokenClient.acquireTokenByRefreshToken(silentRequest)\n            .then((result: AuthenticationResult) => {\n                acquireTokenMeasurement.endMeasurement({\n                    success: true,\n                    fromCache: result.fromCache\n                });\n\n                return result;\n            })\n            .catch((e: AuthError) => {\n                if (e instanceof AuthError) {\n                    (e as AuthError).setCorrelationId(this.correlationId);\n                }\n                serverTelemetryManager.cacheFailedRequest(e);\n                acquireTokenMeasurement.endMeasurement({\n                    errorCode: e.errorCode,\n                    subErrorCode: e.subError,\n                    success: false\n                });\n                throw e;\n            });\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createRefreshTokenClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string, azureCloudOptions?: AzureCloudOptions): Promise<RefreshTokenClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccessTokenEntity, ICrypto, IdTokenEntity, Logger, ScopeSet, Authority, AuthorityOptions, ExternalTokenResponse, AccountEntity, AuthToken } from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\nimport { ITokenCache } from \"./ITokenCache\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport type LoadTokenOptions = {\n    clientInfo?: string,\n    expiresOn?: number,\n    extendedExpiresOn?: number\n};\n\n/**\n * Token cache manager\n */\nexport class TokenCache implements ITokenCache {\n    // Flag to indicate if in browser environment\n    public isBrowserEnvironment: boolean;\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n    // Browser cache storage\n    private storage: BrowserCacheManager;\n    // Logger\n    private logger: Logger;\n    // Crypto class\n    private cryptoObj: ICrypto;\n\n    constructor(configuration: BrowserConfiguration, storage: BrowserCacheManager, logger: Logger, cryptoObj: ICrypto) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n\n    // Move getAllAccounts here and cache utility APIs\n\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     */\n    loadExternalTokens(request: SilentRequest, response: ExternalTokenResponse, options: LoadTokenOptions): void {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n\n        if (!response.id_token) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes id token.\");\n        }\n\n        if (request.account) {\n            this.loadIdToken(response.id_token, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\n            this.loadAccessToken(request, response, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\n        } else if (request.authority) {\n\n            const authorityUrl = Authority.generateAuthority(request.authority, request.azureCloudOptions);\n            const authorityOptions: AuthorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata,\n                skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n            };\n            const authority = new Authority(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions);\n\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                this.loadIdToken(response.id_token, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\n                this.loadAccessToken(request, response, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\n            } else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                this.loadIdToken(response.id_token, response.client_info, authority.hostnameAndPort, authority.tenant, options);\n                this.loadAccessToken(request, response, response.client_info, authority.hostnameAndPort, authority.tenant, options);\n            } else {\n                throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide clientInfo in the response or options.\");\n            }\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide a request with an account or a request with authority.\");\n        }\n    }\n\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @param options\n     */\n    private loadIdToken(idToken: string, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\n\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(homeAccountId, environment, idToken, this.config.auth.clientId, tenantId);\n        const idAuthToken = new AuthToken(idToken, this.cryptoObj);\n        const accountEntity = options.clientInfo ?\n            AccountEntity.createAccount(options.clientInfo, homeAccountId, idAuthToken, undefined, undefined, undefined, environment) :\n            AccountEntity.createGenericAccount(homeAccountId, idAuthToken, undefined, undefined, undefined, environment);\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setAccount(accountEntity);\n            this.storage.setIdTokenCredential(idTokenEntity);\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param options\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns\n     */\n    private loadAccessToken(request: SilentRequest, response: ExternalTokenResponse, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\n\n        if (!response.access_token) {\n            this.logger.verbose(\"TokenCache - No access token provided for caching\");\n            return;\n        }\n\n        if (!response.expires_in) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes expires_in value.\");\n        }\n\n        if (!options.extendedExpiresOn) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide an extendedExpiresOn value in the options.\");\n        }\n\n        const scopes = new ScopeSet(request.scopes).printScopes();\n        const expiresOn = options.expiresOn || (response.expires_in + new Date().getTime() / 1000);\n        const extendedExpiresOn = options.extendedExpiresOn;\n\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes, expiresOn, extendedExpiresOn, this.cryptoObj);\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizationCodeClient, ClientConfiguration } from \"@azure/msal-common\";\n\nexport class HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\n    constructor(config: ClientConfiguration) {\n        super(config);\n        this.includeRedirectUri = false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, ICrypto, Logger, CommonAuthorizationCodeRequest, AuthError, Constants, IPerformanceClient } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { HybridSpaAuthorizationCodeClient } from \"./HybridSpaAuthorizationCodeClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\n\nexport class SilentAuthCodeClient extends StandardInteractionClient {\n    private apiId: ApiId;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, performanceClient: IPerformanceClient, nativeMessageHandler?: NativeMessageHandler, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n    }\n\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(request: AuthorizationCodeRequest): Promise<AuthenticationResult> {\n        this.logger.trace(\"SilentAuthCodeClient.acquireToken called\");\n\n        // Auth code payload is required\n        if (!request.code) {\n            throw BrowserAuthError.createAuthCodeRequiredError();\n\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await this.initializeAuthorizationRequest(request, InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n\n        try {\n\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest: CommonAuthorizationCodeRequest = {\n                ...silentRequest,\n                code: request.code\n            };\n\n            // Initialize the client\n            const clientConfig = await this.getClientConfiguration(serverTelemetryManager, silentRequest.authority);\n            const authClient: HybridSpaAuthorizationCodeClient = new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create silent handler\n            const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system.navigateFrameWait);\n\n            // Handle auth code parameters from request\n            return silentHandler.handleCodeResponseFromServer(\n                {\n                    code: request.code,\n                    msgraph_host: request.msGraphHost,\n                    cloud_graph_host_name: request.cloudGraphHostName,\n                    cloud_instance_host_name: request.cloudInstanceHostName\n                },\n                silentRequest.state,\n                authClient.authority,\n                this.networkClient,\n                false\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceMeasurement } from \"@azure/msal-common\";\n\nexport class BrowserPerformanceMeasurement implements IPerformanceMeasurement {\n    private measureName: string;\n    private correlationId: string;\n    private startMark: string;\n    private endMark: string;\n\n    constructor(name: string, correlationId: string) {\n        this.correlationId = correlationId;\n        this.measureName = `msal.measure.${name}.${this.correlationId}`;\n        this.startMark = `msal.start.${name}.${this.correlationId}`;\n        this.endMark = `msal.end.${name}.${this.correlationId}`;\n    }\n\n    static supportsBrowserPerformance(): boolean {\n        return typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.mark === \"function\" && \n            typeof window.performance.measure === \"function\" &&\n            typeof window.performance.clearMarks === \"function\" &&\n            typeof window.performance.clearMeasures === \"function\" &&\n            typeof window.performance.getEntriesByName === \"function\";\n    }\n\n    startMeasurement(): void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.startMark);\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    endMeasurement():void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.endMark);\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    flushMeasurement(): number | null {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n                if (entriesForMeasurement.length > 0) {\n                    const durationMs = entriesForMeasurement[0].duration;\n                    window.performance.clearMeasures(this.measureName);\n                    window.performance.clearMarks(this.startMark);\n                    window.performance.clearMarks(this.endMark);\n                    return durationMs;\n                }\n            } catch (e) {\n                // Silently catch and return null\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger, PerformanceEvent, PerformanceEvents, IPerformanceClient, PerformanceClient, IPerformanceMeasurement, InProgressPerformanceEvent, ApplicationTelemetry } from \"@azure/msal-common\";\nimport { BrowserCrypto } from \"../crypto/BrowserCrypto\";\nimport { GuidGenerator } from \"../crypto/GuidGenerator\";\nimport { BrowserPerformanceMeasurement } from \"./BrowserPerformanceMeasurement\";\n\nexport class BrowserPerformanceClient extends PerformanceClient implements IPerformanceClient {\n    private browserCrypto: BrowserCrypto;\n    private guidGenerator: GuidGenerator;\n    \n    constructor(clientId: string, authority: string, logger: Logger, libraryName: string, libraryVersion: string, applicationTelemetry: ApplicationTelemetry) {\n        super(clientId, authority, logger, libraryName, libraryVersion, applicationTelemetry);\n        this.browserCrypto = new BrowserCrypto(this.logger);\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\n    }\n    \n    startPerformanceMeasuremeant(measureName: string, correlationId: string): IPerformanceMeasurement {\n        return new BrowserPerformanceMeasurement(measureName, correlationId);\n    }\n\n    generateId() : string {\n        return this.guidGenerator.generateGuid();\n    }\n\n    private getPageVisibility(): string | null {\n        return document.visibilityState?.toString() || null;\n    }\n    \n    /**\n     * Starts measuring performance for a given operation. Returns a function that should be used to end the measurement.\n     * Also captures browser page visibilityState.\n     *\n     * @param {PerformanceEvents} measureName\n     * @param {?string} [correlationId]\n     * @returns {((event?: Partial<PerformanceEvent>) => PerformanceEvent| null)}\n     */\n    startMeasurement(measureName: PerformanceEvents, correlationId?: string): InProgressPerformanceEvent {\n        // Capture page visibilityState and then invoke start/end measurement\n        const startPageVisibility = this.getPageVisibility();\n        \n        const inProgressEvent = super.startMeasurement(measureName, correlationId);\n\n        return {\n            ...inProgressEvent,\n            endMeasurement: (event?: Partial<PerformanceEvent>): PerformanceEvent | null => {\n                return inProgressEvent.endMeasurement({\n                    startPageVisibility,\n                    endPageVisibility: this.getPageVisibility(),\n                    ...event\n                });\n            }\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport { StringUtils, ServerError, InteractionRequiredAuthError, AccountInfo, Constants, INetworkModule, AuthenticationResult, Logger, CommonSilentFlowRequest, ICrypto, DEFAULT_CRYPTO_IMPLEMENTATION, AuthError, PerformanceEvents, PerformanceCallbackFunction, StubPerformanceClient, IPerformanceClient, BaseAuthRequest, PromptValue } from \"@azure/msal-common\";\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration, buildConfiguration, CacheOptions, Configuration } from \"../config/Configuration\";\nimport { InteractionType, ApiId, BrowserConstants, BrowserCacheLocation, WrapperSKU, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version, name } from \"../packageMetadata\";\nimport { EventCallbackFunction } from \"../event/EventMessage\";\nimport { EventType } from \"../event/EventType\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupClient } from \"../interaction_client/PopupClient\";\nimport { RedirectClient } from \"../interaction_client/RedirectClient\";\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient\";\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient\";\nimport { TokenCache } from \"../cache/TokenCache\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { NativeInteractionClient } from \"../interaction_client/NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { NativeAuthError } from \"../error/NativeAuthError\";\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient\";\nimport { SilentAuthCodeClient } from \"../interaction_client/SilentAuthCodeClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { BrowserPerformanceClient } from \"../telemetry/BrowserPerformanceClient\";\n\nexport abstract class ClientApplication {\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Storage interface implementation\n    protected readonly browserStorage: BrowserCacheManager;\n\n    // Native Cache in memory storage implementation\n    protected readonly nativeInternalStorage: BrowserCacheManager;\n\n    // Network interface implementation\n    protected readonly networkClient: INetworkModule;\n\n    // Navigation interface implementation\n    protected navigationClient: INavigationClient;\n\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n\n    // Token cache implementation\n    private tokenCache: TokenCache;\n\n    // Logger\n    protected logger: Logger;\n\n    // Flag to indicate if in browser environment\n    protected isBrowserEnvironment: boolean;\n\n    protected eventHandler: EventHandler;\n\n    // Redirect Response Object\n    protected redirectResponse: Map<string, Promise<AuthenticationResult | null>>;\n\n    // Native Extension Provider\n    protected nativeExtensionProvider: NativeMessageHandler | undefined;\n\n    // Hybrid auth code responses\n    private hybridAuthCodeResponses: Map<string, Promise<AuthenticationResult>>;\n\n    // Performance telemetry client\n    protected performanceClient: IPerformanceClient;\n\n    // Flag representing whether or not the initialize API has been called and completed\n    protected initialized: boolean;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(configuration: Configuration) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        // Set the configuration.\n        this.config = buildConfiguration(configuration, this.isBrowserEnvironment);\n        this.initialized = false;\n\n        // Initialize logger\n        this.logger = new Logger(this.config.system.loggerOptions, name, version);\n\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n\n        // Initialize performance client\n        this.performanceClient = this.isBrowserEnvironment ?\n            new BrowserPerformanceClient(this.config.auth.clientId, this.config.auth.authority, this.logger, name, version, this.config.telemetry.application) :\n            new StubPerformanceClient(this.config.auth.clientId, this.config.auth.authority, this.logger, name, version, this.config.telemetry.application);\n\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment ? new CryptoOps(this.logger, this.performanceClient) : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment ?\n            new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger) :\n            DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger);\n\n        // initialize in memory storage for native flows\n        const nativeCacheOptions: Required<CacheOptions> = {\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false\n        };\n        this.nativeInternalStorage = new BrowserCacheManager(this.config.auth.clientId, nativeCacheOptions, this.browserCrypto, this.logger);\n\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize(): Promise<void> {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\"initialize has already been called, exiting early.\");\n            return;\n        }\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n        if (this.config.system.allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider = await NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout);\n            } catch (e) {\n                this.logger.verbose(e);\n            }\n        }\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called if native brokering is enabled\n        BrowserUtils.blockNativeBrokerCalledBeforeInitialized(this.config.system.allowNativeBroker, this.initialized);\n\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = hash || Constants.EMPTY_STRING;\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_START, InteractionType.Redirect);\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\n\n                const request: NativeTokenRequest | null = this.browserStorage.getCachedNativeRequest();\n                let redirectResponse: Promise<AuthenticationResult | null>;\n                if (request && NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider) && this.nativeExtensionProvider && !hash) {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\n                    const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, this.nativeInternalStorage, request.correlationId);\n                    redirectResponse = nativeClient.handleRedirectPromise();\n                } else {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\n                    const correlationId = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, true) || Constants.EMPTY_STRING;\n                    const redirectClient = this.createRedirectClient(correlationId);\n                    redirectResponse = redirectClient.handleRedirectPromise(hash);\n                }\n\n                response = redirectResponse.then((result: AuthenticationResult | null) => {\n                    if (result) {\n                        // Emit login event if number of accounts change\n\n                        const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n                        if (isLoggingIn) {\n                            this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, login success\");\n                        } else {\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\n                        }\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n\n                    return result;\n                }).catch((e) => {\n                    // Emit login event if there is an account\n                    if (loggedInAccounts.length > 0) {\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n                    } else {\n                        this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n\n                    throw e;\n                });\n                this.redirectResponse.set(redirectResponseKey, response);\n            } else {\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\n            }\n\n            return response;\n        }\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\n        return null;\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Redirect, request);\n        } else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Redirect, request);\n        }\n\n        let result: Promise<void>;\n\n        if (this.nativeExtensionProvider && this.canUseNative(request)) {\n            const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\n            result = nativeClient.acquireTokenRedirect(request).catch((e: AuthError) => {\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                } else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const redirectClient = this.createRedirectClient(request.correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                this.browserStorage.setInteractionInProgress(false);\n                throw e;\n            });\n        } else {\n            const redirectClient = this.createRedirectClient(request.correlationId);\n            result = redirectClient.acquireToken(request);\n        }\n\n        return result.catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n            } else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n            }\n            throw e;\n        });\n    }\n\n    // #endregion\n\n    // #region Popup Flow\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, correlationId);\n\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        } else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Popup, request);\n        }\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative(request, ApiId.acquireTokenPopup).then((response) => {\n                this.browserStorage.setInteractionInProgress(false);\n                atPopupMeasurement.endMeasurement({\n                    success: true,\n                    isNativeBroker: true,\n                    accessTokenSize: response.accessToken.length,\n                    idTokenSize: response.idToken.length,\n                });\n                atPopupMeasurement.flushMeasurement();\n                return response;\n            }).catch((e: AuthError) => {\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                } else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const popupClient = this.createPopupClient(request.correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                this.browserStorage.setInteractionInProgress(false);\n                throw e;\n            });\n        } else {\n            const popupClient = this.createPopupClient(request.correlationId);\n            result = popupClient.acquireToken(request);\n        }\n\n        return result.then((result) => {\n\n            /*\n             *  If logged in, emit acquire token events\n             */\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n            if (isLoggingIn) {\n                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Popup, result);\n            } else {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            }\n\n            atPopupMeasurement.endMeasurement({\n                success: true,\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n\n            atPopupMeasurement.flushMeasurement();\n            return result;\n        }).catch((e: AuthError) => {\n            if (loggedInAccounts.length > 0) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            } else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Popup, null, e);\n            }\n\n            atPopupMeasurement.endMeasurement({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false\n            });\n            atPopupMeasurement.flushMeasurement();\n\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        });\n    }\n\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            prompt: PromptValue.NONE,\n            correlationId: correlationId\n        };\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, correlationId);\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(EventType.SSO_SILENT_START, InteractionType.Silent, validRequest);\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(validRequest, ApiId.ssoSilent).catch((e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        } else {\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n\n        return result.then((response) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_SUCCESS, InteractionType.Silent, response);\n            ssoSilentMeasurement.endMeasurement({\n                success: true,\n                isNativeBroker: response.fromNativeBroker,\n                accessTokenSize: response.accessToken.length,\n                idTokenSize: response.idToken.length\n            });\n            ssoSilentMeasurement.flushMeasurement();\n            return response;\n        }).catch((e: AuthError) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_FAILURE, InteractionType.Silent, null, e);\n            ssoSilentMeasurement.endMeasurement({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false\n            });\n            ssoSilentMeasurement.flushMeasurement();\n            throw e;\n        });\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(request: AuthorizationCodeRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_START, InteractionType.Silent, request);\n        const atbcMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCode, request.correlationId);\n\n        try {\n            if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId\n                    })\n                        .then((result: AuthenticationResult) => {\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, InteractionType.Silent, result);\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            atbcMeasurement.endMeasurement({\n                                success: true,\n                                accessTokenSize: result.accessToken.length,\n                                idTokenSize: result.idToken.length,\n                                isNativeBroker: result.fromNativeBroker\n                            });\n                            atbcMeasurement.flushMeasurement();\n                            return result;\n                        })\n                        .catch((error: AuthError) => {\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, error);\n                            atbcMeasurement.endMeasurement({\n                                errorCode: error.errorCode,\n                                subErrorCode: error.subError,\n                                success: false\n                            });\n                            atbcMeasurement.flushMeasurement();\n                            throw error;\n                        });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                } else {\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", request.correlationId);\n                    atbcMeasurement.endMeasurement({\n                        success: true\n                    });\n                    atbcMeasurement.discardMeasurement();\n                }\n                return response;\n            } else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    return this.acquireTokenNative(request, ApiId.acquireTokenByCode, request.nativeAccountId).catch((e: AuthError) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (e instanceof NativeAuthError && e.isFatal()) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                } else {\n                    throw BrowserAuthError.createUnableToAcquireTokenFromNativePlatformError();\n                }\n            } else {\n                throw BrowserAuthError.createAuthCodeOrNativeAccountIdRequiredError();\n            }\n\n        } catch (e) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, e);\n            atbcMeasurement.endMeasurement({\n                errorCode: e instanceof AuthError && e.errorCode || undefined,\n                subErrorCode: e instanceof AuthError && e.subError || undefined,\n                success: false\n            });\n            throw e;\n        }\n    }\n\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    private async acquireTokenByCodeAsync(request: AuthorizationCodeRequest): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\n        const silentTokenResult = await silentAuthCodeClient.acquireToken(request);\n        return silentTokenResult;\n    }\n\n    /**\n     * Use this function to obtain a token before every call to the API / resource provider\n     *\n     * MSAL return's a cached token when available\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\n     *\n     * @param {@link SilentRequest}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenByRefreshToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n        const atbrtMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByRefreshToken, request.correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_NETWORK_START, InteractionType.Silent, request);\n\n        const silentRefreshClient = this.createSilentRefreshClient(request.correlationId);\n\n        return silentRefreshClient.acquireToken(request)\n            .then((result: AuthenticationResult) => {\n                atbrtMeasurement.endMeasurement({\n                    success: true,\n                    fromCache: result.fromCache,\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                });\n                return result;\n            })\n            .catch(e => {\n                const isServerError = e instanceof ServerError;\n                const isInteractionRequiredError = e instanceof InteractionRequiredAuthError;\n                const isInvalidGrantError = (e.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\n                if (isServerError && isInvalidGrantError && !isInteractionRequiredError) {\n                    this.logger.verbose(\"Refresh token expired or invalid, attempting acquire token by iframe\", request.correlationId);\n\n                    const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n                    return silentIframeClient.acquireToken(request)\n                        .then((result: AuthenticationResult) => {\n                            atbrtMeasurement.endMeasurement({\n                                success: true,\n                                fromCache: result.fromCache,\n                                accessTokenSize: result.accessToken.length,\n                                idTokenSize: result.idToken.length,\n                            });\n\n                            return result;\n                        })\n                        .catch((error) => {\n                            atbrtMeasurement.endMeasurement({\n                                errorCode: error.errorCode,\n                                subErrorCode: error.subError,\n                                success: false\n                            });\n                            throw error;\n                        });\n                }\n                atbrtMeasurement.endMeasurement({\n                    success: false\n                });\n                throw e;\n            });\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest\n        });\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    // #endregion\n\n    // #region Account APIs\n\n    /**\n     * Returns all accounts that MSAL currently has data for.\n     * (the account object is created at the time of successful login)\n     * or empty array when no accounts are found\n     * @returns Array of account objects in cache\n     */\n    getAllAccounts(): AccountInfo[] {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment ? this.browserStorage.getAllAccounts() : [];\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(userName: string): AccountInfo | null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(userName) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching username found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching username: ${userName}`);\n            return allAccounts.filter(accountObj => accountObj.username.toLowerCase() === userName.toLowerCase())[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(homeAccountId) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching homeAccountId found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\n            return allAccounts.filter(accountObj => accountObj.homeAccountId === homeAccountId)[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(localAccountId) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching localAccountId found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching localAccountId: ${localAccountId}`);\n            return allAccounts.filter(accountObj => accountObj.localAccountId === localAccountId)[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.browserStorage.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.browserStorage.getActiveAccount();\n    }\n\n    // #endregion\n\n    // #region Helpers\n\n    /**\n     * Helper to validate app environment before making an auth request\n     *\n     * @protected\n     * @param {InteractionType} interactionType What kind of interaction is being used\n     * @param {boolean} [setInteractionInProgress=true] Whether to set interaction in progress temp cache flag\n     */\n    protected preflightBrowserEnvironmentCheck(interactionType: InteractionType, setInteractionInProgress: boolean = true): void {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        BrowserUtils.blockNonBrowserEnvironment(this.isBrowserEnvironment);\n\n        // Block redirects if in an iframe\n        BrowserUtils.blockRedirectInIframe(interactionType, this.config.system.allowRedirectInIframe);\n\n        // Block auth requests inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        BrowserUtils.blockAcquireTokenInPopups();\n\n        // Block token acquisition before initialize has been called if native brokering is enabled\n        BrowserUtils.blockNativeBrokerCalledBeforeInitialized(this.config.system.allowNativeBroker, this.initialized);\n\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (interactionType === InteractionType.Redirect &&\n            this.config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie) {\n            throw BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError();\n        }\n\n        if (interactionType === InteractionType.Redirect || interactionType === InteractionType.Popup) {\n            this.preflightInteractiveRequest(setInteractionInProgress);\n        }\n    }\n\n    /**\n     * Preflight check for interactive requests\n     *\n     * @protected\n     * @param {boolean} setInteractionInProgress Whether to set interaction in progress temp cache flag\n     */\n    protected preflightInteractiveRequest(setInteractionInProgress: boolean): void {\n        this.logger.verbose(\"preflightInteractiveRequest called, validating app environment\");\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Set interaction in progress temporary cache or throw if alread set.\n        if (setInteractionInProgress) {\n            this.browserStorage.setInteractionInProgress(true);\n        }\n    }\n\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    protected async acquireTokenNative(request: PopupRequest | SilentRequest | SsoSilentRequest, apiId: ApiId, accountId?: string): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n        }\n\n        const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\n\n        return nativeClient.acquireToken(request);\n    }\n\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    protected canUseNative(request: RedirectRequest | PopupRequest | SsoSilentRequest, accountId?: string): boolean {\n        this.logger.trace(\"canUseNative called\");\n        if (!NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\n            this.logger.trace(\"canUseNative: isNativeAvailable returned false, returning false\");\n            return false;\n        }\n\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"canUseNative: prompt is compatible with native flow\");\n                    break;\n                default:\n                    this.logger.trace(`canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`);\n                    return false;\n            }\n        }\n\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\"canUseNative: nativeAccountId is not available, returning false\");\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    protected getNativeAccountId(request: RedirectRequest | PopupRequest | SsoSilentRequest): string {\n        const account = request.account || this.browserStorage.getAccountInfoByHints(request.loginHint, request.sid) || this.getActiveAccount();\n\n        return account && account.nativeAccountId || \"\";\n    }\n\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    protected createPopupClient(correlationId?: string): PopupClient {\n        return new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    protected createRedirectClient(correlationId?: string): RedirectClient {\n        return new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    protected createSilentIframeClient(correlationId?: string): SilentIframeClient {\n        return new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.ssoSilent, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    protected createSilentCacheClient(correlationId?: string): SilentCacheClient {\n        return new SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    protected createSilentRefreshClient(correlationId?: string): SilentRefreshClient {\n        return new SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    protected createSilentAuthCodeClient(correlationId?: string): SilentAuthCodeClient {\n        return new SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.eventHandler.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.tokenCache;\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.navigationClient = navigationClient;\n    }\n\n    /**\n     * Returns the configuration object\n     */\n    getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    protected getRequestCorrelationId(request?: Partial<BaseAuthRequest>): string {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n\n        if (this.isBrowserEnvironment) {\n            return this.browserCrypto.createNewGuid();\n        }\n\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n\n    // #endregion\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountInfo, AuthenticationResult, Constants, RequestThumbprint, AuthError, PerformanceEvents } from \"@azure/msal-common\";\nimport { Configuration } from \"../config/Configuration\";\nimport { DEFAULT_REQUEST, InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { ClientApplication } from \"./ClientApplication\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { NativeAuthError } from \"../error/NativeAuthError\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication extends ClientApplication implements IPublicClientApplication {\n\n    // Active requests\n    private activeSilentTokenRequests: Map<string, Promise<AuthenticationResult>>;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration object for the MSAL PublicClientApplication instance\n     */\n    constructor(configuration: Configuration) {\n        super(configuration);\n\n        this.activeSilentTokenRequests = new Map();\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST)\n        });\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST)\n        });\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(request: SilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilent, correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw BrowserAuthError.createNoAccountError();\n        }\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\n            const response = this.acquireTokenSilentAsync({\n                ...request,\n                correlationId\n            }, account)\n                .then((result) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.endMeasurement({\n                        success: true,\n                        fromCache: result.fromCache,\n                        accessTokenSize: result.accessToken.length,\n                        idTokenSize: result.idToken.length,\n                        isNativeBroker: result.fromNativeBroker\n                    });\n                    atsMeasurement.flushMeasurement();\n                    return result;\n                })\n                .catch((error: AuthError) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.endMeasurement({\n                        success: false\n                    });\n                    atsMeasurement.flushMeasurement();\n                    throw error;\n                });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        } else {\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\n            atsMeasurement.endMeasurement({\n                success: true\n            });\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discardMeasurement();\n            return cachedResponse;\n        }\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} \n     */\n    protected async acquireTokenSilentAsync(request: SilentRequest, account: AccountInfo): Promise<AuthenticationResult>{\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n        const astsAsyncMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n\n        let result: Promise<AuthenticationResult>;\n        if (NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme) && account.nativeAccountId) {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\n            const silentRequest: SilentRequest = {\n                ...request,\n                account\n            };\n            result = this.acquireTokenNative(silentRequest, ApiId.acquireTokenSilent_silentFlow).catch(async (e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && e.isFatal()) {\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt \n\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n                    return silentIframeClient.acquireToken(request);\n                }\n                throw e;\n            });     \n        } else {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\n            const silentCacheClient = this.createSilentCacheClient(request.correlationId);\n            const silentRequest = await silentCacheClient.initializeSilentRequest(request, account);\n            result = silentCacheClient.acquireToken(silentRequest).catch(async () => {\n                return this.acquireTokenByRefreshToken(silentRequest);\n            });\n        }\n\n        return result.then((response) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, response);\n            astsAsyncMeasurement.endMeasurement({\n                success: true,\n                fromCache: response.fromCache,\n                accessTokenSize: response.accessToken.length,\n                idTokenSize: response.idToken.length,\n                isNativeBroker: response.fromNativeBroker\n            });\n            return response;\n        }).catch((tokenRenewalError: AuthError) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, tokenRenewalError);\n            astsAsyncMeasurement.endMeasurement({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false\n            });\n            throw tokenRenewalError;\n        });\n    }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, AccountInfo, Logger, PerformanceCallbackFunction } from \"@azure/msal-common\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\n\nexport interface IPublicClientApplication {\n    initialize(): Promise<void>;\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\n    acquireTokenSilent(silentRequest: SilentRequest): Promise<AuthenticationResult>;\n    acquireTokenByCode(request: AuthorizationCodeRequest): Promise<AuthenticationResult>;\n    addEventCallback(callback: Function): string | null;\n    removeEventCallback(callbackId: string): void;\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\n    removePerformanceCallback(callbackId: string): boolean;\n    enableAccountStorageEvents(): void;\n    disableAccountStorageEvents(): void;\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\n    getAccountByLocalId(localId: string): AccountInfo | null;\n    getAccountByUsername(userName: string): AccountInfo | null;\n    getAllAccounts(): AccountInfo[];\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\n    loginRedirect(request?: RedirectRequest): Promise<void>;\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\n    getTokenCache(): ITokenCache;\n    getLogger(): Logger;\n    setLogger(logger: Logger): void;\n    setActiveAccount(account: AccountInfo | null): void;\n    getActiveAccount(): AccountInfo | null;\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\n    setNavigationClient(navigationClient: INavigationClient): void;\n    getConfiguration(): BrowserConfiguration;\n}\n\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    acquireTokenSilent: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    getAllAccounts: () => {\n        return [];\t\n    },\t\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\t\n        return null;\t\n    },\t\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    loginPopup: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    loginRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    logout: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    logoutRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    logoutPopup: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    ssoSilent: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    getLogger: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, AuthError, AccountInfo } from \"@azure/msal-common\";\nimport { EventType } from \"./EventType\";\nimport { InteractionStatus, InteractionType } from \"../utils/BrowserConstants\";\nimport { PopupRequest, RedirectRequest, SilentRequest, SsoSilentRequest, EndSessionRequest } from \"..\";\n\nexport type EventMessage = {\n    eventType: EventType;\n    interactionType: InteractionType | null;\n    payload: EventPayload;\n    error: EventError;\n    timestamp: number;\n};\n\nexport type PopupEvent = {\n    popupWindow: Window;\n};\n\nexport type EventPayload = AccountInfo | PopupRequest | RedirectRequest | SilentRequest | SsoSilentRequest | EndSessionRequest | AuthenticationResult | PopupEvent | null;\n\nexport type EventError = AuthError | Error | null;\n\nexport type EventCallbackFunction = (message: EventMessage) => void;\n\nexport class EventMessageUtils {\n\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(message: EventMessage, currentStatus?: InteractionStatus): InteractionStatus|null {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (currentStatus && currentStatus !== InteractionStatus.Logout) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n                    if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n            default:\n                break;\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as React from \"react\";\nimport { IPublicClientApplication, stubbedPublicClientApplication, Logger, InteractionStatus, AccountInfo } from \"@azure/msal-browser\";\n\nexport interface IMsalContext {\n    instance: IPublicClientApplication;\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n    logger: Logger;\n}\n\n/*\n * Stubbed context implementation\n * Only used when there is no provider, which is an unsupported scenario\n */\nconst defaultMsalContext: IMsalContext = {\n    instance: stubbedPublicClientApplication,\n    inProgress: InteractionStatus.None,\n    accounts: [],\n    logger: new Logger({})\n};\n\nexport const MsalContext = React.createContext<IMsalContext>(\n    defaultMsalContext\n);\nexport const MsalConsumer = MsalContext.Consumer;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { AccountInfo } from \"@azure/msal-browser\";\n\ntype FaaCFunction = <T>(args: T) => React.ReactNode;\n\nexport function getChildrenOrFunction<T>(\n    children: React.ReactNode | FaaCFunction,\n    args: T\n): React.ReactNode {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n\n/*\n * Utility types\n * Reference: https://github.com/piotrwitek/utility-types\n */\ntype SetDifference<A, B> = A extends B ? never : A;\ntype SetComplement<A, A1 extends A> = SetDifference<A, A1>;\nexport type Subtract<T extends T1, T1 extends object> = Pick<T,SetComplement<keyof T, keyof T1>>;\n\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA \n * @param arrayB \n */\nexport function accountArraysAreEqual(arrayA: Array<AccountIdentifiers>, arrayB: Array<AccountIdentifiers>): boolean {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    const comparisonArray = [...arrayB];\n\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n\n        return (elementA.homeAccountId === elementB.homeAccountId) && \n               (elementA.localAccountId === elementB.localAccountId) &&\n               (elementA.username === elementB.username);\n    });\n}\n\nexport function getAccountByIdentifiers(allAccounts: AccountInfo[], accountIdentifiers: AccountIdentifiers): AccountInfo | null {\n    if (allAccounts.length > 0 && (accountIdentifiers.homeAccountId || accountIdentifiers.localAccountId || accountIdentifiers.username)) {\n        const matchedAccounts = allAccounts.filter(accountObj => {\n            if (accountIdentifiers.username && accountIdentifiers.username.toLowerCase() !== accountObj.username.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.homeAccountId && accountIdentifiers.homeAccountId.toLowerCase() !== accountObj.homeAccountId.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.localAccountId && accountIdentifiers.localAccountId.toLowerCase() !== accountObj.localAccountId.toLowerCase()) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return matchedAccounts[0] || null;\n    } else {\n        return null;\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-react\";\nexport const version = \"1.4.5\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { useEffect, useReducer, PropsWithChildren, useMemo} from \"react\";\nimport {\n    IPublicClientApplication,\n    EventMessage,\n    EventMessageUtils,\n    InteractionStatus,\n    Logger,\n    WrapperSKU,\n    AccountInfo\n} from \"@azure/msal-browser\";\nimport { MsalContext, IMsalContext } from \"./MsalContext\";\nimport { accountArraysAreEqual } from \"./utils/utilities\";\nimport { name as SKU, version } from \"./packageMetadata\";\n\nexport type MsalProviderProps = PropsWithChildren<{\n    instance: IPublicClientApplication;\n}>;\n\ntype MsalState = {\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n};\n\nenum MsalProviderActionType {\n    UNBLOCK_INPROGRESS = \"UNBLOCK_INPROGRESS\",\n    EVENT = \"EVENT\"\n}\n\ntype MsalProviderReducerAction = {\n    type: MsalProviderActionType,\n    payload: {\n        logger: Logger;\n        instance: IPublicClientApplication;\n        message?: EventMessage;\n    };\n};\n\n/**\n * Returns the next inProgress and accounts state based on event message\n * @param previousState \n * @param action \n */\nconst reducer = (previousState: MsalState, action: MsalProviderReducerAction): MsalState => {\n    const { type, payload } = action;\n    let newInProgress = previousState.inProgress;\n\n    switch (type) {\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\n            if (previousState.inProgress === InteractionStatus.Startup){\n                newInProgress = InteractionStatus.None;\n                payload.logger.info(\"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\");\n            }\n            break;\n        case MsalProviderActionType.EVENT:\n            const message = payload.message as EventMessage;\n            const status = EventMessageUtils.getInteractionStatusFromEvent(message, previousState.inProgress);\n            if (status) {\n                payload.logger.info(`MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`);\n                newInProgress = status;\n            }\n            break;\n        default:\n            throw new Error(`Unknown action type: ${type}`);\n    }\n    \n    const currentAccounts = payload.instance.getAllAccounts();\n    if (newInProgress !== previousState.inProgress && \n        !accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Both inProgress and accounts changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n            accounts: currentAccounts\n        };\n    } else if (newInProgress !== previousState.inProgress) {\n        // Only only inProgress changed\n        return {\n            ...previousState,\n            inProgress: newInProgress\n        };\n    } else if (!accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Only accounts changed\n        return {\n            ...previousState,\n            accounts: currentAccounts\n        };\n    } else {\n        // Nothing changed\n        return previousState;\n    }\n};\n\n/**\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\n */\nexport function MsalProvider({instance, children}: MsalProviderProps): React.ReactElement {\n    useEffect(() => {\n        instance.initializeWrapperLibrary(WrapperSKU.React, version);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger = useMemo(() => {\n        return instance.getLogger().clone(SKU, version);\n    }, [instance]);\n\n    const [state, updateState] = useReducer(reducer, undefined, () => {\n        // Lazy initialization of the initial state\n        return {\n            inProgress: InteractionStatus.Startup,\n            accounts: instance.getAllAccounts()\n        };\n    });\n    \n    useEffect(() => {\n        const callbackId = instance.addEventCallback((message: EventMessage) => {\n            updateState({\n                payload: {\n                    instance,\n                    logger,\n                    message\n                }, \n                type: MsalProviderActionType.EVENT\n            });\n        });\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\n\n        instance.initialize().then(() => {\n            instance.handleRedirectPromise().catch(() => {\n                // Errors should be handled by listening to the LOGIN_FAILURE event\n                return;\n            }).finally(() => {\n                /*\n                 * If handleRedirectPromise returns a cached promise the necessary events may not be fired\n                 * This is a fallback to prevent inProgress from getting stuck in 'startup'\n                 */\n                updateState({\n                    payload: {\n                        instance,\n                        logger\n                    },\n                    type: MsalProviderActionType.UNBLOCK_INPROGRESS \n                });\n            });\n        });\n\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n\n    const contextValue: IMsalContext = {\n        instance,\n        inProgress: state.inProgress,\n        accounts: state.accounts,\n        logger\n    };\n\n    return (\n        <MsalContext.Provider value={contextValue}>\n            {children}\n        </MsalContext.Provider>\n    );\n}\n\n","console.log(\"Client id: \", process.env.REACT_APP_CLIENT_ID)\n\nexport const msalConfig = {\n  auth: {\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    authority: `https://login.microsoftonline.com/${process.env.REACT_APP_AUTHORITY_TENANT_INFO}`, // This is a URL (e.g. https://login.microsoftonline.com/{your tenant ID})\n    redirectUri: process.env.REACT_APP_REDIRECT_URI,\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n  }\n};\n\n// Add scopes here for ID token to be used at Microsoft identity platform endpoints.\nexport const loginRequest = {\n scopes: [\"User.Read\"]\n};\n\n// Add the endpoints here for Microsoft Graph API services you'd like to use.\nexport const graphConfig = {\n    graphMeEndpoint: `https://graph.microsoft.com/v1.0/me`\n};","import { configureStore } from '@reduxjs/toolkit'\nimport { UserReducer } from './slice/user'\n\nexport const store = configureStore({\n  reducer: {\n    user: UserReducer,\n  }\n})","import type {\r\n  Reducer,\r\n  ReducersMapObject,\r\n  Middleware,\r\n  Action,\r\n  AnyAction,\r\n  StoreEnhancer,\r\n  Store,\r\n  Dispatch,\r\n  PreloadedState,\r\n  CombinedState,\r\n} from 'redux'\r\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux'\r\nimport type { DevToolsEnhancerOptions as DevToolsOptions } from './devtoolsExtension'\r\nimport { composeWithDevTools } from './devtoolsExtension'\r\n\r\nimport isPlainObject from './isPlainObject'\r\nimport type {\r\n  ThunkMiddlewareFor,\r\n  CurriedGetDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nimport { curryGetDefaultMiddleware } from './getDefaultMiddleware'\r\nimport type { NoInfer, ExtractDispatchExtensions } from './tsHelpers'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\n/**\r\n * Callback function type, to be used in `ConfigureStoreOptions.enhancers`\r\n *\r\n * @public\r\n */\r\nexport type ConfigureEnhancersCallback = (\r\n  defaultEnhancers: readonly StoreEnhancer[]\r\n) => StoreEnhancer[]\r\n\r\n/**\r\n * Options for `configureStore()`.\r\n *\r\n * @public\r\n */\r\nexport interface ConfigureStoreOptions<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> {\r\n  /**\r\n   * A single reducer function that will be used as the root reducer, or an\r\n   * object of slice reducers that will be passed to `combineReducers()`.\r\n   */\r\n  reducer: Reducer<S, A> | ReducersMapObject<S, A>\r\n\r\n  /**\r\n   * An array of Redux middleware to install. If not supplied, defaults to\r\n   * the set of middleware returned by `getDefaultMiddleware()`.\r\n   *\r\n   * @example `middleware: (gDM) => gDM().concat(logger, apiMiddleware, yourCustomMiddleware)`\r\n   * @see https://redux-toolkit.js.org/api/getDefaultMiddleware#intended-usage\r\n   */\r\n  middleware?: ((getDefaultMiddleware: CurriedGetDefaultMiddleware<S>) => M) | M\r\n\r\n  /**\r\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\r\n   *\r\n   * Additional configuration can be done by passing Redux DevTools options\r\n   */\r\n  devTools?: boolean | DevToolsOptions\r\n\r\n  /**\r\n   * The initial state, same as Redux's createStore.\r\n   * You may optionally specify it to hydrate the state\r\n   * from the server in universal apps, or to restore a previously serialized\r\n   * user session. If you use `combineReducers()` to produce the root reducer\r\n   * function (either directly or indirectly by passing an object as `reducer`),\r\n   * this must be an object with the same shape as the reducer map keys.\r\n   */\r\n  /* \r\n  Not 100% correct but the best approximation we can get:\r\n  - if S is a `CombinedState` applying a second `CombinedState` on it does not change anything.\r\n  - if it is not, there could be two cases:\r\n    - `ReducersMapObject<S, A>` is being passed in. In this case, we will call `combineReducers` on it and `CombinedState<S>` is correct\r\n    - `Reducer<S, A>` is being passed in. In this case, actually `CombinedState<S>` is wrong and `S` would be correct.\r\n    As we cannot distinguish between those two cases without adding another generic paramter, \r\n    we just make the pragmatic assumption that the latter almost never happens.\r\n  */\r\n  preloadedState?: PreloadedState<CombinedState<NoInfer<S>>>\r\n\r\n  /**\r\n   * The store enhancers to apply. See Redux's `createStore()`.\r\n   * All enhancers will be included before the DevTools Extension enhancer.\r\n   * If you need to customize the order of enhancers, supply a callback\r\n   * function that will receive the original array (ie, `[applyMiddleware]`),\r\n   * and should return a new array (such as `[applyMiddleware, offline]`).\r\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\r\n   */\r\n  enhancers?: StoreEnhancer[] | ConfigureEnhancersCallback\r\n}\r\n\r\ntype Middlewares<S> = ReadonlyArray<Middleware<{}, S>>\r\n\r\n/**\r\n * A Redux store returned by `configureStore()`. Supports dispatching\r\n * side-effectful _thunks_ in addition to plain actions.\r\n *\r\n * @public\r\n */\r\nexport interface EnhancedStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> extends Store<S, A> {\r\n  /**\r\n   * The `dispatch` method of your store, enhanced by all its middlewares.\r\n   *\r\n   * @inheritdoc\r\n   */\r\n  dispatch: ExtractDispatchExtensions<M> & Dispatch<A>\r\n}\r\n\r\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\r\nexport function configureStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = [ThunkMiddlewareFor<S>]\r\n>(options: ConfigureStoreOptions<S, A, M>): EnhancedStore<S, A, M> {\r\n  const curriedGetDefaultMiddleware = curryGetDefaultMiddleware<S>()\r\n\r\n  const {\r\n    reducer = undefined,\r\n    middleware = curriedGetDefaultMiddleware(),\r\n    devTools = true,\r\n    preloadedState = undefined,\r\n    enhancers = undefined,\r\n  } = options || {}\r\n\r\n  let rootReducer: Reducer<S, A>\r\n\r\n  if (typeof reducer === 'function') {\r\n    rootReducer = reducer\r\n  } else if (isPlainObject(reducer)) {\r\n    rootReducer = combineReducers(reducer) as unknown as Reducer<S, A>\r\n  } else {\r\n    throw new Error(\r\n      '\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'\r\n    )\r\n  }\r\n\r\n  let finalMiddleware = middleware\r\n  if (typeof finalMiddleware === 'function') {\r\n    finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware)\r\n\r\n    if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\r\n      throw new Error(\r\n        'when using a middleware builder function, an array of middleware must be returned'\r\n      )\r\n    }\r\n  }\r\n  if (\r\n    !IS_PRODUCTION &&\r\n    finalMiddleware.some((item: any) => typeof item !== 'function')\r\n  ) {\r\n    throw new Error(\r\n      'each middleware provided to configureStore must be a function'\r\n    )\r\n  }\r\n\r\n  const middlewareEnhancer = applyMiddleware(...finalMiddleware)\r\n\r\n  let finalCompose = compose\r\n\r\n  if (devTools) {\r\n    finalCompose = composeWithDevTools({\r\n      // Enable capture of stack traces for dispatched Redux actions\r\n      trace: !IS_PRODUCTION,\r\n      ...(typeof devTools === 'object' && devTools),\r\n    })\r\n  }\r\n\r\n  let storeEnhancers: StoreEnhancer[] = [middlewareEnhancer]\r\n\r\n  if (Array.isArray(enhancers)) {\r\n    storeEnhancers = [middlewareEnhancer, ...enhancers]\r\n  } else if (typeof enhancers === 'function') {\r\n    storeEnhancers = enhancers(storeEnhancers)\r\n  }\r\n\r\n  const composedEnhancer = finalCompose(...storeEnhancers) as any\r\n\r\n  return createStore(rootReducer, preloadedState, composedEnhancer)\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nconsole.log(\"Client id: \", process.env.CLIENT_ID);\n\nconst msalInstance = new PublicClientApplication(msalConfig);\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <MsalProvider instance={msalInstance}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </MsalProvider>\n  </React.StrictMode>\n);\n"],"names":["reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","e","b","Symbol","for","c","d","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","extendStatics","setPrototypeOf","__proto__","Array","hasOwnProperty","__extends","__","this","constructor","create","__assign","assign","s","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","verb","iterator","op","TypeError","pop","push","__spreadArrays","il","j","jl","ServerHashParamKeys","CryptoUtils","cryptoObj","window","crypto","getRandomValues","buffer","Uint8Array","decimalToHex","guidHolder","hex","guidResponse","Math","random","guid","test","num","toString","input","btoa","encodeURIComponent","replace","match","p1","String","fromCharCode","Number","encodedString","Error","decodeURIComponent","atob","split","map","charCodeAt","slice","join","query","pl","search","decode","obj","exec","Constants","_popUpWidth","width","_popUpHeight","height","openidScope","profileScope","TemporaryCacheKeys","PersistentCacheKeys","ErrorCacheKeys","ResponseTypes","SSOTypes","WELL_KNOWN_SUFFIX","AuthorityType","BlacklistedEQParams","SID","LOGIN_HINT","NetworkRequestType","PromptState","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","FramePrefix","AuthErrorMessage","code","desc","errorCode","errorMessage","_super","_this","AuthError","errDesc","StringUtils","str","parsedKey","JSON","parse","error","ClientAuthErrorMessage","ClientAuthError","errDetail","isEmpty","idToken","invalidState","actualState","invalidNonce","actualNonce","errorDesc","caughtError","invalidRawTokenString","caughtParsingError","incorrectlyEncodedToken","ClientConfigurationErrorMessage","ClientConfigurationError","givenCacheLocation","callbackObject","scopesValue","promptValue","claimsRequestParseError","host","config","requiredKeys","applicationName","applicationVersion","telemetryEmitter","reduce","ScopeSet","cachedScopes","scopes","convertedCachedScopes","trimAndConvertArrayToLowerCase","requestScopes","indexOf","toLowerCase","every","scope","trim","trimAndConvertToLowerCase","scopeVal","filter","scopeList","scopesRequired","isArray","createScopesNonArrayError","createEmptyScopesArrayError","createScopesRequiredError","state","splitIndex","resourceDelimiter","substring","reqScopes","reqExtraScopesToConsent","convertedExtraScopes","convertedReqScopes","scopesCount","oidcScopesFound","containsOpenIdScope","containsProfileScope","clientId","extendedScopes","onlyContainsClientId","oidcScopes","UrlUtils","serverRequestParams","createNavigationUrlString","authEndpoint","authorityInstance","AuthorizationEndpoint","appendDefaultScopes","responseType","parseScope","redirectUri","nonce","xClientSku","xClientVer","claimsValue","queryParameters","extraQueryParameters","correlationId","location","href","url","tenantId","lowerCaseUrl","urlObject","GetUrlComponents","pathArray","PathSegments","common","ORGANIZATIONS","CONSUMERS","constructAuthorityUriFromObject","CanonicalizeUri","Protocol","HostNameAndPort","authority","regEx","RegExp","urlComponents","AbsolutePath","pathSegments","val","Search","Hash","endsWith","suffix","regex","urlStringOrFragment","hashIndex1","hashIndex2","urlString","parameters","deserializeHash","ERROR_DESCRIPTION","ERROR","ACCESS_TOKEN","ID_TOKEN","urlFragment","hash","getHashFromUrl","deserialize","uri","extractedUri","uid","utid","homeAccountIdentifier","base64Encode","accessToken","expiresIn","version","createNewGuid","trimScopes","libraryVersion","ServerRequestParameters","CanonicalAuthority","account","request","adalIdTokenObject","silentCall","prompt","claimsRequest","isSSOParam","constructUnifiedCacheQueryParameter","addHintParameters","eQParams","generateQueryParametersString","idTokenObject","ssoType","ssoData","idTokenClaims","_a","login_hint","sid","userName","loginHint","upn","addSSOParameter","params","qParams","_b","ssoParam","paramsString","forEach","domain_hint","accountsMatch","onlyContainsOidcScopes","responseTypeForMatchingAccounts","containsAnyOidcScopes","XhrClient","method","enableCaching","xhr","XMLHttpRequest","open","onload","jsonResponse","status","handleError","responseText","response","statusCode","onerror","send","TrustedAuthority","validateAuthority","knownAuthorities","getTrustedHostList","TrustedHostList","authorityToVerify","telemetryManager","client","httpMethod","instanceDiscoveryEndpoint","DEFAULT_AUTHORITY","httpEvent","createAndStartHttpEvent","sendRequestAsync","httpResponseStatus","stopEvent","catch","err","serverErrorCode","getAliases","entry","IsInTrustedHostList","LogLevel","authorityMetadata","IsValidationEnabled","validateAsUri","tenantDiscoveryResponse","Authority","authorityUrl","ADFS","isAdfs","canonicalAuthority","Adfs","Default","CanonicalAuthorityUrlComponents","validateResolved","Tenant","EndSessionEndpoint","Issuer","hasCachedMetadata","canonicalAuthorityUrlComponents","components","openIdConfigurationEndpoint","setTrustedAuthoritiesFromNetwork","createUntrustedAuthorityError","openIdConfigurationEndpointResponse","GetOpenIdConfigurationEndpoint","DiscoverEndpoints","DefaultOpenIdConfigurationEndpoint","rawClientInfo","decodedClientInfo","base64Decode","clientInfo","ClientInfo","stripPolicyFromUid","createClientInfoDecodingError","_uid","_utid","subject","stringify","uidSegments","urlSegments","reverse","policy","TimeUtils","parseInt","round","Date","getTime","performance","now","TokenUtils","jwtToken","matches","header","JWSPayload","JWSSig","expiration","tokenRenewalOffsetSeconds","offset","encodedIdToken","decodedToken","decodeJwt","base64IdToken","base64Decoded","rawIdToken","createIdTokenNullOrEmptyError","claims","extractIdToken","issuer","objectId","preferredName","homeObjectId","cloudInstance","createIdTokenParsingError","cacheLocation","createNoWindowObjectError","createStorageNotSupportedError","BrowserStorage","enableCookieStorage","setItem","setItemCookie","getItemCookie","getItem","removeItem","clear","cName","cValue","expires","cookieStr","getCookieExpirationTime","document","cookie","ca","charAt","cookieLifeDays","today","toUTCString","RequestUtils","isLoginCall","interactionType","createEmptyRequestError","appendScopes","extraScopesToConsent","validateInputScope","translateClientIdIfSingleScope","validatePromptParameter","validateEQParameters","validateClaimsRequest","validateAndGenerateState","validateAndGenerateCorrelationId","createInvalidPromptError","param","createClaimsRequestParsingError","userState","generateLibraryState","stateObject","id","ts","stateString","libraryState","isGuid","interactionTypeRedirect","createInvalidStateError","createInvalidCorrelationIdError","storeAuthStateInCookie","temporaryCache","rollbackEnabled","migrateCacheEntries","AuthCache","idTokenKey","cachePrefix","IDTOKEN","clientInfoKey","CLIENT_INFO","errorKey","errorDescKey","ERROR_DESC","idTokenValue","IdToken","aud","values_1","cacheKey","index","duplicateCacheEntry","newKey","addInstanceId","adalIdToken","tokenType","validateAndParseJsonCacheKey","accountMatches","tokenTypeMatches","generateCacheKey","storage","stateId","parseLibraryState","isTokenRenewalInProgress","tokenRenewalInProgress","clearItemCookie","setInteractionInProgress","REDIRECT_REQUEST","tokens","matchedTokenKey","matchKeyForType","newAccessTokenCacheItem","AccessTokenCacheItem","getAllTokensByType","getAllAccessTokens","getAllIdTokens","matchClientId","getInteractionInProgress","getTemporaryItem","INTERACTION_STATUS","newInProgressValue","isInteractionInProgress","createAcquireTokenInProgressError","setTemporaryItem","stateValue","renewStatus","generateTemporaryCacheKey","RENEW_STATUS","inProgress","NONCE_IDTOKEN","STATE_LOGIN","LOGIN_REQUEST","STATE_ACQ_TOKEN","cookieString","cookieName","accountId","ACQUIRE_TOKEN_ACCOUNT","AUTHORITY","tempCacheKey","accountIdentifier","environment","Account","a1","a2","WindowUtils","parent","opener","prefix","requestSignature","contentWindow","timeout","urlNavigate","logger","timeoutMark","relativeNowMs","verbose","intervalId","setInterval","errorPii","clearInterval","createTokenRenewalTimeoutError","urlContainsHash","POLLING_INTERVAL_MS","maxTicks","ticks","closed","createUserCancelledError","clearUrlFragment","frameName","timeoutMs","infoPii","setTimeout","frameHandle","loadFrameSync","addHiddenIFrame","src","iframeId","info","adalFrame","getElementById","ifr","createElement","setAttribute","style","visibility","position","border","getElementsByTagName","appendChild","iframe","parentNode","removeChild","iframes","item","openedWindows","getPopups","popup","close","isInIframe","createBlockTokenRequestsInHiddenIframeError","cacheStorage","redirectCache","splitCache","shift","resetTempCacheItems","history","replaceState","pathname","ResponseUtils","originalResponse","idTokenObj","exp","expiresOn","uniqueId","authResponse","serverAuthenticationRequest","accountState","idTokenResponse","setResponseIdToken","idTokeTokenResponse","AuthorityFactory","resolveEndpointsAsync","metadata","metadataMap","set","get","authorityMetadataJson","parsedMetadata","authorization_endpoint","end_session_endpoint","createInvalidAuthorityMetadataError","saveMetadataFromConfig","Map","localCallback","options","level","Info","_c","piiLoggingEnabled","Logger","logLevel","logMessage","containsPii","log","timestamp","executeCallback","message","Warning","Verbose","DEFAULT_AUTH_OPTIONS","postLogoutRedirectUri","navigateToLoginRequestUrl","DEFAULT_CACHE_OPTIONS","DEFAULT_SYSTEM_OPTIONS","loadFrameTimeout","navigateFrameWait","DEFAULT_FRAMEWORK_OPTIONS","isAngular","unprotectedResources","protectedResourceMap","ServerErrorMessage","ServerError","InteractionRequiredAuthErrorMessage","InteractionRequiredAuthError","errorString","interactionRequiredCodes","buildResponseStateOnly","fromCache","API_CODE","API_EVENT_IDENTIFIER","EVENT_NAME_KEY","ELAPSED_TIME_KEY","TELEMETRY_BLOB_EVENT_NAMES","scrubTenantFromUri","pathParams","tenantPosition","hashPersonalIdentifier","valueToHash","prependEventNamePrefix","supportsBrowserPerformance","mark","measure","eventName","eventLabel","eventId","event","TelemetryEvent","time","measureName","startMark","endMark","setElapsedTime","startTimestamp","perfStartMark","perfEndMark","clearMeasures","clearMarks","telemetryCorrelationId","platform","eventCount","sdk","sdkVersion","networkInformation","connectionSpeed","getEventCount","DefaultEvent","EVENT_KEYS","mapEventIdentiferToCode","AcquireTokenSilent","AcquireTokenPopup","AcquireTokenRedirect","LoginPopup","LoginRedirect","Logout","piiEnabled","apiEventIdentifier","apiCode","ApiEvent","wasSuccessful","authorityType","promptType","HttpEvent","scrubbedUri","httpPath","userAgent","queryParams","apiVersion","requestIdHeader","speInfo","subErrorCode","completedEvents","inProgressEvents","eventCountByCorrelationId","onlySendFailureTelemetry","telemetryPlatform","libraryName","navigator","connection","effectiveType","TelemetryManager","start","stop","incrementEventCount","orphanedEvents","getOrphanedEvents","eventsToFlush","eventCountsToFlush","eventsWithDefaultEvent","apiEvent","isPiiLoggingEnabled","startEvent","apiErrorCode","flush","correlation","memo","eventKey","event_1","AuthCacheUtils","tokenCacheItems","cacheItem","searchScopes","removeDefaultScopes","containsScope","requestDomain","configuration","authResponseCallback","tokenReceivedCallback","errorReceivedCallback","auth","cache","system","_d","framework","buildConfiguration","inCookie","getTelemetryManagerFromConfig","telemetry","setTrustedAuthoritiesFromConfig","activeRenewals","renewStates","callbackMappedToRenewStates","promiseMappedToRenewStates","msal","urlHash","checkIfBackButtonIsPressed","getResponseState","handleRedirectAuthenticationResponse","UserAgentApplication","CreateInstance","authOrTokenCallback","createInvalidCallbackObjectError","warning","redirectError","authErrorHandler","redirectResponse","authResponseHandler","interactionTypePopup","createInvalidInteractionTypeError","authErr","userRequest","validateRequest","acquireTokenInteractive","createAndStartApiEvent","resp","stopAndFlushApiEvent","blockReloadInHiddenIframes","thrownError","createLoginInProgressError","stateOnlyResponse","getAccountState","getAccount","acquireTokenHelper","createUserLoginRequiredError","extractADALIdToken","tokenRequest","buildIDTokenRequest","silentLogin","acquireTokenSilent","verbosePii","acquireTokenAuthority","saveMetadataFromNetwork","getTokenType","loginStartPage","redirectStartPage","getRedirectUri","updateCacheEntries","populateQueryParams","createNavigateUrl","response_mode_fragment","requestType","login","renewToken","registerCallback","popUpWindow","openPopup","popUpWidth","popUpHeight","trackPopup","createPopupWindowError","monitorPopupForHash","handleAuthenticationResponse","broadcast","closePopups","error_1","onRedirectNavigate","navigateWindow","err_1","createEndpointResolutionError","createSsoSilentError","interactionTypeSilent","createRequestSignature","userContainedClaims","forceRefresh","cacheResultResponse","getCachedToken","renewIdToken","err_2","res","title","winLeft","screenLeft","screenX","winTop","screenTop","screenY","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","left","top_1","popupWindow","focus","expectedState","loadFrame","monitorIframeForHash","error_2","removeHiddenIframe","createUnexpectedError","logoutAsync","requestCorrelationId","clearCache","correlationIdParam","postLogoutQueryParam","getPostLogoutRedirectUri","error_3","getAllTokens","resetCacheItems","clearMsalCookie","accessTokenItems","token","respStateInfo","parentCallback","stateInfo","saveTokenFromHash","createErrorInCallbackFunction","locationHash","tokenResponseCallback","processCallBack","loginRequestUrl","currentUrl","removeHashFromUrl","finalRedirectUrl","loginRequestUrlComponents","stateResponse","STATE","parsedState","unknown","stateMatch","silentAuthenticationState","statesInParentContext","getCachedIdToken","getCachedAccessToken","buildAuthResponse","filteredAuthorityItems","isCommonAuthority","isOrganizationsAuthority","isConsumersAuthority","filterTokenCacheItemsByDomain","filterTokenCacheItemsByAuthority","accessTokenCacheItem","idTokenCacheItems","matchAuthority","idTokenCacheItem","getTokenCacheItemByAuthority","evaluateTokenExpiration","scopeFilteredTokenCacheItems","filterTokenCacheItemsByScope","responseAccount","aState","tokenCacheItem","validateExpirationIsWithinOffset","generateFrameName","urlRemoveQueryStringParameter","prompt_none","loadIframeTimeout","accessTokenKey","AccessTokenKey","accessTokenValue","AccessTokenValue","encodeClientInfo","saveToken","accessTokenResponse","SCOPE","consentedScopes","accessTokenCacheItems","isIntersectingScopes","parseExpiresIn","EXPIRES_IN","hashParams","authorityKey","acquireTokenAccountKey","LOGIN_ERROR","generateAuthorityKey","no_account","generateAcquireTokenAccountKey","hashErr","hashErrDesc","isInteractionRequiredError","SESSION_STATE","populateAuthority","createClientInfoFromIdToken","createAccount","accountKey","acquireTokenAccountKey_noaccount","cachedAccount","acquireTokenAccount","saveAccessToken","compareAccounts","cachedNonce","createNonceMismatchError","saveIdToken","createInvalidIdTokenError","cachedAuthority","replaceTenantPath","accounts","getUniqueAccounts","flags","uniqueAccounts","data","evt","CustomEvent","detail","dispatchEvent","accountObject","newAuthority","endpoint","size","from","_i","getHostFromUri","loginInProgress","acquireTokenInProgress","reqRedirectUri","createNoSetConfigurationError","determineResponseType","getAccountId","setAccountCache","setAuthorityCache","createTelemetryConfigError","aa","da","Set","ea","fa","ha","add","ia","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","toUpperCase","ta","pa","isNaN","qa","oa","removeAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","stack","Na","Oa","prepareStackTrace","Reflect","construct","includes","Pa","tag","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","setProperty","tb","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","vd","Ad","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","repeat","locale","which","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","tel","text","week","me","ne","oe","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","Ne","contentEditable","Oe","focusedElem","selectionRange","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","scrollLeft","top","scrollTop","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","sf","bind","capture","passive","J","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Jf","queueMicrotask","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","props","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","console","Ni","WeakMap","Oi","Pi","Qi","Ri","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","dl","el","fl","gl","hl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","graphScopes","tenantUrl","buttonTheme","className","withUserData","authCallback","forceRedirectStrategy","debug","useLocalStorageCache","msalInstance","helpers_1","react_1","handleRedirectCallback","getGraphAPITokenAndUser","localStorage","sessionStorage","redirectLogin","popupLogin","finalStep","authResponseWithAccessToken","getUserData","isRedirect","silentRes","acquireTokenRedirect","acquireTokenPopup","popupRes","loginPopup","loginRedirect","fetch","headers","Authorization","json","userData","MicrosoftLoginButton_1","buttonClassName","isDark","styleObj","cursor","xmlns","fill","CLIENT_ID_REGEX","msal_1","find","isDebugMode","content","isError","groupCollapsed","groupEnd","msie","msie11","msedge","MicrosoftLogin_1","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","count","toArray","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","startTransition","unstable_act","sortIndex","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","inst","useSyncExternalStoreWithSelector","hasValue","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","o","prop","toStringTag","batch","getBatch","ReactReduxContext","React","useReduxContext","notInitialized","refEquality","createSelectorHook","useDefaultReduxContext","selector","equalityFn","store","subscription","getServerState","selectedState","addNestedSub","getState","useSelector","nullListeners","notify","createSubscription","parentSub","unsubscribe","handleChangeWrapper","onStateChange","trySubscribe","subscribe","first","isSubscribed","prev","createListenerCollection","notifyNestedSubs","Boolean","tryUnsubscribe","getListeners","useIsomorphicLayoutEffect","serverState","contextValue","previousState","Context","createStoreHook","useStore","createDispatchHook","useDefaultStore","newBatch","useDispatch","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","_s","_e","_arr","_n","fn","initializeUseSelector","initializeConnect","NavigationContext","LocationContext","RouteContext","outlet","invariant","cond","matchRoutes","routes","locationArg","basename","stripBasename","parsePath","branches","flattenRoutes","sort","score","siblings","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matchRouteBranch","parentsMeta","parentPath","route","relativePath","path","caseSensitive","startsWith","joinPaths","computeScore","paramRe","isSplat","segments","initialScore","some","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","pathnameBase","normalizePathname","pattern","paramNames","regexpSource","paramName","compilePath","matcher","captureGroups","splatValue","safelyDecodeURIComponent","resolveTo","toArg","routePathnames","locationPathname","to","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","nextChar","paths","useInRouterContext","useLocation","useNavigate","routePathnamesJson","activeRef","go","_renderMatches","parentMatches","reduceRight","React.createElement","Navigate","_ref2","navigate","Route","_props","Router","_ref3","basenameProp","locationProp","navigationType","NavigationType","static","staticProp","navigationContext","trailingPathname","Routes","_ref4","routeMatch","parentParams","parentPathnameBase","locationFromContext","parsedLocationArg","_parsedLocationArg$pa","useRoutes","createRoutesFromChildren","BrowserRouter","historyRef","createBrowserHistory","listen","die","args","msg","isDraft","DRAFT_STATE","isDraftable","proto","Ctor","Function","objectCtorString","isPlainObject","DRAFTABLE","isMap","isSet","each","iter","enumerableOnly","getArchtype","ownKeys","thing","type_","propOrOldValue","hasMap","hasSet","latest","copy_","base_","shallowCopy","descriptors","getOwnPropertyDescriptors","writable","freeze","deep","isFrozen","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","getCurrentScope","currentScope","usePatchesInScope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","assigned_","autoFreeze_","peek","getDescriptorFromProto","markChanged","prepareCopy","createProxy","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createProxyProxy","createES5Proxy_","currentImpl","copy","archType","hasChanges_","copyHelper","enableES5","proxyProperty","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","createES5Draft","markChangesRecursively","object","hasSymbol","hasProxies","_desc$get","readPropFromProto","currentState","deleteProperty","owner","Immer","recipe","defaultBase","self","produce","_this2","hasError","ip","arg1","arg2","produceWithPatches","patches","inversePatches","nextState","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","patch","applyPatchesImpl","applyPatches_","_defineProperty","symbols","sym","_objectSpread2","defineProperties","formatProdErrorMessage","$$observable","observable","randomString","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","createStore","reducer","preloadedState","enhancer","currentReducer","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","combineReducers","reducers","reducerKeys","finalReducers","process","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","_key","previousStateForKey","nextStateForKey","compose","_len","funcs","arg","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","middleware","_objectSpread","createThunkMiddleware","extraArgument","thunk","withExtraArgument","composeWithDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","__REDUX_DEVTOOLS_EXTENSION__","baseProto","MiddlewareArray","species","freezeDraftable","createNextState","curryGetDefaultMiddleware","middlewareArray","isBoolean","thunkMiddleware","getDefaultMiddleware","createAction","prepareAction","actionCreator","prepared","__spreadValues","executeReducerBuilderCallback","builderCallback","defaultCaseReducer","actionsMap","actionMatchers","builder","addCase","typeOrActionCreator","addMatcher","addDefaultCase","alm","userSlice","_reducer","initialState","reducerNames","sliceCaseReducersByName","sliceCaseReducersByType","actionCreators","buildReducer","extraReducers","_f","finalCaseReducers","mapOrBuilderCallback","getInitialState","finalActionMatchers","finalDefaultCaseReducer","isStateFunction","frozenInitialState_1","caseReducers","reducer2","cr","caseReducer","isDraft2","isDraftable2","createNextState2","createReducer","reducerName","prepareCallback","maybeReducerWithPrepare","prepare","actions","createSlice","user","username","tokenClaim","preferred_username","logout","UserReducer","alt","onMsalInstanceChange","response_type","PerformanceEvents","PerformanceEventStatus","HeaderNames","AADAuthorityConstants","AADServerParamKeys","ClaimsRequestKeys","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY_HOST","DEFAULT_COMMON_TENANT","AAD_INSTANCE_DISCOVERY_ENDPT","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_RESPONSE_TYPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","TOKEN_RESPONSE_TYPE","ID_TOKEN_RESPONSE_TYPE","SHR_NONCE_VALIDITY","OIDC_SCOPES","OIDC_DEFAULT_SCOPES","PromptValue","CREATE","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","CacheSchemaType","CacheType","CodeChallengeMethodValues","PLAIN","S256","AuthorityMetadataSource","APP_METADATA","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","AuthenticationScheme","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","PasswordGrantConstants","ResponseCodes","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome","JsonTypes","ThrottlingConstants","Errors","NativeExtensionMethod","BrowserCacheLocation","HTTP_REQUEST_TYPE","InMemoryCacheKeys","ApiId","InteractionType","InteractionStatus","BrowserConstants","NativeConstants","WrapperSKU","DEFAULT_REQUEST","KEY_FORMAT_JWK","CryptoKeyStoreNames","DB_NAME","suberror","subError","setCorrelationId","JoseHeaderErrorMessage","JoseHeaderError","typ","alg","kid","JoseHeader","shrHeaderOptions","createMissingKidError","createMissingAlgError","shrHeader","Jwt","MathUtils","GuidGenerator","BrowserStringUtils","sDOMStr","nChr","nArrLen","nStrLen","nMapIdx","aBytes","nIdx","nChrIdx","dataString","ArrayBuffer","dataView","sView","nPart","nLen","Base64Encode","encode","inputArr","base64EncArr","inputUtf8Arr","stringToUtf8Arr","eqLen","sB64Enc","nMod3","nUint24","uint6ToB64","nUint6","Base64Decode","base64DecToArr","utf8ArrToString","base64String","nBlockSize","nInLen","nOutLen","nMod4","nOutIdx","nInIdx","b64ToUint6","charNum","caughtExtractionError","hashParamObj","missingState","missingNonce","givenScope","appendError","operationName","authToken","createTokenNullOrEmptyError","createTokenParsingError","strObj","lastIndexOf","pair","BrowserAuthErrorMessage","BrowserAuthError","hashValue","windowParentCheck","givenPrompt","errorDetail","keyId","PkceGenerator","codeVerifier","generateCodeVerifier","generateCodeChallengeFromVerifier","codeChallenge","verifier","challenge","urlEncodeArr","createPkceNotGeneratedError","pkceCodeVerifier","sha256Digest","pkceHashedCodeVerifier","e_1","S256_HASH_ALG","PUBLIC_EXPONENT","hasCryptoAPI","createCryptoNotAvailableError","_keygenAlgorithmOptions","modulusLength","publicExponent","BrowserCrypto","hasIECrypto","getMSCryptoDigest","getSubtleCryptoDigest","dataBuffer","extractable","usages","msCryptoGenerateKey","subtle","generateKey","msCryptoExportJwk","exportKey","keyString","getJwkString","keyBuffer","stringToArrayBuffer","msCryptoImportKey","importKey","msCryptoSign","sign","hasBrowserCrypto","algorithm","digestOperation","msGenerateKey","msExportKey","resultBuffer","resultString","msImportKey","msSign","jwk","dbName","tableName","dbOpen","DatabaseStorage","openDB","indexedDB","createObjectStore","createDatabaseUnavailableError","validateDbIsOpen","createDatabaseNotOpenError","dbGet","transaction","objectStore","closeConnection","dbPut","put","dbDelete","dbGetKeys","getAllKeys","dbContainsKey","databases","existingDatabases","database","deleteDbRequest","deleteDatabase","MemoryStorage","cacheKeys","storeName","inMemoryCache","indexedDBCache","AsyncMemoryStorage","handleDatabaseAccessError","e_2","e_3","getKeys","e_4","containsKey","e_5","dbDeleted","e_6","performanceClient","browserCrypto","b64Encode","b64Decode","guidGenerator","pkceGenerator","asymmetricKeys","symmetricKeys","CryptoOps","generateGuid","generateCodes","publicKeyThumbMeasurement","startMeasurement","CryptoOptsGetPublicKeyThumbprint","generateKeyPair","EXTRACTABLE","POP_KEY_USAGES","keyPair","exportJwk","publicKey","publicKeyJwk","pubKeyThumprintObj","kty","publicJwkString","hashString","publicJwkHash","privateKey","privateKeyJwk","importJwk","unextractablePrivateKey","requestMethod","resourceRequestMethod","requestUri","resourceRequestUri","endMeasurement","success","signJwtMeasurement","CryptoOptsSignJwt","cachedKeyPair","createSigningKeyNotFoundInStorageError","publicKeyJwkString","encodedKeyIdThumbprint","urlEncode","getShrHeaderString","encodedShrHeader","cnf","encodedPayload","tokenString","tokenBuffer","signatureBuffer","encodedSignature","signedJwt","plainText","hashBuffer","hashBytes","loggerOptions","packageName","packageVersion","loggerCallback","Trace","PerformanceClient","applicationTelemetry","callbacks","eventsByCorrelationId","measurementsById","eventCorrelationId","generateId","trace","performanceMeasurement","startPerformanceMeasuremeant","inProgressEvent","InProgress","appName","appVersion","startTimeMs","cacheEventByCorrelationId","cacheMeasurement","completedEvent","flushMeasurement","flushMeasurements","discardMeasurement","discardMeasurements","measurement","durationMs","Completed","existingEvents","eventsForCorrelationId","completedEvents_1","sortedCompletedEvents","eventA","eventB","topLevelEvents","topLevelEvent","eventToEmit","previous","subMeasurementName","accessTokenSize","idTokenSize","emitEvents","addPerformanceCallback","callbackId","removePerformanceCallback","events","StubPerformanceMeasurement","StubPerformanceClient","DEFAULT_CRYPTO_IMPLEMENTATION","generatePkceCodes","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","buildClientInfo","createClientInfoEmptyError","buildClientInfoFromHomeAccountId","homeAccountId","clientInfoParts","CLIENT_INFO_SEPARATOR","CcsCredentialType","AccountEntity","CACHE_KEY_SEPARATOR","generateAccountCacheKey","realm","localAccountId","ADFS_ACCOUNT_TYPE","MSAV1_ACCOUNT_TYPE","MSA","MSSTS_ACCOUNT_TYPE","MSSTS","GENERIC_ACCOUNT_TYPE","GENERIC","createUnexpectedAccountTypeError","nativeAccountId","accountInterface","cloudGraphHostName","msGraphHost","env","getPreferredCache","createInvalidCacheEnvironmentError","oid","sub","emails","serverClientInfo","authType","entity","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","CredentialEntity","generateAccountIdForCacheKey","generateCredentialIdForCacheKey","credentialType","familyId","generateTargetForCacheKey","generateCredentialCacheKey","requestedClaimsHash","ACCESS_TOKEN_WITH_AUTH_SCHEME","REFRESH_TOKEN","createUnexpectedCredentialTypeError","generateClaimsHashForCacheKey","generateSchemeForCacheKey","BEARER","urlParseError","inputScopes","invalidHeaderName","details","scopeArr","trimArrayEntries","filteredInput","removeEmptyStringsFromArray","validateInputScopes","inputScopeString","lowerCaseScopesSet","printScopesLowerCase","containsScopeSet","scopeSet","asArray","defaultScopeCount","defaultScope","appendScope","newScope","newScopes","createAppendScopeSetError","removeScope","createRemoveEmptyScopeFromSetError","unionScopeSets","otherScopes","createEmptyInputScopeSetError","unionScopes","intersectingScopeSets","containsOnlyOIDCScopes","removeOIDCScopes","sizeOtherScopes","getScopeCount","sizeThisScopes","array","printScopes","AuthToken","rawToken","extractTokenClaims","encodedToken","decodeAuthToken","base64TokenPayload","CacheManager","cryptoImpl","currentAccounts","getAccountsFilteredBy","accountValues","accountInfo","toObject","getAccountInfo","readIdTokenFromCache","secret","saveCacheRecord","cacheRecord","createNullOrUndefinedCacheRecord","setAccount","setIdTokenCredential","refreshToken","setRefreshTokenCredential","appMetadata","setAppMetadata","credential","currentTokenCache","getCredentialsFilteredBy","currentScopes","fromString","currentAccessTokens","accessTokens","removedAccessTokens_1","tokenEntity","removeCredential","all","setAccessTokenCredential","accountFilter","getAccountsFilteredByInternal","allCacheKeys","matchingAccounts","matchHomeAccountId","matchEnvironment","matchRealm","matchNativeAccountId","getCredentialsFilteredByInternal","userAssertionHash","matchingCredentials","idTokens","refreshTokens","credType","getCredentialType","getSpecificCredential","matchUserAssertionHash","matchCredentialType","matchFamilyId","matchTarget","matchTokenType","SSH","matchKeyId","updatedCacheKey","updateCredentialCacheKey","getAppMetadataFilteredBy","getAppMetadataFilteredByInternal","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","aliases","removedAccounts","removeAccount","createNoAccountFoundError","removeAccountContext","ACCOUNT","generateAccountId","removedCredentials","cacheEntity","generateCredentialKey","POP","createBindingKeyNotRemovedError","CREDENTIAL","readCacheRecord","readAccountFromCache","cachedIdToken","cachedAccessToken","readAccessTokenFromCache","cachedRefreshToken","readRefreshTokenFromCache","cachedAppMetadata","readAppMetadataFromCache","readAccountFromCacheWithNativeAccountId","accountCache","createMultipleMatchingAccountsInCacheError","idTokenFilter","credentialCache","numIdTokens","createMultipleMatchingTokensInCacheError","authScheme","authenticationScheme","accessTokenFilter","sshKid","numAccessTokens","familyRT","refreshTokenFilter","appMetadataFilter","appMetadataEntries","numAppMetadata","createMultipleMatchingAppMetadataInCacheError","cloudMetadata","entityScopeSet","requestTargetScopeSet","generateAuthorityMetadataCacheKey","getIdTokenCredential","getAccessTokenCredential","getRefreshTokenCredential","DefaultStorageClass","IdTokenEntity","idTokenEntity","expirationSec","nowSeconds","cachedAt","AccessTokenEntity","extExpiresOn","cryptoUtils","refreshOn","requestedClaims","atEntity","currentTime","extendedExpiresOn","tokenClaims","createTokenClaimsRequiredError","RefreshTokenEntity","rtEntity","AppMetadataEntity","generateAppMetadataCacheKey","failedRequests","errors","cacheHits","ServerTelemetryEntity","validateKey","validateEntity","expiresAt","AuthorityMetadataEntity","fromNetwork","preferred_cache","preferred_network","aliasesFromNetwork","token_endpoint","endpointsFromNetwork","jwks_uri","updateCanonicalAuthority","canonical_authority","ThrottlingEntity","ProtocolUtils","createNoCryptoObjectError","stateObj","splitState","libraryStateString","libraryStateObj","userRequestState","ProtocolMode","AzureCloudInstance","BrowserConfigurationAuthErrorMessage","BrowserConfigurationAuthError","givenStorageLocation","validateWindowStorage","windowStorage","LocalStorage","SessionStorage","_urlString","createUrlEmptyError","getHash","UrlString","canonicalizeUri","getUrlComponents","createUrlParseError","createInsecureAuthorityUriError","queryString","COMMON","parseHash","QueryString","relativeUrl","baseUrl","baseComponents","parsedHash","deserializedHash","queryStringToObject","createHashNotDeserializedError","getDeserializedHash","error_description","BrowserProtocolUtils","parseRequestState","hashUrlString","cacheConfig","internalStorage","browserStorage","setupBrowserStorage","temporaryCacheStorage","setupTemporaryCacheStorage","BrowserCacheManager","values","migrateCacheEntry","setTemporaryCache","jsonValue","parsedJson","parsedAccount","validateAndParseJson","generateAccountKey","parsedIdToken","isIdTokenEntity","parsedAccessToken","isAccessTokenEntity","refreshTokenKey","parsedRefreshToken","isRefreshTokenEntity","appMetadataKey","isAppMetadataEntity","generateAppMetadataKey","serverTelemetryKey","isServerTelemetryEntity","serverTelemetry","isAuthorityMetadataEntity","wrapperSKU","wrapperVersion","WRAPPER_SKU","WRAPPER_VER","activeAccountKeyFilters","ACTIVE_ACCOUNT_FILTERS","activeAccountValueFilters","activeAccountKeyLocal","ACTIVE_ACCOUNT","activeAccountValueLocal","activeAccount","getAccountInfoByFilter","setActiveAccount","activeAccountValueObj","activeAccountKey","activeAccountValue","getAllAccounts","accountObj","accountSid","throttlingCacheKey","parsedThrottlingCache","isThrottlingEntity","throttlingCache","itemCookie","removeAllAccounts","removeAppMetadata","cookieValue","secureCookies","cookieList","cookiePrefix","cookieKey","COOKIE_LIFE_MULTIPLIER","ADAL_ID_TOKEN","REQUEST_STATE","cachedState","stateCacheKey","generateStateKey","getTemporaryCache","authorityCacheKey","nonceCacheKey","generateNonceKey","ccsCredential","HOME_ACCOUNT_ID","CCS_CREDENTIAL","UPN","REQUEST_PARAMS","ORIGIN_URI","URL_HASH","CORRELATION_ID","NATIVE_REQUEST","stateKey","resetRequestCache","clearMsalCookies","extractBrowserRequestState","authCodeRequest","encodedValue","encodedTokenRequest","createNoTokenRequestCacheError","parsedRequest","createUnableToParseTokenRequestCacheError","createNoCachedAuthorityError","cachedRequest","INTERACTION_STATUS_KEY","createInteractionInProgressError","adalIdTokenString","msalIdTokenString","cachedIdTokenString","currentCacheKey","preventCorsPreflight","proxyUrl","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","None","tenant","DEFAULT_TELEMETRY_OPTIONS","application","StubbedNetworkModule","FetchClient","GET","getFetchHeaders","onLine","createGetRequestFailedError","createNoNetworkConnectivityError","getHeaderDict","createFailedToParseNetworkResponseError","reqBody","POST","createPostRequestFailedError","Headers","optionsHeaders","append","headerDict","setXhrHeaders","networkResponse","createHttpMethodNotImplementedError","headers_1","setRequestHeader","headerArr","getAllResponseHeaders","parts","headerName","headerVal","BrowserUtils","origin","urlParts","hashContainsKnownProperties","createBlockReloadInHiddenIframeError","allowRedirectInIframe","isIframedApp","createRedirectInIframeError","isInPopup","createBlockAcquireTokenInPopupsError","isBrowserEnvironment","createNonBrowserEnvironmentError","allowNativeBroker","initialized","createNativeBrokerCalledBeforeInitialize","NavigationClient","defaultNavigateWindow","noHistory","DEFAULT_IFRAME_TIMEOUT_MS","EventType","KeyLocation","eventCallbacks","listeningToStorageEvents","handleAccountCacheChange","EventHandler","eventType","message_1","cacheValue","newValue","oldValue","parsedValue","emitEvent","ThrottlingUtils","thumbprint","cacheManager","generateThrottlingStorageKey","getThrottlingCache","throttleTime","THROTTLING","errorCodes","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","RETRY_AFTER","error_codes","setThrottlingCache","currentSeconds","shrClaims","NetworkManager","networkClient","tokenEndpoint","preProcess","createNetworkError","postProcess","BaseClient","authOptions","userAuthOptions","userSystemOptions","userLoggerOption","storageImplementation","networkImplementation","cryptoImplementation","clientCredentials","libraryInfo","serverTelemetryManager","persistencePlugin","serializableCache","clientCapabilities","azureCloudOptions","skipAuthorityMetadataCache","systemOptions","storageInterface","networkInterface","cryptoInterface","buildClientConfiguration","networkManager","createTokenRequestHeaders","ccsCred","CONTENT_TYPE","CCS_HEADER","executePostToTokenEndpoint","sendPostRequest","clearTelemetryCache","updateAuthority","updatedAuthority","discoveryComplete","createEndpointDiscoveryIncompleteError","RequestValidator","createRedirectUriEmptyError","promptValues","createInvalidClaimsRequestError","codeChallengeMethod","createInvalidCodeChallengeParamsError","validateCodeChallengeMethod","createInvalidCodeChallengeMethodError","RequestParameterBuilder","RESPONSE_TYPE","addResponseMode","responseMode","RESPONSE_MODE","QUERY","NATIVE_BROKER","addOidcScopes","addClientId","CLIENT_ID","addRedirectUri","validateRedirectUri","REDIRECT_URI","addPostLogoutRedirectUri","POST_LOGOUT_URI","addIdTokenHint","idTokenHint","ID_TOKEN_HINT","addDomainHint","domainHint","DOMAIN_HINT","addLoginHint","addCcsUpn","addCcsOid","addSid","mergedClaims","addClientCapabilitiesToClaims","validateClaims","addCorrelationId","CLIENT_REQUEST_ID","addLibraryInfo","X_CLIENT_SKU","X_CLIENT_VER","X_CLIENT_OS","X_CLIENT_CPU","addApplicationTelemetry","appTelemetry","X_APP_NAME","X_APP_VER","addPrompt","validatePrompt","PROMPT","addState","addNonce","NONCE","validateCodeChallengeParams","CODE_CHALLENGE","CODE_CHALLENGE_METHOD","addAuthorizationCode","CODE","addDeviceCode","DEVICE_CODE","addRefreshToken","addCodeVerifier","CODE_VERIFIER","addClientSecret","CLIENT_SECRET","addClientAssertion","CLIENT_ASSERTION","addClientAssertionType","clientAssertionType","CLIENT_ASSERTION_TYPE","addOboAssertion","oboAssertion","OBO_ASSERTION","addRequestTokenUse","tokenUse","REQUESTED_TOKEN_USE","addGrantType","grantType","GRANT_TYPE","addExtraQueryParameters","eQparams","sanitizeEQParams","XMS_CC","addUsername","addPassword","addPopToken","cnfString","TOKEN_TYPE","REQ_CNF","addSshJwk","sshJwkString","addServerTelemetry","X_CLIENT_CURR_TELEM","generateCurrentRequestHeaderValue","X_CLIENT_LAST_TELEM","generateLastRequestHeaderValue","X_MS_LIB_CAPABILITY","addLogoutHint","logoutHint","LOGOUT_HINT","queryParameterArray","accountEntity","accessTokenEntity","refreshTokenEntity","appMetadataEntity","PopTokenGenerator","generateCnf","generateKid","reqCnf","reqCnfString","reqCnfHash","xms_ksl","SW","signPayload","shrNonce","resourceUrlString","resourceUrlComponents","at","client_claims","TokenCacheContext","tokenCache","ResponseHandler","serverResponseHash","createStateNotFoundError","createStateMismatchError","client_info","validateTokenResponse","serverResponse","errString","correlation_id","trace_id","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","forceCacheRefreshTokenResponse","id_token","requestStateObj","key_id","generateCacheRecord","cacheContext","beforeCacheAccess","generateAuthenticationResult","afterCacheAccess","spa_code","createIdTokenEntity","tid","generateAccountEntity","access_token","responseScopes","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","createAccessTokenEntity","token_type","refresh_token","createRefreshTokenEntity","foci","createAppMetadataEntity","CacheRecord","cloud_graph_host_name","msGraphhost","msgraph_host","protocolMode","fromTokenCache","requestState","popTokenGenerator","createKeyIdMissingError","signPopToken","fromNativeBroker","AuthorizationCodeClient","getAuthCodeUrl","createAuthCodeUrlQueryString","appendQueryString","authorizationEndpoint","createTokenRequestCannotBeMadeError","executeTokenRequest","responseHandler","handleServerTokenResponse","hashFragment","serverParams","validateServerAuthorizationCodeResponse","createNoAuthCodeInServerResponseError","getLogoutUri","logoutRequest","createEmptyLogoutRequestError","createLogoutUrlQueryString","endSessionEndpoint","createTokenRequestBody","requestBody","createTokenQueryParameters","parameterBuilder","tokenQueryParameters","createQueryString","includeRedirectUri","addScopes","addThrottling","assertion","assertionType","AUTHORIZATION_CODE_GRANT","addClientInfo","reqCnfData","sshJwk","createMissingSshJwkError","isEmptyObj","addClaims","tokenBodyParameters","enableSpaAuthorizationCode","RETURN_SPA_CODE","addResponseTypeCode","addCodeChallengeParams","extractAccountSid","accountLoginHintClaim","extractLoginHint","nativeBroker","addNativeBroker","isOpenIdConfigResponse","EndpointMetadata","InstanceDiscoveryMetadata","NativeStatusCode","RegionDiscovery","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","IMDS_OPTIONS","getRegionFromIMDS","localIMDSVersionResponse","httpSuccess","region_source","IMDS","httpBadRequest","getCurrentVersion","currentIMDSVersion","FAILED_AUTO_DETECTION","currentIMDSVersionResponse","ENVIRONMENT_VARIABLE","Metadata","authorityOptions","_canonicalAuthority","regionDiscovery","region_used","region_outcome","_canonicalAuthorityUrlComponents","replacePath","replaceTenant","createLogoutNotSupportedError","cachedAuthorityParts","currentPart","cachedPart","OIDC","metadataEntity","hostnameAndPort","updateCloudDiscoveryMetadata","cloudDiscoverySource","updateEndpointMetadata","endpointSource","CACHE","resetExpiresAt","setAuthorityMetadata","getEndpointMetadataFromConfig","isAuthoritySameType","isExpired","harcodedMetadata","getEndpointMetadataFromHardcodedValues","getEndpointMetadataFromNetwork","azureRegionConfiguration","azureRegion","updateMetadataWithRegionalInformation","createUnableToGetOpenidConfigError","defaultOpenIdConfigurationEndpoint","detectRegion","AUTO_DETECTION_REQUESTED_SUCCESSFUL","AUTO_DETECTION_REQUESTED_FAILED","CONFIGURED_MATCHES_DETECTED","CONFIGURED_NOT_DETECTED","CONFIGURED_NO_AUTO_DETECTION","replaceWithRegionalInformation","getCloudDiscoveryMetadataFromConfig","getCloudDiscoveryMetadataFromHarcodedValues","getCloudDiscoveryMetadataFromNetwork","cloudDiscoveryMetadata","parsedResponse","getCloudDiscoveryMetadataFromNetworkResponse","createInvalidCloudDiscoveryMetadataError","isInKnownAuthorities","createCloudDiscoveryMetadataFromHost","isCloudInstanceDiscoveryResponse","getDomainFromUrl","authorityString","authorityAzureCloudInstance","isAlias","region","authorityUrlInstance","authorityUrlParts","hostNameAndPort","isPublicCloudAuthority","buildRegionalAuthorityString","authorityUri","createInstance","ServerTelemetryManager","telemetryRequest","cacheOutcome","NO_CACHE_HIT","apiId","wrapperVer","telemetryCacheKey","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","errorCount","cacheFailedRequest","setServerTelemetry","getServerTelemetry","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setCacheOutcome","storageImpl","eventHandler","navigationClient","nativeMessageHandler","clone","BaseInteractionClient","getActiveAccount","validatedRequest","createMissingSshKidError","requestRedirectUri","getCurrentUri","getAbsoluteUrl","telemetryPayload","getWrapperMetadata","requestAuthority","createDiscoveredInstance","StandardInteractionClient","generatedPkceParams","validLogoutRequest","getLogoutHintFromIdTokenClaims","requestAzureCloudOptions","getClientConfiguration","clientConfig","getDiscoveredAuthority","discoveredAuthority","createHashDoesNotContainStateError","platformStateObj","createUnableToParseStateError","createStateInteractionTypeMismatchError","getAuthorityMeasurement","StandardInteractionClientGetDiscoveredAuthority","userAuthority","builtAuthority","generateAuthority","browserState","setRequestState","initializeBaseRequest","FRAGMENT","legacyLoginHint","getLegacyLoginHint","NativeAuthErrorMessage","description","ext","NativeAuthError","PERSISTENT_ERROR","DISABLED","ACCOUNT_UNAVAILABLE","USER_INTERACTION_REQUIRED","USER_CANCEL","NO_NETWORK","RefreshTokenClient","acquireToken","forceCache","acquireTokenByRefreshToken","createEmptyTokenRequestError","createNoAccountInSilentRequestError","isAppMetadataFOCI","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","refreshTokenRequest","acquireTokenMeasurement","RefreshTokenClientExecuteTokenRequest","BaseClientCreateTokenRequestHeaders","REFRESH_TOKEN_GRANT","SilentFlowClient","acquireCachedToken","FORCE_REFRESH","createRefreshRequiredError","NO_CACHED_ACCESS_TOKEN","wasClockTurnedBack","isTokenExpired","CACHED_ACCESS_TOKEN_EXPIRED","REFRESH_CACHED_ACCESS_TOKEN","incrementCacheHits","generateResultFromCacheRecord","SilentCacheClient","silentRequest","SilentCacheClientAcquireToken","initializeServerTelemetryManager","acquireTokenSilent_silentFlow","createSilentFlowClient","silentAuthClient","cachedToken","createSilentLogoutUnsupportedError","provider","nativeStorageImpl","nativeStorageManager","silentCacheClient","NativeInteractionClient","nativeATMeasurement","NativeInteractionClientAcquireToken","initializeNativeRequest","nativeRequest","acquireTokensFromCache","isNativeBroker","messageBody","GetToken","sendMessage","validatedResponse","validateNativeResponse","handleNativeResponse","createSilentCacheRequest","isFatal","navigationOptions","redirectNavigationTimeout","navigateExternal","getCachedNativeRequest","createUserSwitchError","authorityPreferredCache","accountProperties","properties","responseTokenType","shr","responseAccessToken","shrParameters","mats","getMATSFromResponse","isResponseFromCache","MATS","is_cached","remainingProperties","getPrompt","ssoSilent","createNativePromptParameterNotSupportedError","windowTitleSubstring","extraParameters","extendedExpiryToken","handshakeTimeoutMs","extensionId","resolvers","handshakeResolvers","responseId","messageChannel","windowListener","onWindowMessage","NativeMessageHandler","req","channel","tracePii","preferredProvider","sendHandshakeRequest","backupProvider","HandshakeRequest","onChannelMessage","timeoutId","createNativeHandshakeTimeoutError","handshakeResolver","createNativeExtensionNotInstalledError","resolver","Response","createError","HandshakeResponse","nativeExtensionProvider","authCodeModule","authModule","InteractionHandler","networkModule","createEmptyHashError","authCodeResponse","handleFragmentResponse","handleCodeResponseFromServer","validateNonce","nonceKey","cloud_instance_host_name","updateTokenEndpointAuthority","cachedCcsCred","checkCcsCredentials","tokenResponse","cleanRequestByState","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","unloadWindow","nativeStorage","PopupClient","popupName","generatePopupName","popupWindowAttributes","asyncPopups","acquireTokenPopupAsync","openSizedPopup","initializeLogoutRequest","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","initializeAuthorizationRequest","validRequest","initializeAuthorizationCodeRequest","createAuthCodeClient","authClient","isNativeAvailable","fetchNativeAccountIdMeasurement","FetchAccountIdWithNativeBroker","navigateUrl","interactionHandler","popupParameters","initiateAuthRequest","state_1","validateAndExtractStateFromHash","removeThrottle","createNativeConnectionNotEstablishedError","nativeInteractionClient","finally","handleCodeResponseFromHash","logoutPopup","clearCacheOnLogout","logoutUri","waitForLogoutPopup","absoluteUrl","navigateInternal","requestUrl","createEmptyNavigationUriError","windowHashTimeout","cleanPopup","createHashDoesNotContainKnownPropertiesError","createMonitorPopupTimeoutError","popupParams","createEmptyWindowCreatedError","currentWindow","winWidth","winHeight","popupSize","popupPosition","max","cleanRequestByInteractionType","RedirectHandler","cacheCodeRequest","redirectTimeout","RedirectClient","handleBackButton","persisted","getRedirectStartPage","handleRedirectPromise","responseHash","getRedirectResponseHash","loginRequestUrlNormalized","currentUrlNormalized","handleHash","handleHashResult","replaceHash","processHashOnRedirect","homepage","getHomepage","clearHash","cachedHash","getCachedRequest","currentAuthority","getCachedAuthority","requestStartPage","SilentHandler","createMonitorIframeTimeoutError","contentHash","createHiddenIframe","authFrame","SilentIframeClient","SilentIframeClientAcquireToken","createSilentPromptValueError","silentTokenHelper","silentHandler","msalFrame","iframeHashTimeout","SilentRefreshClient","SilentRefreshClientAcquireToken","createRefreshTokenClient","refreshTokenClient","TokenCache","createUnableToLoadTokenError","loadIdToken","loadAccessToken","idAuthToken","SilentAuthCodeClient","createAuthCodeRequiredError","HybridSpaAuthorizationCodeClient","cloudInstanceHostName","BrowserPerformanceMeasurement","getEntriesByName","entriesForMeasurement","duration","BrowserPerformanceClient","visibilityState","startPageVisibility","getPageVisibility","endPageVisibility","userInputAuth","userInputCache","userInputSystem","userInputTelemetry","AAD","DEFAULT_LOGGER_OPTIONS","DEFAULT_BROWSER_SYSTEM_OPTIONS","getBrowserNetworkClient","detectIEOrEdge","nativeBrokerHandshakeTimeout","hybridAuthCodeResponses","cacheOptions","DEFAULT_BROWSER_CACHE_MANAGER","nativeCacheOptions","nativeInternalStorage","ClientApplication","createProvider","blockNativeBrokerCalledBeforeInitialized","loggedInAccounts","redirectResponseKey","nativeClient","redirectClient","createRedirectClient","getRequestCorrelationId","preflightBrowserEnvironmentCheck","isLoggedIn","canUseNative","getNativeAccountId","atPopupMeasurement","acquireTokenNative","createPopupClient","ssoSilentMeasurement","SsoSilent","createSilentIframeClient","silentIframeClient","atbcMeasurement","AcquireTokenByCode","hybridAuthCode_1","acquireTokenByCodeAsync","acquireTokenByCode","createUnableToAcquireTokenFromNativePlatformError","createAuthCodeOrNativeAccountIdRequiredError","createSilentAuthCodeClient","atbrtMeasurement","AcquireTokenByRefreshToken","createSilentRefreshClient","isServerError","isInvalidGrantError","logoutRedirect","allAccounts","blockNonBrowserEnvironment","blockRedirectInIframe","blockAcquireTokenInPopups","createInMemoryRedirectUnavailableError","preflightInteractiveRequest","getAccountInfoByHints","addEventCallback","removeEventCallback","enableAccountStorageEvents","disableAccountStorageEvents","setWrapperMetadata","activeSilentTokenRequests","PublicClientApplication","atsMeasurement","createNoAccountError","silentRequestKey","cachedResponse","acquireTokenSilentAsync","astsAsyncMeasurement","AcquireTokenSilentAsync","createSilentCacheClient","initializeSilentRequest","silentRequest_1","tokenRenewalError","stubbedPublicClientApplication","initialize","createStubPcaInstanceCalledError","getAccountByHomeId","getAccountByUsername","getAccountByLocalId","getTokenCache","getLogger","setLogger","initializeWrapperLibrary","setNavigationClient","getConfiguration","EventMessageUtils","currentStatus","defaultMsalContext","MsalContext","accountArraysAreEqual","arrayA","arrayB","comparisonArray","elementA","elementB","MsalProviderActionType","newInProgress","UNBLOCK_INPROGRESS","EVENT","getInteractionStatusFromEvent","MsalProvider","updateState","msalConfig","rootReducer","curriedGetDefaultMiddleware","devTools","_g","_h","enhancers","finalMiddleware","middlewareEnhancer","finalCompose","compose2","storeEnhancers","configureStore","ReactDOM"],"sourceRoot":""}